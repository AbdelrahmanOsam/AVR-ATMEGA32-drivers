
TrafficLight.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000035b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000035b0  00003624  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000234c  00000000  00000000  0000362c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c6e  00000000  00000000  00005978  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  000065e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006726  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00006896  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  000084df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000093ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a178  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a2d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a565  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ad33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 eb       	ldi	r30, 0xB0	; 176
      68:	f5 e3       	ldi	r31, 0x35	; 53
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <main>
      7a:	0c 94 d6 1a 	jmp	0x35ac	; 0x35ac <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 9f 1a 	jmp	0x353e	; 0x353e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 bb 1a 	jmp	0x3576	; 0x3576 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 9f 1a 	jmp	0x353e	; 0x353e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 bb 1a 	jmp	0x3576	; 0x3576 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 af 1a 	jmp	0x355e	; 0x355e <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 cb 1a 	jmp	0x3596	; 0x3596 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_u8SetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

u8 DIO_u8SetPinDirection(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinDirection)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2e 97       	sbiw	r28, 0x0e	; 14
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortID)
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	28 2f       	mov	r18, r24
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	3e 87       	std	Y+14, r19	; 0x0e
     b5c:	2d 87       	std	Y+13, r18	; 0x0d
     b5e:	8d 85       	ldd	r24, Y+13	; 0x0d
     b60:	9e 85       	ldd	r25, Y+14	; 0x0e
     b62:	81 30       	cpi	r24, 0x01	; 1
     b64:	91 05       	cpc	r25, r1
     b66:	09 f4       	brne	.+2      	; 0xb6a <DIO_u8SetPinDirection+0x34>
     b68:	51 c0       	rjmp	.+162    	; 0xc0c <DIO_u8SetPinDirection+0xd6>
     b6a:	2d 85       	ldd	r18, Y+13	; 0x0d
     b6c:	3e 85       	ldd	r19, Y+14	; 0x0e
     b6e:	22 30       	cpi	r18, 0x02	; 2
     b70:	31 05       	cpc	r19, r1
     b72:	2c f4       	brge	.+10     	; 0xb7e <DIO_u8SetPinDirection+0x48>
     b74:	8d 85       	ldd	r24, Y+13	; 0x0d
     b76:	9e 85       	ldd	r25, Y+14	; 0x0e
     b78:	00 97       	sbiw	r24, 0x00	; 0
     b7a:	71 f0       	breq	.+28     	; 0xb98 <DIO_u8SetPinDirection+0x62>
     b7c:	f5 c0       	rjmp	.+490    	; 0xd68 <DIO_u8SetPinDirection+0x232>
     b7e:	2d 85       	ldd	r18, Y+13	; 0x0d
     b80:	3e 85       	ldd	r19, Y+14	; 0x0e
     b82:	22 30       	cpi	r18, 0x02	; 2
     b84:	31 05       	cpc	r19, r1
     b86:	09 f4       	brne	.+2      	; 0xb8a <DIO_u8SetPinDirection+0x54>
     b88:	7b c0       	rjmp	.+246    	; 0xc80 <DIO_u8SetPinDirection+0x14a>
     b8a:	8d 85       	ldd	r24, Y+13	; 0x0d
     b8c:	9e 85       	ldd	r25, Y+14	; 0x0e
     b8e:	83 30       	cpi	r24, 0x03	; 3
     b90:	91 05       	cpc	r25, r1
     b92:	09 f4       	brne	.+2      	; 0xb96 <DIO_u8SetPinDirection+0x60>
     b94:	af c0       	rjmp	.+350    	; 0xcf4 <DIO_u8SetPinDirection+0x1be>
     b96:	e8 c0       	rjmp	.+464    	; 0xd68 <DIO_u8SetPinDirection+0x232>
	{
		case DIO_PORTA : 
				switch(Copy_u8PinDirection)
     b98:	8c 81       	ldd	r24, Y+4	; 0x04
     b9a:	28 2f       	mov	r18, r24
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	3c 87       	std	Y+12, r19	; 0x0c
     ba0:	2b 87       	std	Y+11, r18	; 0x0b
     ba2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ba4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ba6:	00 97       	sbiw	r24, 0x00	; 0
     ba8:	31 f0       	breq	.+12     	; 0xbb6 <DIO_u8SetPinDirection+0x80>
     baa:	2b 85       	ldd	r18, Y+11	; 0x0b
     bac:	3c 85       	ldd	r19, Y+12	; 0x0c
     bae:	21 30       	cpi	r18, 0x01	; 1
     bb0:	31 05       	cpc	r19, r1
     bb2:	b1 f0       	breq	.+44     	; 0xbe0 <DIO_u8SetPinDirection+0xaa>
     bb4:	29 c0       	rjmp	.+82     	; 0xc08 <DIO_u8SetPinDirection+0xd2>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_DDRA_REG,Copy_u8PinID);
     bb6:	aa e3       	ldi	r26, 0x3A	; 58
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	ea e3       	ldi	r30, 0x3A	; 58
     bbc:	f0 e0       	ldi	r31, 0x00	; 0
     bbe:	80 81       	ld	r24, Z
     bc0:	48 2f       	mov	r20, r24
     bc2:	8b 81       	ldd	r24, Y+3	; 0x03
     bc4:	28 2f       	mov	r18, r24
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	02 2e       	mov	r0, r18
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <DIO_u8SetPinDirection+0x9e>
     bd0:	88 0f       	add	r24, r24
     bd2:	99 1f       	adc	r25, r25
     bd4:	0a 94       	dec	r0
     bd6:	e2 f7       	brpl	.-8      	; 0xbd0 <DIO_u8SetPinDirection+0x9a>
     bd8:	80 95       	com	r24
     bda:	84 23       	and	r24, r20
     bdc:	8c 93       	st	X, r24
     bde:	c5 c0       	rjmp	.+394    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_DDRA_REG,Copy_u8PinID);
     be0:	aa e3       	ldi	r26, 0x3A	; 58
     be2:	b0 e0       	ldi	r27, 0x00	; 0
     be4:	ea e3       	ldi	r30, 0x3A	; 58
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	80 81       	ld	r24, Z
     bea:	48 2f       	mov	r20, r24
     bec:	8b 81       	ldd	r24, Y+3	; 0x03
     bee:	28 2f       	mov	r18, r24
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	02 2e       	mov	r0, r18
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <DIO_u8SetPinDirection+0xc8>
     bfa:	88 0f       	add	r24, r24
     bfc:	99 1f       	adc	r25, r25
     bfe:	0a 94       	dec	r0
     c00:	e2 f7       	brpl	.-8      	; 0xbfa <DIO_u8SetPinDirection+0xc4>
     c02:	84 2b       	or	r24, r20
     c04:	8c 93       	st	X, r24
     c06:	b1 c0       	rjmp	.+354    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					default :		
						Local_u8ErrorState = STD_TYPES_NOK;
     c08:	19 82       	std	Y+1, r1	; 0x01
     c0a:	af c0       	rjmp	.+350    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
				}
		break;
		case DIO_PORTB :
				switch(Copy_u8PinDirection)
     c0c:	8c 81       	ldd	r24, Y+4	; 0x04
     c0e:	28 2f       	mov	r18, r24
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	3a 87       	std	Y+10, r19	; 0x0a
     c14:	29 87       	std	Y+9, r18	; 0x09
     c16:	89 85       	ldd	r24, Y+9	; 0x09
     c18:	9a 85       	ldd	r25, Y+10	; 0x0a
     c1a:	00 97       	sbiw	r24, 0x00	; 0
     c1c:	31 f0       	breq	.+12     	; 0xc2a <DIO_u8SetPinDirection+0xf4>
     c1e:	29 85       	ldd	r18, Y+9	; 0x09
     c20:	3a 85       	ldd	r19, Y+10	; 0x0a
     c22:	21 30       	cpi	r18, 0x01	; 1
     c24:	31 05       	cpc	r19, r1
     c26:	b1 f0       	breq	.+44     	; 0xc54 <DIO_u8SetPinDirection+0x11e>
     c28:	29 c0       	rjmp	.+82     	; 0xc7c <DIO_u8SetPinDirection+0x146>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_DDRB_REG,Copy_u8PinID);
     c2a:	a7 e3       	ldi	r26, 0x37	; 55
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e7 e3       	ldi	r30, 0x37	; 55
     c30:	f0 e0       	ldi	r31, 0x00	; 0
     c32:	80 81       	ld	r24, Z
     c34:	48 2f       	mov	r20, r24
     c36:	8b 81       	ldd	r24, Y+3	; 0x03
     c38:	28 2f       	mov	r18, r24
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	02 2e       	mov	r0, r18
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <DIO_u8SetPinDirection+0x112>
     c44:	88 0f       	add	r24, r24
     c46:	99 1f       	adc	r25, r25
     c48:	0a 94       	dec	r0
     c4a:	e2 f7       	brpl	.-8      	; 0xc44 <DIO_u8SetPinDirection+0x10e>
     c4c:	80 95       	com	r24
     c4e:	84 23       	and	r24, r20
     c50:	8c 93       	st	X, r24
     c52:	8b c0       	rjmp	.+278    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_DDRB_REG,Copy_u8PinID);
     c54:	a7 e3       	ldi	r26, 0x37	; 55
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	e7 e3       	ldi	r30, 0x37	; 55
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	48 2f       	mov	r20, r24
     c60:	8b 81       	ldd	r24, Y+3	; 0x03
     c62:	28 2f       	mov	r18, r24
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	02 2e       	mov	r0, r18
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <DIO_u8SetPinDirection+0x13c>
     c6e:	88 0f       	add	r24, r24
     c70:	99 1f       	adc	r25, r25
     c72:	0a 94       	dec	r0
     c74:	e2 f7       	brpl	.-8      	; 0xc6e <DIO_u8SetPinDirection+0x138>
     c76:	84 2b       	or	r24, r20
     c78:	8c 93       	st	X, r24
     c7a:	77 c0       	rjmp	.+238    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     c7c:	19 82       	std	Y+1, r1	; 0x01
     c7e:	75 c0       	rjmp	.+234    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
				}
		break;
		case DIO_PORTC :
				switch(Copy_u8PinDirection)
     c80:	8c 81       	ldd	r24, Y+4	; 0x04
     c82:	28 2f       	mov	r18, r24
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	38 87       	std	Y+8, r19	; 0x08
     c88:	2f 83       	std	Y+7, r18	; 0x07
     c8a:	8f 81       	ldd	r24, Y+7	; 0x07
     c8c:	98 85       	ldd	r25, Y+8	; 0x08
     c8e:	00 97       	sbiw	r24, 0x00	; 0
     c90:	31 f0       	breq	.+12     	; 0xc9e <DIO_u8SetPinDirection+0x168>
     c92:	2f 81       	ldd	r18, Y+7	; 0x07
     c94:	38 85       	ldd	r19, Y+8	; 0x08
     c96:	21 30       	cpi	r18, 0x01	; 1
     c98:	31 05       	cpc	r19, r1
     c9a:	b1 f0       	breq	.+44     	; 0xcc8 <DIO_u8SetPinDirection+0x192>
     c9c:	29 c0       	rjmp	.+82     	; 0xcf0 <DIO_u8SetPinDirection+0x1ba>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_DDRC_REG,Copy_u8PinID);
     c9e:	a4 e3       	ldi	r26, 0x34	; 52
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	e4 e3       	ldi	r30, 0x34	; 52
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	48 2f       	mov	r20, r24
     caa:	8b 81       	ldd	r24, Y+3	; 0x03
     cac:	28 2f       	mov	r18, r24
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	02 2e       	mov	r0, r18
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <DIO_u8SetPinDirection+0x186>
     cb8:	88 0f       	add	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	0a 94       	dec	r0
     cbe:	e2 f7       	brpl	.-8      	; 0xcb8 <DIO_u8SetPinDirection+0x182>
     cc0:	80 95       	com	r24
     cc2:	84 23       	and	r24, r20
     cc4:	8c 93       	st	X, r24
     cc6:	51 c0       	rjmp	.+162    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_DDRC_REG,Copy_u8PinID);
     cc8:	a4 e3       	ldi	r26, 0x34	; 52
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	e4 e3       	ldi	r30, 0x34	; 52
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	80 81       	ld	r24, Z
     cd2:	48 2f       	mov	r20, r24
     cd4:	8b 81       	ldd	r24, Y+3	; 0x03
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	02 2e       	mov	r0, r18
     ce0:	02 c0       	rjmp	.+4      	; 0xce6 <DIO_u8SetPinDirection+0x1b0>
     ce2:	88 0f       	add	r24, r24
     ce4:	99 1f       	adc	r25, r25
     ce6:	0a 94       	dec	r0
     ce8:	e2 f7       	brpl	.-8      	; 0xce2 <DIO_u8SetPinDirection+0x1ac>
     cea:	84 2b       	or	r24, r20
     cec:	8c 93       	st	X, r24
     cee:	3d c0       	rjmp	.+122    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     cf0:	19 82       	std	Y+1, r1	; 0x01
     cf2:	3b c0       	rjmp	.+118    	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
				}
		break;
		case DIO_PORTD :
				switch(Copy_u8PinDirection)
     cf4:	8c 81       	ldd	r24, Y+4	; 0x04
     cf6:	28 2f       	mov	r18, r24
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	3e 83       	std	Y+6, r19	; 0x06
     cfc:	2d 83       	std	Y+5, r18	; 0x05
     cfe:	8d 81       	ldd	r24, Y+5	; 0x05
     d00:	9e 81       	ldd	r25, Y+6	; 0x06
     d02:	00 97       	sbiw	r24, 0x00	; 0
     d04:	31 f0       	breq	.+12     	; 0xd12 <DIO_u8SetPinDirection+0x1dc>
     d06:	2d 81       	ldd	r18, Y+5	; 0x05
     d08:	3e 81       	ldd	r19, Y+6	; 0x06
     d0a:	21 30       	cpi	r18, 0x01	; 1
     d0c:	31 05       	cpc	r19, r1
     d0e:	b1 f0       	breq	.+44     	; 0xd3c <DIO_u8SetPinDirection+0x206>
     d10:	29 c0       	rjmp	.+82     	; 0xd64 <DIO_u8SetPinDirection+0x22e>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_DDRD_REG,Copy_u8PinID);
     d12:	a1 e3       	ldi	r26, 0x31	; 49
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	e1 e3       	ldi	r30, 0x31	; 49
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	48 2f       	mov	r20, r24
     d1e:	8b 81       	ldd	r24, Y+3	; 0x03
     d20:	28 2f       	mov	r18, r24
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	02 2e       	mov	r0, r18
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <DIO_u8SetPinDirection+0x1fa>
     d2c:	88 0f       	add	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	0a 94       	dec	r0
     d32:	e2 f7       	brpl	.-8      	; 0xd2c <DIO_u8SetPinDirection+0x1f6>
     d34:	80 95       	com	r24
     d36:	84 23       	and	r24, r20
     d38:	8c 93       	st	X, r24
     d3a:	17 c0       	rjmp	.+46     	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_DDRD_REG,Copy_u8PinID);
     d3c:	a1 e3       	ldi	r26, 0x31	; 49
     d3e:	b0 e0       	ldi	r27, 0x00	; 0
     d40:	e1 e3       	ldi	r30, 0x31	; 49
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	80 81       	ld	r24, Z
     d46:	48 2f       	mov	r20, r24
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	28 2f       	mov	r18, r24
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	02 2e       	mov	r0, r18
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <DIO_u8SetPinDirection+0x224>
     d56:	88 0f       	add	r24, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	0a 94       	dec	r0
     d5c:	e2 f7       	brpl	.-8      	; 0xd56 <DIO_u8SetPinDirection+0x220>
     d5e:	84 2b       	or	r24, r20
     d60:	8c 93       	st	X, r24
     d62:	03 c0       	rjmp	.+6      	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     d64:	19 82       	std	Y+1, r1	; 0x01
     d66:	01 c0       	rjmp	.+2      	; 0xd6a <DIO_u8SetPinDirection+0x234>
					break;
				}
		break;
		
		default : 	Local_u8ErrorState = STD_TYPES_NOK;
     d68:	19 82       	std	Y+1, r1	; 0x01
		break;
	}
	return Local_u8ErrorState;
     d6a:	89 81       	ldd	r24, Y+1	; 0x01
}
     d6c:	2e 96       	adiw	r28, 0x0e	; 14
     d6e:	0f b6       	in	r0, 0x3f	; 63
     d70:	f8 94       	cli
     d72:	de bf       	out	0x3e, r29	; 62
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	cd bf       	out	0x3d, r28	; 61
     d78:	cf 91       	pop	r28
     d7a:	df 91       	pop	r29
     d7c:	08 95       	ret

00000d7e <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinValue)
{
     d7e:	df 93       	push	r29
     d80:	cf 93       	push	r28
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	2e 97       	sbiw	r28, 0x0e	; 14
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	cd bf       	out	0x3d, r28	; 61
     d92:	8a 83       	std	Y+2, r24	; 0x02
     d94:	6b 83       	std	Y+3, r22	; 0x03
     d96:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortID)
     d9c:	8a 81       	ldd	r24, Y+2	; 0x02
     d9e:	28 2f       	mov	r18, r24
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	3e 87       	std	Y+14, r19	; 0x0e
     da4:	2d 87       	std	Y+13, r18	; 0x0d
     da6:	8d 85       	ldd	r24, Y+13	; 0x0d
     da8:	9e 85       	ldd	r25, Y+14	; 0x0e
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	91 05       	cpc	r25, r1
     dae:	09 f4       	brne	.+2      	; 0xdb2 <DIO_u8SetPinValue+0x34>
     db0:	51 c0       	rjmp	.+162    	; 0xe54 <DIO_u8SetPinValue+0xd6>
     db2:	2d 85       	ldd	r18, Y+13	; 0x0d
     db4:	3e 85       	ldd	r19, Y+14	; 0x0e
     db6:	22 30       	cpi	r18, 0x02	; 2
     db8:	31 05       	cpc	r19, r1
     dba:	2c f4       	brge	.+10     	; 0xdc6 <DIO_u8SetPinValue+0x48>
     dbc:	8d 85       	ldd	r24, Y+13	; 0x0d
     dbe:	9e 85       	ldd	r25, Y+14	; 0x0e
     dc0:	00 97       	sbiw	r24, 0x00	; 0
     dc2:	71 f0       	breq	.+28     	; 0xde0 <DIO_u8SetPinValue+0x62>
     dc4:	f5 c0       	rjmp	.+490    	; 0xfb0 <DIO_u8SetPinValue+0x232>
     dc6:	2d 85       	ldd	r18, Y+13	; 0x0d
     dc8:	3e 85       	ldd	r19, Y+14	; 0x0e
     dca:	22 30       	cpi	r18, 0x02	; 2
     dcc:	31 05       	cpc	r19, r1
     dce:	09 f4       	brne	.+2      	; 0xdd2 <DIO_u8SetPinValue+0x54>
     dd0:	7b c0       	rjmp	.+246    	; 0xec8 <DIO_u8SetPinValue+0x14a>
     dd2:	8d 85       	ldd	r24, Y+13	; 0x0d
     dd4:	9e 85       	ldd	r25, Y+14	; 0x0e
     dd6:	83 30       	cpi	r24, 0x03	; 3
     dd8:	91 05       	cpc	r25, r1
     dda:	09 f4       	brne	.+2      	; 0xdde <DIO_u8SetPinValue+0x60>
     ddc:	af c0       	rjmp	.+350    	; 0xf3c <DIO_u8SetPinValue+0x1be>
     dde:	e8 c0       	rjmp	.+464    	; 0xfb0 <DIO_u8SetPinValue+0x232>
	{
		case DIO_PORTA : 
				switch(Copy_u8PinValue)
     de0:	8c 81       	ldd	r24, Y+4	; 0x04
     de2:	28 2f       	mov	r18, r24
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	3c 87       	std	Y+12, r19	; 0x0c
     de8:	2b 87       	std	Y+11, r18	; 0x0b
     dea:	8b 85       	ldd	r24, Y+11	; 0x0b
     dec:	9c 85       	ldd	r25, Y+12	; 0x0c
     dee:	00 97       	sbiw	r24, 0x00	; 0
     df0:	31 f0       	breq	.+12     	; 0xdfe <DIO_u8SetPinValue+0x80>
     df2:	2b 85       	ldd	r18, Y+11	; 0x0b
     df4:	3c 85       	ldd	r19, Y+12	; 0x0c
     df6:	21 30       	cpi	r18, 0x01	; 1
     df8:	31 05       	cpc	r19, r1
     dfa:	b1 f0       	breq	.+44     	; 0xe28 <DIO_u8SetPinValue+0xaa>
     dfc:	29 c0       	rjmp	.+82     	; 0xe50 <DIO_u8SetPinValue+0xd2>
				{
					case DIO_LOW :
						CLEAR_BIT(DIO_PORTA_REG,Copy_u8PinID);
     dfe:	ab e3       	ldi	r26, 0x3B	; 59
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	eb e3       	ldi	r30, 0x3B	; 59
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	80 81       	ld	r24, Z
     e08:	48 2f       	mov	r20, r24
     e0a:	8b 81       	ldd	r24, Y+3	; 0x03
     e0c:	28 2f       	mov	r18, r24
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	81 e0       	ldi	r24, 0x01	; 1
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	02 2e       	mov	r0, r18
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <DIO_u8SetPinValue+0x9e>
     e18:	88 0f       	add	r24, r24
     e1a:	99 1f       	adc	r25, r25
     e1c:	0a 94       	dec	r0
     e1e:	e2 f7       	brpl	.-8      	; 0xe18 <DIO_u8SetPinValue+0x9a>
     e20:	80 95       	com	r24
     e22:	84 23       	and	r24, r20
     e24:	8c 93       	st	X, r24
     e26:	c5 c0       	rjmp	.+394    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					case DIO_HIGH :
						SET_BIT(DIO_PORTA_REG,Copy_u8PinID);
     e28:	ab e3       	ldi	r26, 0x3B	; 59
     e2a:	b0 e0       	ldi	r27, 0x00	; 0
     e2c:	eb e3       	ldi	r30, 0x3B	; 59
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	80 81       	ld	r24, Z
     e32:	48 2f       	mov	r20, r24
     e34:	8b 81       	ldd	r24, Y+3	; 0x03
     e36:	28 2f       	mov	r18, r24
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	02 2e       	mov	r0, r18
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <DIO_u8SetPinValue+0xc8>
     e42:	88 0f       	add	r24, r24
     e44:	99 1f       	adc	r25, r25
     e46:	0a 94       	dec	r0
     e48:	e2 f7       	brpl	.-8      	; 0xe42 <DIO_u8SetPinValue+0xc4>
     e4a:	84 2b       	or	r24, r20
     e4c:	8c 93       	st	X, r24
     e4e:	b1 c0       	rjmp	.+354    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     e50:	19 82       	std	Y+1, r1	; 0x01
     e52:	af c0       	rjmp	.+350    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
				}
		break;
		case DIO_PORTB :
				switch(Copy_u8PinValue)
     e54:	8c 81       	ldd	r24, Y+4	; 0x04
     e56:	28 2f       	mov	r18, r24
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	3a 87       	std	Y+10, r19	; 0x0a
     e5c:	29 87       	std	Y+9, r18	; 0x09
     e5e:	89 85       	ldd	r24, Y+9	; 0x09
     e60:	9a 85       	ldd	r25, Y+10	; 0x0a
     e62:	00 97       	sbiw	r24, 0x00	; 0
     e64:	31 f0       	breq	.+12     	; 0xe72 <DIO_u8SetPinValue+0xf4>
     e66:	29 85       	ldd	r18, Y+9	; 0x09
     e68:	3a 85       	ldd	r19, Y+10	; 0x0a
     e6a:	21 30       	cpi	r18, 0x01	; 1
     e6c:	31 05       	cpc	r19, r1
     e6e:	b1 f0       	breq	.+44     	; 0xe9c <DIO_u8SetPinValue+0x11e>
     e70:	29 c0       	rjmp	.+82     	; 0xec4 <DIO_u8SetPinValue+0x146>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_PORTB_REG,Copy_u8PinID);
     e72:	a8 e3       	ldi	r26, 0x38	; 56
     e74:	b0 e0       	ldi	r27, 0x00	; 0
     e76:	e8 e3       	ldi	r30, 0x38	; 56
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	80 81       	ld	r24, Z
     e7c:	48 2f       	mov	r20, r24
     e7e:	8b 81       	ldd	r24, Y+3	; 0x03
     e80:	28 2f       	mov	r18, r24
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	02 2e       	mov	r0, r18
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <DIO_u8SetPinValue+0x112>
     e8c:	88 0f       	add	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	0a 94       	dec	r0
     e92:	e2 f7       	brpl	.-8      	; 0xe8c <DIO_u8SetPinValue+0x10e>
     e94:	80 95       	com	r24
     e96:	84 23       	and	r24, r20
     e98:	8c 93       	st	X, r24
     e9a:	8b c0       	rjmp	.+278    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_PORTB_REG,Copy_u8PinID);
     e9c:	a8 e3       	ldi	r26, 0x38	; 56
     e9e:	b0 e0       	ldi	r27, 0x00	; 0
     ea0:	e8 e3       	ldi	r30, 0x38	; 56
     ea2:	f0 e0       	ldi	r31, 0x00	; 0
     ea4:	80 81       	ld	r24, Z
     ea6:	48 2f       	mov	r20, r24
     ea8:	8b 81       	ldd	r24, Y+3	; 0x03
     eaa:	28 2f       	mov	r18, r24
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	02 2e       	mov	r0, r18
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <DIO_u8SetPinValue+0x13c>
     eb6:	88 0f       	add	r24, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	0a 94       	dec	r0
     ebc:	e2 f7       	brpl	.-8      	; 0xeb6 <DIO_u8SetPinValue+0x138>
     ebe:	84 2b       	or	r24, r20
     ec0:	8c 93       	st	X, r24
     ec2:	77 c0       	rjmp	.+238    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     ec4:	19 82       	std	Y+1, r1	; 0x01
     ec6:	75 c0       	rjmp	.+234    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
				}
		break;
		case DIO_PORTC :
				switch(Copy_u8PinValue)
     ec8:	8c 81       	ldd	r24, Y+4	; 0x04
     eca:	28 2f       	mov	r18, r24
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	38 87       	std	Y+8, r19	; 0x08
     ed0:	2f 83       	std	Y+7, r18	; 0x07
     ed2:	8f 81       	ldd	r24, Y+7	; 0x07
     ed4:	98 85       	ldd	r25, Y+8	; 0x08
     ed6:	00 97       	sbiw	r24, 0x00	; 0
     ed8:	31 f0       	breq	.+12     	; 0xee6 <DIO_u8SetPinValue+0x168>
     eda:	2f 81       	ldd	r18, Y+7	; 0x07
     edc:	38 85       	ldd	r19, Y+8	; 0x08
     ede:	21 30       	cpi	r18, 0x01	; 1
     ee0:	31 05       	cpc	r19, r1
     ee2:	b1 f0       	breq	.+44     	; 0xf10 <DIO_u8SetPinValue+0x192>
     ee4:	29 c0       	rjmp	.+82     	; 0xf38 <DIO_u8SetPinValue+0x1ba>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_PORTC_REG,Copy_u8PinID);
     ee6:	a5 e3       	ldi	r26, 0x35	; 53
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	e5 e3       	ldi	r30, 0x35	; 53
     eec:	f0 e0       	ldi	r31, 0x00	; 0
     eee:	80 81       	ld	r24, Z
     ef0:	48 2f       	mov	r20, r24
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	28 2f       	mov	r18, r24
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	81 e0       	ldi	r24, 0x01	; 1
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	02 2e       	mov	r0, r18
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <DIO_u8SetPinValue+0x186>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	0a 94       	dec	r0
     f06:	e2 f7       	brpl	.-8      	; 0xf00 <DIO_u8SetPinValue+0x182>
     f08:	80 95       	com	r24
     f0a:	84 23       	and	r24, r20
     f0c:	8c 93       	st	X, r24
     f0e:	51 c0       	rjmp	.+162    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_PORTC_REG,Copy_u8PinID);
     f10:	a5 e3       	ldi	r26, 0x35	; 53
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	e5 e3       	ldi	r30, 0x35	; 53
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	48 2f       	mov	r20, r24
     f1c:	8b 81       	ldd	r24, Y+3	; 0x03
     f1e:	28 2f       	mov	r18, r24
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 2e       	mov	r0, r18
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <DIO_u8SetPinValue+0x1b0>
     f2a:	88 0f       	add	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	0a 94       	dec	r0
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <DIO_u8SetPinValue+0x1ac>
     f32:	84 2b       	or	r24, r20
     f34:	8c 93       	st	X, r24
     f36:	3d c0       	rjmp	.+122    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     f38:	19 82       	std	Y+1, r1	; 0x01
     f3a:	3b c0       	rjmp	.+118    	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
				}
		break;
		case DIO_PORTD :
				switch(Copy_u8PinValue)
     f3c:	8c 81       	ldd	r24, Y+4	; 0x04
     f3e:	28 2f       	mov	r18, r24
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	3e 83       	std	Y+6, r19	; 0x06
     f44:	2d 83       	std	Y+5, r18	; 0x05
     f46:	8d 81       	ldd	r24, Y+5	; 0x05
     f48:	9e 81       	ldd	r25, Y+6	; 0x06
     f4a:	00 97       	sbiw	r24, 0x00	; 0
     f4c:	31 f0       	breq	.+12     	; 0xf5a <DIO_u8SetPinValue+0x1dc>
     f4e:	2d 81       	ldd	r18, Y+5	; 0x05
     f50:	3e 81       	ldd	r19, Y+6	; 0x06
     f52:	21 30       	cpi	r18, 0x01	; 1
     f54:	31 05       	cpc	r19, r1
     f56:	b1 f0       	breq	.+44     	; 0xf84 <DIO_u8SetPinValue+0x206>
     f58:	29 c0       	rjmp	.+82     	; 0xfac <DIO_u8SetPinValue+0x22e>
				{
					case DIO_INPUT :
						CLEAR_BIT(DIO_PORTD_REG,Copy_u8PinID);
     f5a:	a2 e3       	ldi	r26, 0x32	; 50
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e2 e3       	ldi	r30, 0x32	; 50
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	48 2f       	mov	r20, r24
     f66:	8b 81       	ldd	r24, Y+3	; 0x03
     f68:	28 2f       	mov	r18, r24
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	02 2e       	mov	r0, r18
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <DIO_u8SetPinValue+0x1fa>
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	0a 94       	dec	r0
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <DIO_u8SetPinValue+0x1f6>
     f7c:	80 95       	com	r24
     f7e:	84 23       	and	r24, r20
     f80:	8c 93       	st	X, r24
     f82:	17 c0       	rjmp	.+46     	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					case DIO_OUTPUT :
						SET_BIT(DIO_PORTD_REG,Copy_u8PinID);
     f84:	a2 e3       	ldi	r26, 0x32	; 50
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	e2 e3       	ldi	r30, 0x32	; 50
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	80 81       	ld	r24, Z
     f8e:	48 2f       	mov	r20, r24
     f90:	8b 81       	ldd	r24, Y+3	; 0x03
     f92:	28 2f       	mov	r18, r24
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	02 2e       	mov	r0, r18
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <DIO_u8SetPinValue+0x224>
     f9e:	88 0f       	add	r24, r24
     fa0:	99 1f       	adc	r25, r25
     fa2:	0a 94       	dec	r0
     fa4:	e2 f7       	brpl	.-8      	; 0xf9e <DIO_u8SetPinValue+0x220>
     fa6:	84 2b       	or	r24, r20
     fa8:	8c 93       	st	X, r24
     faa:	03 c0       	rjmp	.+6      	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
					default :
						Local_u8ErrorState = STD_TYPES_NOK;
     fac:	19 82       	std	Y+1, r1	; 0x01
     fae:	01 c0       	rjmp	.+2      	; 0xfb2 <DIO_u8SetPinValue+0x234>
					break;
				}
		break;
		default :
			Local_u8ErrorState = STD_TYPES_NOK;
     fb0:	19 82       	std	Y+1, r1	; 0x01
		break;
	}
	
	return Local_u8ErrorState;
     fb2:	89 81       	ldd	r24, Y+1	; 0x01
}
     fb4:	2e 96       	adiw	r28, 0x0e	; 14
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	cf 91       	pop	r28
     fc2:	df 91       	pop	r29
     fc4:	08 95       	ret

00000fc6 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID)
{
     fc6:	df 93       	push	r29
     fc8:	cf 93       	push	r28
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	27 97       	sbiw	r28, 0x07	; 7
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	de bf       	out	0x3e, r29	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	8b 83       	std	Y+3, r24	; 0x03
     fdc:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	8a 83       	std	Y+2, r24	; 0x02
	
	u8 Local_u8ReturnedPinValue;
	switch(Copy_u8PortID)
     fe2:	8b 81       	ldd	r24, Y+3	; 0x03
     fe4:	28 2f       	mov	r18, r24
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	3f 83       	std	Y+7, r19	; 0x07
     fea:	2e 83       	std	Y+6, r18	; 0x06
     fec:	4e 81       	ldd	r20, Y+6	; 0x06
     fee:	5f 81       	ldd	r21, Y+7	; 0x07
     ff0:	41 30       	cpi	r20, 0x01	; 1
     ff2:	51 05       	cpc	r21, r1
     ff4:	41 f1       	breq	.+80     	; 0x1046 <DIO_u8GetPinValue+0x80>
     ff6:	8e 81       	ldd	r24, Y+6	; 0x06
     ff8:	9f 81       	ldd	r25, Y+7	; 0x07
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	91 05       	cpc	r25, r1
     ffe:	34 f4       	brge	.+12     	; 0x100c <DIO_u8GetPinValue+0x46>
    1000:	2e 81       	ldd	r18, Y+6	; 0x06
    1002:	3f 81       	ldd	r19, Y+7	; 0x07
    1004:	21 15       	cp	r18, r1
    1006:	31 05       	cpc	r19, r1
    1008:	61 f0       	breq	.+24     	; 0x1022 <DIO_u8GetPinValue+0x5c>
    100a:	53 c0       	rjmp	.+166    	; 0x10b2 <DIO_u8GetPinValue+0xec>
    100c:	4e 81       	ldd	r20, Y+6	; 0x06
    100e:	5f 81       	ldd	r21, Y+7	; 0x07
    1010:	42 30       	cpi	r20, 0x02	; 2
    1012:	51 05       	cpc	r21, r1
    1014:	51 f1       	breq	.+84     	; 0x106a <DIO_u8GetPinValue+0xa4>
    1016:	8e 81       	ldd	r24, Y+6	; 0x06
    1018:	9f 81       	ldd	r25, Y+7	; 0x07
    101a:	83 30       	cpi	r24, 0x03	; 3
    101c:	91 05       	cpc	r25, r1
    101e:	b9 f1       	breq	.+110    	; 0x108e <DIO_u8GetPinValue+0xc8>
    1020:	48 c0       	rjmp	.+144    	; 0x10b2 <DIO_u8GetPinValue+0xec>
	{
		case DIO_PORTA :
				Local_u8ReturnedPinValue = GET_BIT(DIO_PINA_REG,Copy_u8PinID);
    1022:	e9 e3       	ldi	r30, 0x39	; 57
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	80 81       	ld	r24, Z
    1028:	28 2f       	mov	r18, r24
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	8c 81       	ldd	r24, Y+4	; 0x04
    102e:	88 2f       	mov	r24, r24
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	a9 01       	movw	r20, r18
    1034:	02 c0       	rjmp	.+4      	; 0x103a <DIO_u8GetPinValue+0x74>
    1036:	55 95       	asr	r21
    1038:	47 95       	ror	r20
    103a:	8a 95       	dec	r24
    103c:	e2 f7       	brpl	.-8      	; 0x1036 <DIO_u8GetPinValue+0x70>
    103e:	ca 01       	movw	r24, r20
    1040:	81 70       	andi	r24, 0x01	; 1
    1042:	89 83       	std	Y+1, r24	; 0x01
    1044:	37 c0       	rjmp	.+110    	; 0x10b4 <DIO_u8GetPinValue+0xee>
		break;
		case DIO_PORTB :
				Local_u8ReturnedPinValue = GET_BIT(DIO_PINB_REG,Copy_u8PinID);
    1046:	e6 e3       	ldi	r30, 0x36	; 54
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	80 81       	ld	r24, Z
    104c:	28 2f       	mov	r18, r24
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	8c 81       	ldd	r24, Y+4	; 0x04
    1052:	88 2f       	mov	r24, r24
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	a9 01       	movw	r20, r18
    1058:	02 c0       	rjmp	.+4      	; 0x105e <DIO_u8GetPinValue+0x98>
    105a:	55 95       	asr	r21
    105c:	47 95       	ror	r20
    105e:	8a 95       	dec	r24
    1060:	e2 f7       	brpl	.-8      	; 0x105a <DIO_u8GetPinValue+0x94>
    1062:	ca 01       	movw	r24, r20
    1064:	81 70       	andi	r24, 0x01	; 1
    1066:	89 83       	std	Y+1, r24	; 0x01
    1068:	25 c0       	rjmp	.+74     	; 0x10b4 <DIO_u8GetPinValue+0xee>
		break;
		case DIO_PORTC :
				Local_u8ReturnedPinValue = GET_BIT(DIO_PINC_REG,Copy_u8PinID);
    106a:	e3 e3       	ldi	r30, 0x33	; 51
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	80 81       	ld	r24, Z
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	8c 81       	ldd	r24, Y+4	; 0x04
    1076:	88 2f       	mov	r24, r24
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	a9 01       	movw	r20, r18
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <DIO_u8GetPinValue+0xbc>
    107e:	55 95       	asr	r21
    1080:	47 95       	ror	r20
    1082:	8a 95       	dec	r24
    1084:	e2 f7       	brpl	.-8      	; 0x107e <DIO_u8GetPinValue+0xb8>
    1086:	ca 01       	movw	r24, r20
    1088:	81 70       	andi	r24, 0x01	; 1
    108a:	89 83       	std	Y+1, r24	; 0x01
    108c:	13 c0       	rjmp	.+38     	; 0x10b4 <DIO_u8GetPinValue+0xee>
		break;
		case DIO_PORTD :
				Local_u8ReturnedPinValue = GET_BIT(DIO_PIND_REG,Copy_u8PinID);
    108e:	e0 e3       	ldi	r30, 0x30	; 48
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	80 81       	ld	r24, Z
    1094:	28 2f       	mov	r18, r24
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	8c 81       	ldd	r24, Y+4	; 0x04
    109a:	88 2f       	mov	r24, r24
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	a9 01       	movw	r20, r18
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <DIO_u8GetPinValue+0xe0>
    10a2:	55 95       	asr	r21
    10a4:	47 95       	ror	r20
    10a6:	8a 95       	dec	r24
    10a8:	e2 f7       	brpl	.-8      	; 0x10a2 <DIO_u8GetPinValue+0xdc>
    10aa:	ca 01       	movw	r24, r20
    10ac:	81 70       	andi	r24, 0x01	; 1
    10ae:	89 83       	std	Y+1, r24	; 0x01
    10b0:	01 c0       	rjmp	.+2      	; 0x10b4 <DIO_u8GetPinValue+0xee>
		break;
		default :
			Local_u8ErrorState = STD_TYPES_NOK;
    10b2:	1a 82       	std	Y+2, r1	; 0x02
		break;
	}
	if (Local_u8ErrorState == STD_TYPES_OK)
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	81 30       	cpi	r24, 0x01	; 1
    10b8:	19 f4       	brne	.+6      	; 0x10c0 <DIO_u8GetPinValue+0xfa>
	{
		return Local_u8ReturnedPinValue;
    10ba:	59 81       	ldd	r21, Y+1	; 0x01
    10bc:	5d 83       	std	Y+5, r21	; 0x05
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <DIO_u8GetPinValue+0x100>
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    10c0:	1a 82       	std	Y+2, r1	; 0x02
		return Local_u8ErrorState;
    10c2:	8a 81       	ldd	r24, Y+2	; 0x02
    10c4:	8d 83       	std	Y+5, r24	; 0x05
    10c6:	8d 81       	ldd	r24, Y+5	; 0x05
	}
}
    10c8:	27 96       	adiw	r28, 0x07	; 7
    10ca:	0f b6       	in	r0, 0x3f	; 63
    10cc:	f8 94       	cli
    10ce:	de bf       	out	0x3e, r29	; 62
    10d0:	0f be       	out	0x3f, r0	; 63
    10d2:	cd bf       	out	0x3d, r28	; 61
    10d4:	cf 91       	pop	r28
    10d6:	df 91       	pop	r29
    10d8:	08 95       	ret

000010da <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection(u8 Copy_u8PortID,u8 Copy_u8PortDirection)
{
    10da:	df 93       	push	r29
    10dc:	cf 93       	push	r28
    10de:	00 d0       	rcall	.+0      	; 0x10e0 <DIO_u8SetPortDirection+0x6>
    10e0:	00 d0       	rcall	.+0      	; 0x10e2 <DIO_u8SetPortDirection+0x8>
    10e2:	0f 92       	push	r0
    10e4:	cd b7       	in	r28, 0x3d	; 61
    10e6:	de b7       	in	r29, 0x3e	; 62
    10e8:	8a 83       	std	Y+2, r24	; 0x02
    10ea:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID)
    10f0:	8a 81       	ldd	r24, Y+2	; 0x02
    10f2:	28 2f       	mov	r18, r24
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	3d 83       	std	Y+5, r19	; 0x05
    10f8:	2c 83       	std	Y+4, r18	; 0x04
    10fa:	8c 81       	ldd	r24, Y+4	; 0x04
    10fc:	9d 81       	ldd	r25, Y+5	; 0x05
    10fe:	81 30       	cpi	r24, 0x01	; 1
    1100:	91 05       	cpc	r25, r1
    1102:	d1 f0       	breq	.+52     	; 0x1138 <DIO_u8SetPortDirection+0x5e>
    1104:	2c 81       	ldd	r18, Y+4	; 0x04
    1106:	3d 81       	ldd	r19, Y+5	; 0x05
    1108:	22 30       	cpi	r18, 0x02	; 2
    110a:	31 05       	cpc	r19, r1
    110c:	2c f4       	brge	.+10     	; 0x1118 <DIO_u8SetPortDirection+0x3e>
    110e:	8c 81       	ldd	r24, Y+4	; 0x04
    1110:	9d 81       	ldd	r25, Y+5	; 0x05
    1112:	00 97       	sbiw	r24, 0x00	; 0
    1114:	61 f0       	breq	.+24     	; 0x112e <DIO_u8SetPortDirection+0x54>
    1116:	1f c0       	rjmp	.+62     	; 0x1156 <DIO_u8SetPortDirection+0x7c>
    1118:	2c 81       	ldd	r18, Y+4	; 0x04
    111a:	3d 81       	ldd	r19, Y+5	; 0x05
    111c:	22 30       	cpi	r18, 0x02	; 2
    111e:	31 05       	cpc	r19, r1
    1120:	81 f0       	breq	.+32     	; 0x1142 <DIO_u8SetPortDirection+0x68>
    1122:	8c 81       	ldd	r24, Y+4	; 0x04
    1124:	9d 81       	ldd	r25, Y+5	; 0x05
    1126:	83 30       	cpi	r24, 0x03	; 3
    1128:	91 05       	cpc	r25, r1
    112a:	81 f0       	breq	.+32     	; 0x114c <DIO_u8SetPortDirection+0x72>
    112c:	14 c0       	rjmp	.+40     	; 0x1156 <DIO_u8SetPortDirection+0x7c>
	{
		case DIO_PORTA :
				SET_REG(DIO_DDRA_REG,Copy_u8PortDirection);
    112e:	ea e3       	ldi	r30, 0x3A	; 58
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	8b 81       	ldd	r24, Y+3	; 0x03
    1134:	80 83       	st	Z, r24
    1136:	10 c0       	rjmp	.+32     	; 0x1158 <DIO_u8SetPortDirection+0x7e>
		break;
		case DIO_PORTB :
				SET_REG(DIO_DDRB_REG,Copy_u8PortDirection);
    1138:	e7 e3       	ldi	r30, 0x37	; 55
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	8b 81       	ldd	r24, Y+3	; 0x03
    113e:	80 83       	st	Z, r24
    1140:	0b c0       	rjmp	.+22     	; 0x1158 <DIO_u8SetPortDirection+0x7e>
		break;
		case DIO_PORTC :
				SET_REG(DIO_DDRC_REG,Copy_u8PortDirection);
    1142:	e4 e3       	ldi	r30, 0x34	; 52
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	80 83       	st	Z, r24
    114a:	06 c0       	rjmp	.+12     	; 0x1158 <DIO_u8SetPortDirection+0x7e>
		break;
		case DIO_PORTD :
				SET_REG(DIO_DDRD_REG,Copy_u8PortDirection);
    114c:	e1 e3       	ldi	r30, 0x31	; 49
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	8b 81       	ldd	r24, Y+3	; 0x03
    1152:	80 83       	st	Z, r24
    1154:	01 c0       	rjmp	.+2      	; 0x1158 <DIO_u8SetPortDirection+0x7e>
		break;
		default :
				Local_u8ErrorState = STD_TYPES_NOK;
    1156:	19 82       	std	Y+1, r1	; 0x01
		break;
	}
	return Local_u8ErrorState;
    1158:	89 81       	ldd	r24, Y+1	; 0x01
}
    115a:	0f 90       	pop	r0
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	cf 91       	pop	r28
    1166:	df 91       	pop	r29
    1168:	08 95       	ret

0000116a <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8PortID,u8 Copy_u8PortValue)
{
    116a:	df 93       	push	r29
    116c:	cf 93       	push	r28
    116e:	00 d0       	rcall	.+0      	; 0x1170 <DIO_u8SetPortValue+0x6>
    1170:	00 d0       	rcall	.+0      	; 0x1172 <DIO_u8SetPortValue+0x8>
    1172:	0f 92       	push	r0
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	8a 83       	std	Y+2, r24	; 0x02
    117a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID)
    1180:	8a 81       	ldd	r24, Y+2	; 0x02
    1182:	28 2f       	mov	r18, r24
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	3d 83       	std	Y+5, r19	; 0x05
    1188:	2c 83       	std	Y+4, r18	; 0x04
    118a:	8c 81       	ldd	r24, Y+4	; 0x04
    118c:	9d 81       	ldd	r25, Y+5	; 0x05
    118e:	81 30       	cpi	r24, 0x01	; 1
    1190:	91 05       	cpc	r25, r1
    1192:	d1 f0       	breq	.+52     	; 0x11c8 <DIO_u8SetPortValue+0x5e>
    1194:	2c 81       	ldd	r18, Y+4	; 0x04
    1196:	3d 81       	ldd	r19, Y+5	; 0x05
    1198:	22 30       	cpi	r18, 0x02	; 2
    119a:	31 05       	cpc	r19, r1
    119c:	2c f4       	brge	.+10     	; 0x11a8 <DIO_u8SetPortValue+0x3e>
    119e:	8c 81       	ldd	r24, Y+4	; 0x04
    11a0:	9d 81       	ldd	r25, Y+5	; 0x05
    11a2:	00 97       	sbiw	r24, 0x00	; 0
    11a4:	61 f0       	breq	.+24     	; 0x11be <DIO_u8SetPortValue+0x54>
    11a6:	1f c0       	rjmp	.+62     	; 0x11e6 <DIO_u8SetPortValue+0x7c>
    11a8:	2c 81       	ldd	r18, Y+4	; 0x04
    11aa:	3d 81       	ldd	r19, Y+5	; 0x05
    11ac:	22 30       	cpi	r18, 0x02	; 2
    11ae:	31 05       	cpc	r19, r1
    11b0:	81 f0       	breq	.+32     	; 0x11d2 <DIO_u8SetPortValue+0x68>
    11b2:	8c 81       	ldd	r24, Y+4	; 0x04
    11b4:	9d 81       	ldd	r25, Y+5	; 0x05
    11b6:	83 30       	cpi	r24, 0x03	; 3
    11b8:	91 05       	cpc	r25, r1
    11ba:	81 f0       	breq	.+32     	; 0x11dc <DIO_u8SetPortValue+0x72>
    11bc:	14 c0       	rjmp	.+40     	; 0x11e6 <DIO_u8SetPortValue+0x7c>
	{
		case DIO_PORTA :
				SET_REG(DIO_PORTA_REG,Copy_u8PortValue);
    11be:	eb e3       	ldi	r30, 0x3B	; 59
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	8b 81       	ldd	r24, Y+3	; 0x03
    11c4:	80 83       	st	Z, r24
    11c6:	10 c0       	rjmp	.+32     	; 0x11e8 <DIO_u8SetPortValue+0x7e>
		break;
		case DIO_PORTB :
				SET_REG(DIO_PORTB_REG,Copy_u8PortValue);
    11c8:	e8 e3       	ldi	r30, 0x38	; 56
    11ca:	f0 e0       	ldi	r31, 0x00	; 0
    11cc:	8b 81       	ldd	r24, Y+3	; 0x03
    11ce:	80 83       	st	Z, r24
    11d0:	0b c0       	rjmp	.+22     	; 0x11e8 <DIO_u8SetPortValue+0x7e>
		break;
		case DIO_PORTC :
				SET_REG(DIO_PORTC_REG,Copy_u8PortValue);
    11d2:	e5 e3       	ldi	r30, 0x35	; 53
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	80 83       	st	Z, r24
    11da:	06 c0       	rjmp	.+12     	; 0x11e8 <DIO_u8SetPortValue+0x7e>
		break;
		case DIO_PORTD :
				SET_REG(DIO_PORTD_REG,Copy_u8PortValue);
    11dc:	e2 e3       	ldi	r30, 0x32	; 50
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	8b 81       	ldd	r24, Y+3	; 0x03
    11e2:	80 83       	st	Z, r24
    11e4:	01 c0       	rjmp	.+2      	; 0x11e8 <DIO_u8SetPortValue+0x7e>
		break;
		default :
				Local_u8ErrorState = STD_TYPES_NOK;
    11e6:	19 82       	std	Y+1, r1	; 0x01
		break;
	}
	return Local_u8ErrorState;
    11e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    11ea:	0f 90       	pop	r0
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	0f 90       	pop	r0
    11f2:	0f 90       	pop	r0
    11f4:	cf 91       	pop	r28
    11f6:	df 91       	pop	r29
    11f8:	08 95       	ret

000011fa <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 Copy_u8PortID)
{
    11fa:	df 93       	push	r29
    11fc:	cf 93       	push	r28
    11fe:	00 d0       	rcall	.+0      	; 0x1200 <DIO_u8GetPortValue+0x6>
    1200:	00 d0       	rcall	.+0      	; 0x1202 <DIO_u8GetPortValue+0x8>
    1202:	00 d0       	rcall	.+0      	; 0x1204 <DIO_u8GetPortValue+0xa>
    1204:	cd b7       	in	r28, 0x3d	; 61
    1206:	de b7       	in	r29, 0x3e	; 62
    1208:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ReturnedPortValue;
	switch(Copy_u8PortID)
    120e:	8b 81       	ldd	r24, Y+3	; 0x03
    1210:	28 2f       	mov	r18, r24
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	3e 83       	std	Y+6, r19	; 0x06
    1216:	2d 83       	std	Y+5, r18	; 0x05
    1218:	8d 81       	ldd	r24, Y+5	; 0x05
    121a:	9e 81       	ldd	r25, Y+6	; 0x06
    121c:	81 30       	cpi	r24, 0x01	; 1
    121e:	91 05       	cpc	r25, r1
    1220:	d1 f0       	breq	.+52     	; 0x1256 <DIO_u8GetPortValue+0x5c>
    1222:	2d 81       	ldd	r18, Y+5	; 0x05
    1224:	3e 81       	ldd	r19, Y+6	; 0x06
    1226:	22 30       	cpi	r18, 0x02	; 2
    1228:	31 05       	cpc	r19, r1
    122a:	2c f4       	brge	.+10     	; 0x1236 <DIO_u8GetPortValue+0x3c>
    122c:	8d 81       	ldd	r24, Y+5	; 0x05
    122e:	9e 81       	ldd	r25, Y+6	; 0x06
    1230:	00 97       	sbiw	r24, 0x00	; 0
    1232:	61 f0       	breq	.+24     	; 0x124c <DIO_u8GetPortValue+0x52>
    1234:	1f c0       	rjmp	.+62     	; 0x1274 <DIO_u8GetPortValue+0x7a>
    1236:	2d 81       	ldd	r18, Y+5	; 0x05
    1238:	3e 81       	ldd	r19, Y+6	; 0x06
    123a:	22 30       	cpi	r18, 0x02	; 2
    123c:	31 05       	cpc	r19, r1
    123e:	81 f0       	breq	.+32     	; 0x1260 <DIO_u8GetPortValue+0x66>
    1240:	8d 81       	ldd	r24, Y+5	; 0x05
    1242:	9e 81       	ldd	r25, Y+6	; 0x06
    1244:	83 30       	cpi	r24, 0x03	; 3
    1246:	91 05       	cpc	r25, r1
    1248:	81 f0       	breq	.+32     	; 0x126a <DIO_u8GetPortValue+0x70>
    124a:	14 c0       	rjmp	.+40     	; 0x1274 <DIO_u8GetPortValue+0x7a>
	{
		case DIO_PORTA :
				Local_u8ReturnedPortValue = GET_REG(DIO_PINA_REG);
    124c:	e9 e3       	ldi	r30, 0x39	; 57
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	89 83       	std	Y+1, r24	; 0x01
    1254:	10 c0       	rjmp	.+32     	; 0x1276 <DIO_u8GetPortValue+0x7c>
		break;
		case DIO_PORTB :
				Local_u8ReturnedPortValue = GET_REG(DIO_PINB_REG);
    1256:	e6 e3       	ldi	r30, 0x36	; 54
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	80 81       	ld	r24, Z
    125c:	89 83       	std	Y+1, r24	; 0x01
    125e:	0b c0       	rjmp	.+22     	; 0x1276 <DIO_u8GetPortValue+0x7c>
		break;
		case DIO_PORTC :
				Local_u8ReturnedPortValue = GET_REG(DIO_PINC_REG);
    1260:	e3 e3       	ldi	r30, 0x33	; 51
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	80 81       	ld	r24, Z
    1266:	89 83       	std	Y+1, r24	; 0x01
    1268:	06 c0       	rjmp	.+12     	; 0x1276 <DIO_u8GetPortValue+0x7c>
		break;
		case DIO_PORTD :
				Local_u8ReturnedPortValue = GET_REG(DIO_PIND_REG);
    126a:	e0 e3       	ldi	r30, 0x30	; 48
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	80 81       	ld	r24, Z
    1270:	89 83       	std	Y+1, r24	; 0x01
    1272:	01 c0       	rjmp	.+2      	; 0x1276 <DIO_u8GetPortValue+0x7c>
		break;
		default : 
				Local_u8ErrorState = STD_TYPES_NOK;
    1274:	1a 82       	std	Y+2, r1	; 0x02
		break;
	}
	if (Local_u8ErrorState == STD_TYPES_OK)
    1276:	8a 81       	ldd	r24, Y+2	; 0x02
    1278:	81 30       	cpi	r24, 0x01	; 1
    127a:	19 f4       	brne	.+6      	; 0x1282 <DIO_u8GetPortValue+0x88>
	{
		return Local_u8ReturnedPortValue;
    127c:	99 81       	ldd	r25, Y+1	; 0x01
    127e:	9c 83       	std	Y+4, r25	; 0x04
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <DIO_u8GetPortValue+0x8c>
	}
	else
	{
		return Local_u8ErrorState;
    1282:	2a 81       	ldd	r18, Y+2	; 0x02
    1284:	2c 83       	std	Y+4, r18	; 0x04
    1286:	8c 81       	ldd	r24, Y+4	; 0x04
	}
}
    1288:	26 96       	adiw	r28, 0x06	; 6
    128a:	0f b6       	in	r0, 0x3f	; 63
    128c:	f8 94       	cli
    128e:	de bf       	out	0x3e, r29	; 62
    1290:	0f be       	out	0x3f, r0	; 63
    1292:	cd bf       	out	0x3d, r28	; 61
    1294:	cf 91       	pop	r28
    1296:	df 91       	pop	r29
    1298:	08 95       	ret

0000129a <DIO_voidTogglePort>:
void DIO_voidTogglePort(u8 Copy_u8PortID)
{
    129a:	df 93       	push	r29
    129c:	cf 93       	push	r28
    129e:	00 d0       	rcall	.+0      	; 0x12a0 <DIO_voidTogglePort+0x6>
    12a0:	cd b7       	in	r28, 0x3d	; 61
    12a2:	de b7       	in	r29, 0x3e	; 62
    12a4:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ReturnedPortValue;
	
	Local_u8ReturnedPortValue =  DIO_u8GetPortValue(Copy_u8PortID);
    12a6:	8a 81       	ldd	r24, Y+2	; 0x02
    12a8:	0e 94 fd 08 	call	0x11fa	; 0x11fa <DIO_u8GetPortValue>
    12ac:	89 83       	std	Y+1, r24	; 0x01
	
	TOGGLE_REG(Local_u8ReturnedPortValue);
    12ae:	89 81       	ldd	r24, Y+1	; 0x01
    12b0:	80 95       	com	r24
    12b2:	89 83       	std	Y+1, r24	; 0x01
	
	DIO_u8SetPortValue(Copy_u8PortID,Local_u8ReturnedPortValue);
    12b4:	8a 81       	ldd	r24, Y+2	; 0x02
    12b6:	69 81       	ldd	r22, Y+1	; 0x01
    12b8:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    12bc:	0f 90       	pop	r0
    12be:	0f 90       	pop	r0
    12c0:	cf 91       	pop	r28
    12c2:	df 91       	pop	r29
    12c4:	08 95       	ret

000012c6 <LED_voidInit>:
#include "LED_config.h"

#include "DIO_interface.h"

void LED_voidInit(LED *LEDobj)
{
    12c6:	df 93       	push	r29
    12c8:	cf 93       	push	r28
    12ca:	00 d0       	rcall	.+0      	; 0x12cc <LED_voidInit+0x6>
    12cc:	cd b7       	in	r28, 0x3d	; 61
    12ce:	de b7       	in	r29, 0x3e	; 62
    12d0:	9a 83       	std	Y+2, r25	; 0x02
    12d2:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinDirection(LEDobj->LED_PORT,LEDobj->LED_PIN,DIO_OUTPUT);
    12d4:	e9 81       	ldd	r30, Y+1	; 0x01
    12d6:	fa 81       	ldd	r31, Y+2	; 0x02
    12d8:	80 81       	ld	r24, Z
    12da:	e9 81       	ldd	r30, Y+1	; 0x01
    12dc:	fa 81       	ldd	r31, Y+2	; 0x02
    12de:	91 81       	ldd	r25, Z+1	; 0x01
    12e0:	69 2f       	mov	r22, r25
    12e2:	41 e0       	ldi	r20, 0x01	; 1
    12e4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8SetPinDirection>
}
    12e8:	0f 90       	pop	r0
    12ea:	0f 90       	pop	r0
    12ec:	cf 91       	pop	r28
    12ee:	df 91       	pop	r29
    12f0:	08 95       	ret

000012f2 <LED_voidLEDTurnON>:
void LED_voidLEDTurnON(LED *LEDobj)
{
    12f2:	df 93       	push	r29
    12f4:	cf 93       	push	r28
    12f6:	00 d0       	rcall	.+0      	; 0x12f8 <LED_voidLEDTurnON+0x6>
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	9a 83       	std	Y+2, r25	; 0x02
    12fe:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(LEDobj->LED_PORT,LEDobj->LED_PIN,DIO_HIGH);
    1300:	e9 81       	ldd	r30, Y+1	; 0x01
    1302:	fa 81       	ldd	r31, Y+2	; 0x02
    1304:	80 81       	ld	r24, Z
    1306:	e9 81       	ldd	r30, Y+1	; 0x01
    1308:	fa 81       	ldd	r31, Y+2	; 0x02
    130a:	91 81       	ldd	r25, Z+1	; 0x01
    130c:	69 2f       	mov	r22, r25
    130e:	41 e0       	ldi	r20, 0x01	; 1
    1310:	0e 94 bf 06 	call	0xd7e	; 0xd7e <DIO_u8SetPinValue>
}
    1314:	0f 90       	pop	r0
    1316:	0f 90       	pop	r0
    1318:	cf 91       	pop	r28
    131a:	df 91       	pop	r29
    131c:	08 95       	ret

0000131e <LED_voidLEDTurnOFF>:

void LED_voidLEDTurnOFF(LED *LEDobj)
{
    131e:	df 93       	push	r29
    1320:	cf 93       	push	r28
    1322:	00 d0       	rcall	.+0      	; 0x1324 <LED_voidLEDTurnOFF+0x6>
    1324:	cd b7       	in	r28, 0x3d	; 61
    1326:	de b7       	in	r29, 0x3e	; 62
    1328:	9a 83       	std	Y+2, r25	; 0x02
    132a:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(LEDobj->LED_PORT,LEDobj->LED_PIN,DIO_LOW);
    132c:	e9 81       	ldd	r30, Y+1	; 0x01
    132e:	fa 81       	ldd	r31, Y+2	; 0x02
    1330:	80 81       	ld	r24, Z
    1332:	e9 81       	ldd	r30, Y+1	; 0x01
    1334:	fa 81       	ldd	r31, Y+2	; 0x02
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	69 2f       	mov	r22, r25
    133a:	40 e0       	ldi	r20, 0x00	; 0
    133c:	0e 94 bf 06 	call	0xd7e	; 0xd7e <DIO_u8SetPinValue>
}
    1340:	0f 90       	pop	r0
    1342:	0f 90       	pop	r0
    1344:	cf 91       	pop	r28
    1346:	df 91       	pop	r29
    1348:	08 95       	ret

0000134a <SevenSegment_voidInit>:
#include "SevenSegment_config.h"

#include "DIO_interface.h"

void SevenSegment_voidInit(SevenSegment *SevenSegmentobj)
{
    134a:	df 93       	push	r29
    134c:	cf 93       	push	r28
    134e:	00 d0       	rcall	.+0      	; 0x1350 <SevenSegment_voidInit+0x6>
    1350:	cd b7       	in	r28, 0x3d	; 61
    1352:	de b7       	in	r29, 0x3e	; 62
    1354:	9a 83       	std	Y+2, r25	; 0x02
    1356:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortDirection(SevenSegmentobj->SevenSegment_PORT,0xFF);
    1358:	e9 81       	ldd	r30, Y+1	; 0x01
    135a:	fa 81       	ldd	r31, Y+2	; 0x02
    135c:	80 81       	ld	r24, Z
    135e:	6f ef       	ldi	r22, 0xFF	; 255
    1360:	0e 94 6d 08 	call	0x10da	; 0x10da <DIO_u8SetPortDirection>
}
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	cf 91       	pop	r28
    136a:	df 91       	pop	r29
    136c:	08 95       	ret

0000136e <SevenSegment_voidDisplayNumber0>:

void SevenSegment_voidDisplayNumber0(SevenSegment *SevenSegmentobj)
{
    136e:	df 93       	push	r29
    1370:	cf 93       	push	r28
    1372:	00 d0       	rcall	.+0      	; 0x1374 <SevenSegment_voidDisplayNumber0+0x6>
    1374:	cd b7       	in	r28, 0x3d	; 61
    1376:	de b7       	in	r29, 0x3e	; 62
    1378:	9a 83       	std	Y+2, r25	; 0x02
    137a:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO0);
    137c:	e9 81       	ldd	r30, Y+1	; 0x01
    137e:	fa 81       	ldd	r31, Y+2	; 0x02
    1380:	80 81       	ld	r24, Z
    1382:	6f e3       	ldi	r22, 0x3F	; 63
    1384:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    1388:	0f 90       	pop	r0
    138a:	0f 90       	pop	r0
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	08 95       	ret

00001392 <SevenSegment_voidDisplayNumber1>:

void SevenSegment_voidDisplayNumber1(SevenSegment *SevenSegmentobj)
{
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	00 d0       	rcall	.+0      	; 0x1398 <SevenSegment_voidDisplayNumber1+0x6>
    1398:	cd b7       	in	r28, 0x3d	; 61
    139a:	de b7       	in	r29, 0x3e	; 62
    139c:	9a 83       	std	Y+2, r25	; 0x02
    139e:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO1);
    13a0:	e9 81       	ldd	r30, Y+1	; 0x01
    13a2:	fa 81       	ldd	r31, Y+2	; 0x02
    13a4:	80 81       	ld	r24, Z
    13a6:	66 e0       	ldi	r22, 0x06	; 6
    13a8:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    13ac:	0f 90       	pop	r0
    13ae:	0f 90       	pop	r0
    13b0:	cf 91       	pop	r28
    13b2:	df 91       	pop	r29
    13b4:	08 95       	ret

000013b6 <SevenSegment_voidDisplayNumber2>:

void SevenSegment_voidDisplayNumber2(SevenSegment *SevenSegmentobj)
{
    13b6:	df 93       	push	r29
    13b8:	cf 93       	push	r28
    13ba:	00 d0       	rcall	.+0      	; 0x13bc <SevenSegment_voidDisplayNumber2+0x6>
    13bc:	cd b7       	in	r28, 0x3d	; 61
    13be:	de b7       	in	r29, 0x3e	; 62
    13c0:	9a 83       	std	Y+2, r25	; 0x02
    13c2:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO2);
    13c4:	e9 81       	ldd	r30, Y+1	; 0x01
    13c6:	fa 81       	ldd	r31, Y+2	; 0x02
    13c8:	80 81       	ld	r24, Z
    13ca:	6b e5       	ldi	r22, 0x5B	; 91
    13cc:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    13d0:	0f 90       	pop	r0
    13d2:	0f 90       	pop	r0
    13d4:	cf 91       	pop	r28
    13d6:	df 91       	pop	r29
    13d8:	08 95       	ret

000013da <SevenSegment_voidDisplayNumber3>:

void SevenSegment_voidDisplayNumber3(SevenSegment *SevenSegmentobj)
{
    13da:	df 93       	push	r29
    13dc:	cf 93       	push	r28
    13de:	00 d0       	rcall	.+0      	; 0x13e0 <SevenSegment_voidDisplayNumber3+0x6>
    13e0:	cd b7       	in	r28, 0x3d	; 61
    13e2:	de b7       	in	r29, 0x3e	; 62
    13e4:	9a 83       	std	Y+2, r25	; 0x02
    13e6:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO3);
    13e8:	e9 81       	ldd	r30, Y+1	; 0x01
    13ea:	fa 81       	ldd	r31, Y+2	; 0x02
    13ec:	80 81       	ld	r24, Z
    13ee:	6f e4       	ldi	r22, 0x4F	; 79
    13f0:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    13f4:	0f 90       	pop	r0
    13f6:	0f 90       	pop	r0
    13f8:	cf 91       	pop	r28
    13fa:	df 91       	pop	r29
    13fc:	08 95       	ret

000013fe <SevenSegment_voidDisplayNumber4>:

void SevenSegment_voidDisplayNumber4(SevenSegment *SevenSegmentobj)
{
    13fe:	df 93       	push	r29
    1400:	cf 93       	push	r28
    1402:	00 d0       	rcall	.+0      	; 0x1404 <SevenSegment_voidDisplayNumber4+0x6>
    1404:	cd b7       	in	r28, 0x3d	; 61
    1406:	de b7       	in	r29, 0x3e	; 62
    1408:	9a 83       	std	Y+2, r25	; 0x02
    140a:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO4);
    140c:	e9 81       	ldd	r30, Y+1	; 0x01
    140e:	fa 81       	ldd	r31, Y+2	; 0x02
    1410:	80 81       	ld	r24, Z
    1412:	66 e6       	ldi	r22, 0x66	; 102
    1414:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    1418:	0f 90       	pop	r0
    141a:	0f 90       	pop	r0
    141c:	cf 91       	pop	r28
    141e:	df 91       	pop	r29
    1420:	08 95       	ret

00001422 <SevenSegment_voidDisplayNumber5>:

void SevenSegment_voidDisplayNumber5(SevenSegment *SevenSegmentobj)
{
    1422:	df 93       	push	r29
    1424:	cf 93       	push	r28
    1426:	00 d0       	rcall	.+0      	; 0x1428 <SevenSegment_voidDisplayNumber5+0x6>
    1428:	cd b7       	in	r28, 0x3d	; 61
    142a:	de b7       	in	r29, 0x3e	; 62
    142c:	9a 83       	std	Y+2, r25	; 0x02
    142e:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO5);
    1430:	e9 81       	ldd	r30, Y+1	; 0x01
    1432:	fa 81       	ldd	r31, Y+2	; 0x02
    1434:	80 81       	ld	r24, Z
    1436:	6d e6       	ldi	r22, 0x6D	; 109
    1438:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    143c:	0f 90       	pop	r0
    143e:	0f 90       	pop	r0
    1440:	cf 91       	pop	r28
    1442:	df 91       	pop	r29
    1444:	08 95       	ret

00001446 <SevenSegment_voidDisplayNumber6>:

void SevenSegment_voidDisplayNumber6(SevenSegment *SevenSegmentobj)
{
    1446:	df 93       	push	r29
    1448:	cf 93       	push	r28
    144a:	00 d0       	rcall	.+0      	; 0x144c <SevenSegment_voidDisplayNumber6+0x6>
    144c:	cd b7       	in	r28, 0x3d	; 61
    144e:	de b7       	in	r29, 0x3e	; 62
    1450:	9a 83       	std	Y+2, r25	; 0x02
    1452:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO6);
    1454:	e9 81       	ldd	r30, Y+1	; 0x01
    1456:	fa 81       	ldd	r31, Y+2	; 0x02
    1458:	80 81       	ld	r24, Z
    145a:	6d e7       	ldi	r22, 0x7D	; 125
    145c:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    1460:	0f 90       	pop	r0
    1462:	0f 90       	pop	r0
    1464:	cf 91       	pop	r28
    1466:	df 91       	pop	r29
    1468:	08 95       	ret

0000146a <SevenSegment_voidDisplayNumber7>:

void SevenSegment_voidDisplayNumber7(SevenSegment *SevenSegmentobj)
{
    146a:	df 93       	push	r29
    146c:	cf 93       	push	r28
    146e:	00 d0       	rcall	.+0      	; 0x1470 <SevenSegment_voidDisplayNumber7+0x6>
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	9a 83       	std	Y+2, r25	; 0x02
    1476:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO7);
    1478:	e9 81       	ldd	r30, Y+1	; 0x01
    147a:	fa 81       	ldd	r31, Y+2	; 0x02
    147c:	80 81       	ld	r24, Z
    147e:	67 e0       	ldi	r22, 0x07	; 7
    1480:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    1484:	0f 90       	pop	r0
    1486:	0f 90       	pop	r0
    1488:	cf 91       	pop	r28
    148a:	df 91       	pop	r29
    148c:	08 95       	ret

0000148e <SevenSegment_voidDisplayNumber8>:

void SevenSegment_voidDisplayNumber8(SevenSegment *SevenSegmentobj)
{
    148e:	df 93       	push	r29
    1490:	cf 93       	push	r28
    1492:	00 d0       	rcall	.+0      	; 0x1494 <SevenSegment_voidDisplayNumber8+0x6>
    1494:	cd b7       	in	r28, 0x3d	; 61
    1496:	de b7       	in	r29, 0x3e	; 62
    1498:	9a 83       	std	Y+2, r25	; 0x02
    149a:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO8);
    149c:	e9 81       	ldd	r30, Y+1	; 0x01
    149e:	fa 81       	ldd	r31, Y+2	; 0x02
    14a0:	80 81       	ld	r24, Z
    14a2:	6f e7       	ldi	r22, 0x7F	; 127
    14a4:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    14a8:	0f 90       	pop	r0
    14aa:	0f 90       	pop	r0
    14ac:	cf 91       	pop	r28
    14ae:	df 91       	pop	r29
    14b0:	08 95       	ret

000014b2 <SevenSegment_voidDisplayNumber9>:

void SevenSegment_voidDisplayNumber9(SevenSegment *SevenSegmentobj)
{
    14b2:	df 93       	push	r29
    14b4:	cf 93       	push	r28
    14b6:	00 d0       	rcall	.+0      	; 0x14b8 <SevenSegment_voidDisplayNumber9+0x6>
    14b8:	cd b7       	in	r28, 0x3d	; 61
    14ba:	de b7       	in	r29, 0x3e	; 62
    14bc:	9a 83       	std	Y+2, r25	; 0x02
    14be:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPortValue(SevenSegmentobj->SevenSegment_PORT,SEVEN_SEGMENT_NO9);
    14c0:	e9 81       	ldd	r30, Y+1	; 0x01
    14c2:	fa 81       	ldd	r31, Y+2	; 0x02
    14c4:	80 81       	ld	r24, Z
    14c6:	6f e6       	ldi	r22, 0x6F	; 111
    14c8:	0e 94 b5 08 	call	0x116a	; 0x116a <DIO_u8SetPortValue>
}
    14cc:	0f 90       	pop	r0
    14ce:	0f 90       	pop	r0
    14d0:	cf 91       	pop	r28
    14d2:	df 91       	pop	r29
    14d4:	08 95       	ret

000014d6 <main>:
#include "DIO_interface.h"
#include "SevenSegment_interface.h"
#include "LED_interface.h"

int main (void)
{
    14d6:	0f 93       	push	r16
    14d8:	1f 93       	push	r17
    14da:	df 93       	push	r29
    14dc:	cf 93       	push	r28
    14de:	cd b7       	in	r28, 0x3d	; 61
    14e0:	de b7       	in	r29, 0x3e	; 62
    14e2:	ca 54       	subi	r28, 0x4A	; 74
    14e4:	d1 40       	sbci	r29, 0x01	; 1
    14e6:	0f b6       	in	r0, 0x3f	; 63
    14e8:	f8 94       	cli
    14ea:	de bf       	out	0x3e, r29	; 62
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	cd bf       	out	0x3d, r28	; 61
	/* Initialize LEDs */
	LED LED0={DIO_PORTA,DIO_PIN0};
    14f0:	fe 01       	movw	r30, r28
    14f2:	ed 5b       	subi	r30, 0xBD	; 189
    14f4:	fe 4f       	sbci	r31, 0xFE	; 254
    14f6:	10 82       	st	Z, r1
    14f8:	fe 01       	movw	r30, r28
    14fa:	ed 5b       	subi	r30, 0xBD	; 189
    14fc:	fe 4f       	sbci	r31, 0xFE	; 254
    14fe:	11 82       	std	Z+1, r1	; 0x01
	LED LED1={DIO_PORTA,DIO_PIN1};
    1500:	fe 01       	movw	r30, r28
    1502:	eb 5b       	subi	r30, 0xBB	; 187
    1504:	fe 4f       	sbci	r31, 0xFE	; 254
    1506:	10 82       	st	Z, r1
    1508:	fe 01       	movw	r30, r28
    150a:	eb 5b       	subi	r30, 0xBB	; 187
    150c:	fe 4f       	sbci	r31, 0xFE	; 254
    150e:	81 e0       	ldi	r24, 0x01	; 1
    1510:	81 83       	std	Z+1, r24	; 0x01
	LED LED2={DIO_PORTA,DIO_PIN2};
    1512:	fe 01       	movw	r30, r28
    1514:	e9 5b       	subi	r30, 0xB9	; 185
    1516:	fe 4f       	sbci	r31, 0xFE	; 254
    1518:	10 82       	st	Z, r1
    151a:	fe 01       	movw	r30, r28
    151c:	e9 5b       	subi	r30, 0xB9	; 185
    151e:	fe 4f       	sbci	r31, 0xFE	; 254
    1520:	82 e0       	ldi	r24, 0x02	; 2
    1522:	81 83       	std	Z+1, r24	; 0x01

	LED_voidInit(&LED0);
    1524:	ce 01       	movw	r24, r28
    1526:	8d 5b       	subi	r24, 0xBD	; 189
    1528:	9e 4f       	sbci	r25, 0xFE	; 254
    152a:	0e 94 63 09 	call	0x12c6	; 0x12c6 <LED_voidInit>
	LED_voidInit(&LED1);
    152e:	ce 01       	movw	r24, r28
    1530:	8b 5b       	subi	r24, 0xBB	; 187
    1532:	9e 4f       	sbci	r25, 0xFE	; 254
    1534:	0e 94 63 09 	call	0x12c6	; 0x12c6 <LED_voidInit>
	LED_voidInit(&LED2);
    1538:	ce 01       	movw	r24, r28
    153a:	89 5b       	subi	r24, 0xB9	; 185
    153c:	9e 4f       	sbci	r25, 0xFE	; 254
    153e:	0e 94 63 09 	call	0x12c6	; 0x12c6 <LED_voidInit>

	/* Initialize Seven Segment */
	SevenSegment SevenSegment0={DIO_PORTB};
    1542:	fe 01       	movw	r30, r28
    1544:	e7 5b       	subi	r30, 0xB7	; 183
    1546:	fe 4f       	sbci	r31, 0xFE	; 254
    1548:	81 e0       	ldi	r24, 0x01	; 1
    154a:	80 83       	st	Z, r24
	SevenSegment SevenSegment1={DIO_PORTD};
    154c:	fe 01       	movw	r30, r28
    154e:	e6 5b       	subi	r30, 0xB6	; 182
    1550:	fe 4f       	sbci	r31, 0xFE	; 254
    1552:	83 e0       	ldi	r24, 0x03	; 3
    1554:	80 83       	st	Z, r24

	SevenSegment_voidInit(&SevenSegment0);
    1556:	ce 01       	movw	r24, r28
    1558:	87 5b       	subi	r24, 0xB7	; 183
    155a:	9e 4f       	sbci	r25, 0xFE	; 254
    155c:	0e 94 a5 09 	call	0x134a	; 0x134a <SevenSegment_voidInit>
	SevenSegment_voidInit(&SevenSegment1);
    1560:	ce 01       	movw	r24, r28
    1562:	86 5b       	subi	r24, 0xB6	; 182
    1564:	9e 4f       	sbci	r25, 0xFE	; 254
    1566:	0e 94 a5 09 	call	0x134a	; 0x134a <SevenSegment_voidInit>

	while(1)
	{
		/* Turn on RED LED and count from 10 to 0 */
		LED_voidLEDTurnOFF(&LED2);
    156a:	ce 01       	movw	r24, r28
    156c:	89 5b       	subi	r24, 0xB9	; 185
    156e:	9e 4f       	sbci	r25, 0xFE	; 254
    1570:	0e 94 8f 09 	call	0x131e	; 0x131e <LED_voidLEDTurnOFF>
		LED_voidLEDTurnON(&LED0);
    1574:	ce 01       	movw	r24, r28
    1576:	8d 5b       	subi	r24, 0xBD	; 189
    1578:	9e 4f       	sbci	r25, 0xFE	; 254
    157a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <LED_voidLEDTurnON>
		SevenSegment_voidDisplayNumber1(&SevenSegment0);
    157e:	ce 01       	movw	r24, r28
    1580:	87 5b       	subi	r24, 0xB7	; 183
    1582:	9e 4f       	sbci	r25, 0xFE	; 254
    1584:	0e 94 c9 09 	call	0x1392	; 0x1392 <SevenSegment_voidDisplayNumber1>
		SevenSegment_voidDisplayNumber0(&SevenSegment1);
    1588:	ce 01       	movw	r24, r28
    158a:	86 5b       	subi	r24, 0xB6	; 182
    158c:	9e 4f       	sbci	r25, 0xFE	; 254
    158e:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
    1592:	fe 01       	movw	r30, r28
    1594:	e1 5c       	subi	r30, 0xC1	; 193
    1596:	fe 4f       	sbci	r31, 0xFE	; 254
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	aa e7       	ldi	r26, 0x7A	; 122
    159e:	b4 e4       	ldi	r27, 0x44	; 68
    15a0:	80 83       	st	Z, r24
    15a2:	91 83       	std	Z+1, r25	; 0x01
    15a4:	a2 83       	std	Z+2, r26	; 0x02
    15a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15a8:	8e 01       	movw	r16, r28
    15aa:	05 5c       	subi	r16, 0xC5	; 197
    15ac:	1e 4f       	sbci	r17, 0xFE	; 254
    15ae:	fe 01       	movw	r30, r28
    15b0:	e1 5c       	subi	r30, 0xC1	; 193
    15b2:	fe 4f       	sbci	r31, 0xFE	; 254
    15b4:	60 81       	ld	r22, Z
    15b6:	71 81       	ldd	r23, Z+1	; 0x01
    15b8:	82 81       	ldd	r24, Z+2	; 0x02
    15ba:	93 81       	ldd	r25, Z+3	; 0x03
    15bc:	20 e0       	ldi	r18, 0x00	; 0
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	48 e4       	ldi	r20, 0x48	; 72
    15c2:	53 e4       	ldi	r21, 0x43	; 67
    15c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15c8:	dc 01       	movw	r26, r24
    15ca:	cb 01       	movw	r24, r22
    15cc:	f8 01       	movw	r30, r16
    15ce:	80 83       	st	Z, r24
    15d0:	91 83       	std	Z+1, r25	; 0x01
    15d2:	a2 83       	std	Z+2, r26	; 0x02
    15d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15d6:	fe 01       	movw	r30, r28
    15d8:	e5 5c       	subi	r30, 0xC5	; 197
    15da:	fe 4f       	sbci	r31, 0xFE	; 254
    15dc:	60 81       	ld	r22, Z
    15de:	71 81       	ldd	r23, Z+1	; 0x01
    15e0:	82 81       	ldd	r24, Z+2	; 0x02
    15e2:	93 81       	ldd	r25, Z+3	; 0x03
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	40 e8       	ldi	r20, 0x80	; 128
    15ea:	5f e3       	ldi	r21, 0x3F	; 63
    15ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15f0:	88 23       	and	r24, r24
    15f2:	44 f4       	brge	.+16     	; 0x1604 <main+0x12e>
		__ticks = 1;
    15f4:	fe 01       	movw	r30, r28
    15f6:	e7 5c       	subi	r30, 0xC7	; 199
    15f8:	fe 4f       	sbci	r31, 0xFE	; 254
    15fa:	81 e0       	ldi	r24, 0x01	; 1
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	91 83       	std	Z+1, r25	; 0x01
    1600:	80 83       	st	Z, r24
    1602:	64 c0       	rjmp	.+200    	; 0x16cc <main+0x1f6>
	else if (__tmp > 65535)
    1604:	fe 01       	movw	r30, r28
    1606:	e5 5c       	subi	r30, 0xC5	; 197
    1608:	fe 4f       	sbci	r31, 0xFE	; 254
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	20 e0       	ldi	r18, 0x00	; 0
    1614:	3f ef       	ldi	r19, 0xFF	; 255
    1616:	4f e7       	ldi	r20, 0x7F	; 127
    1618:	57 e4       	ldi	r21, 0x47	; 71
    161a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    161e:	18 16       	cp	r1, r24
    1620:	0c f0       	brlt	.+2      	; 0x1624 <main+0x14e>
    1622:	43 c0       	rjmp	.+134    	; 0x16aa <main+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1624:	fe 01       	movw	r30, r28
    1626:	e1 5c       	subi	r30, 0xC1	; 193
    1628:	fe 4f       	sbci	r31, 0xFE	; 254
    162a:	60 81       	ld	r22, Z
    162c:	71 81       	ldd	r23, Z+1	; 0x01
    162e:	82 81       	ldd	r24, Z+2	; 0x02
    1630:	93 81       	ldd	r25, Z+3	; 0x03
    1632:	20 e0       	ldi	r18, 0x00	; 0
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	40 e2       	ldi	r20, 0x20	; 32
    1638:	51 e4       	ldi	r21, 0x41	; 65
    163a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    163e:	dc 01       	movw	r26, r24
    1640:	cb 01       	movw	r24, r22
    1642:	8e 01       	movw	r16, r28
    1644:	07 5c       	subi	r16, 0xC7	; 199
    1646:	1e 4f       	sbci	r17, 0xFE	; 254
    1648:	bc 01       	movw	r22, r24
    164a:	cd 01       	movw	r24, r26
    164c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1650:	dc 01       	movw	r26, r24
    1652:	cb 01       	movw	r24, r22
    1654:	f8 01       	movw	r30, r16
    1656:	91 83       	std	Z+1, r25	; 0x01
    1658:	80 83       	st	Z, r24
    165a:	1f c0       	rjmp	.+62     	; 0x169a <main+0x1c4>
    165c:	fe 01       	movw	r30, r28
    165e:	e9 5c       	subi	r30, 0xC9	; 201
    1660:	fe 4f       	sbci	r31, 0xFE	; 254
    1662:	84 e1       	ldi	r24, 0x14	; 20
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	91 83       	std	Z+1, r25	; 0x01
    1668:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    166a:	fe 01       	movw	r30, r28
    166c:	e9 5c       	subi	r30, 0xC9	; 201
    166e:	fe 4f       	sbci	r31, 0xFE	; 254
    1670:	80 81       	ld	r24, Z
    1672:	91 81       	ldd	r25, Z+1	; 0x01
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	f1 f7       	brne	.-4      	; 0x1674 <main+0x19e>
    1678:	fe 01       	movw	r30, r28
    167a:	e9 5c       	subi	r30, 0xC9	; 201
    167c:	fe 4f       	sbci	r31, 0xFE	; 254
    167e:	91 83       	std	Z+1, r25	; 0x01
    1680:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1682:	de 01       	movw	r26, r28
    1684:	a7 5c       	subi	r26, 0xC7	; 199
    1686:	be 4f       	sbci	r27, 0xFE	; 254
    1688:	fe 01       	movw	r30, r28
    168a:	e7 5c       	subi	r30, 0xC7	; 199
    168c:	fe 4f       	sbci	r31, 0xFE	; 254
    168e:	80 81       	ld	r24, Z
    1690:	91 81       	ldd	r25, Z+1	; 0x01
    1692:	01 97       	sbiw	r24, 0x01	; 1
    1694:	11 96       	adiw	r26, 0x01	; 1
    1696:	9c 93       	st	X, r25
    1698:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    169a:	fe 01       	movw	r30, r28
    169c:	e7 5c       	subi	r30, 0xC7	; 199
    169e:	fe 4f       	sbci	r31, 0xFE	; 254
    16a0:	80 81       	ld	r24, Z
    16a2:	91 81       	ldd	r25, Z+1	; 0x01
    16a4:	00 97       	sbiw	r24, 0x00	; 0
    16a6:	d1 f6       	brne	.-76     	; 0x165c <main+0x186>
    16a8:	27 c0       	rjmp	.+78     	; 0x16f8 <main+0x222>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16aa:	8e 01       	movw	r16, r28
    16ac:	07 5c       	subi	r16, 0xC7	; 199
    16ae:	1e 4f       	sbci	r17, 0xFE	; 254
    16b0:	fe 01       	movw	r30, r28
    16b2:	e5 5c       	subi	r30, 0xC5	; 197
    16b4:	fe 4f       	sbci	r31, 0xFE	; 254
    16b6:	60 81       	ld	r22, Z
    16b8:	71 81       	ldd	r23, Z+1	; 0x01
    16ba:	82 81       	ldd	r24, Z+2	; 0x02
    16bc:	93 81       	ldd	r25, Z+3	; 0x03
    16be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	f8 01       	movw	r30, r16
    16c8:	91 83       	std	Z+1, r25	; 0x01
    16ca:	80 83       	st	Z, r24
    16cc:	de 01       	movw	r26, r28
    16ce:	ab 5c       	subi	r26, 0xCB	; 203
    16d0:	be 4f       	sbci	r27, 0xFE	; 254
    16d2:	fe 01       	movw	r30, r28
    16d4:	e7 5c       	subi	r30, 0xC7	; 199
    16d6:	fe 4f       	sbci	r31, 0xFE	; 254
    16d8:	80 81       	ld	r24, Z
    16da:	91 81       	ldd	r25, Z+1	; 0x01
    16dc:	8d 93       	st	X+, r24
    16de:	9c 93       	st	X, r25
    16e0:	fe 01       	movw	r30, r28
    16e2:	eb 5c       	subi	r30, 0xCB	; 203
    16e4:	fe 4f       	sbci	r31, 0xFE	; 254
    16e6:	80 81       	ld	r24, Z
    16e8:	91 81       	ldd	r25, Z+1	; 0x01
    16ea:	01 97       	sbiw	r24, 0x01	; 1
    16ec:	f1 f7       	brne	.-4      	; 0x16ea <main+0x214>
    16ee:	fe 01       	movw	r30, r28
    16f0:	eb 5c       	subi	r30, 0xCB	; 203
    16f2:	fe 4f       	sbci	r31, 0xFE	; 254
    16f4:	91 83       	std	Z+1, r25	; 0x01
    16f6:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    16f8:	ce 01       	movw	r24, r28
    16fa:	87 5b       	subi	r24, 0xB7	; 183
    16fc:	9e 4f       	sbci	r25, 0xFE	; 254
    16fe:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber9(&SevenSegment1);
    1702:	ce 01       	movw	r24, r28
    1704:	86 5b       	subi	r24, 0xB6	; 182
    1706:	9e 4f       	sbci	r25, 0xFE	; 254
    1708:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <SevenSegment_voidDisplayNumber9>
    170c:	fe 01       	movw	r30, r28
    170e:	ef 5c       	subi	r30, 0xCF	; 207
    1710:	fe 4f       	sbci	r31, 0xFE	; 254
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	aa e7       	ldi	r26, 0x7A	; 122
    1718:	b4 e4       	ldi	r27, 0x44	; 68
    171a:	80 83       	st	Z, r24
    171c:	91 83       	std	Z+1, r25	; 0x01
    171e:	a2 83       	std	Z+2, r26	; 0x02
    1720:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1722:	8e 01       	movw	r16, r28
    1724:	03 5d       	subi	r16, 0xD3	; 211
    1726:	1e 4f       	sbci	r17, 0xFE	; 254
    1728:	fe 01       	movw	r30, r28
    172a:	ef 5c       	subi	r30, 0xCF	; 207
    172c:	fe 4f       	sbci	r31, 0xFE	; 254
    172e:	60 81       	ld	r22, Z
    1730:	71 81       	ldd	r23, Z+1	; 0x01
    1732:	82 81       	ldd	r24, Z+2	; 0x02
    1734:	93 81       	ldd	r25, Z+3	; 0x03
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	48 e4       	ldi	r20, 0x48	; 72
    173c:	53 e4       	ldi	r21, 0x43	; 67
    173e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	f8 01       	movw	r30, r16
    1748:	80 83       	st	Z, r24
    174a:	91 83       	std	Z+1, r25	; 0x01
    174c:	a2 83       	std	Z+2, r26	; 0x02
    174e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1750:	fe 01       	movw	r30, r28
    1752:	e3 5d       	subi	r30, 0xD3	; 211
    1754:	fe 4f       	sbci	r31, 0xFE	; 254
    1756:	60 81       	ld	r22, Z
    1758:	71 81       	ldd	r23, Z+1	; 0x01
    175a:	82 81       	ldd	r24, Z+2	; 0x02
    175c:	93 81       	ldd	r25, Z+3	; 0x03
    175e:	20 e0       	ldi	r18, 0x00	; 0
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	40 e8       	ldi	r20, 0x80	; 128
    1764:	5f e3       	ldi	r21, 0x3F	; 63
    1766:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    176a:	88 23       	and	r24, r24
    176c:	44 f4       	brge	.+16     	; 0x177e <main+0x2a8>
		__ticks = 1;
    176e:	fe 01       	movw	r30, r28
    1770:	e5 5d       	subi	r30, 0xD5	; 213
    1772:	fe 4f       	sbci	r31, 0xFE	; 254
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	91 83       	std	Z+1, r25	; 0x01
    177a:	80 83       	st	Z, r24
    177c:	64 c0       	rjmp	.+200    	; 0x1846 <main+0x370>
	else if (__tmp > 65535)
    177e:	fe 01       	movw	r30, r28
    1780:	e3 5d       	subi	r30, 0xD3	; 211
    1782:	fe 4f       	sbci	r31, 0xFE	; 254
    1784:	60 81       	ld	r22, Z
    1786:	71 81       	ldd	r23, Z+1	; 0x01
    1788:	82 81       	ldd	r24, Z+2	; 0x02
    178a:	93 81       	ldd	r25, Z+3	; 0x03
    178c:	20 e0       	ldi	r18, 0x00	; 0
    178e:	3f ef       	ldi	r19, 0xFF	; 255
    1790:	4f e7       	ldi	r20, 0x7F	; 127
    1792:	57 e4       	ldi	r21, 0x47	; 71
    1794:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1798:	18 16       	cp	r1, r24
    179a:	0c f0       	brlt	.+2      	; 0x179e <main+0x2c8>
    179c:	43 c0       	rjmp	.+134    	; 0x1824 <main+0x34e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    179e:	fe 01       	movw	r30, r28
    17a0:	ef 5c       	subi	r30, 0xCF	; 207
    17a2:	fe 4f       	sbci	r31, 0xFE	; 254
    17a4:	60 81       	ld	r22, Z
    17a6:	71 81       	ldd	r23, Z+1	; 0x01
    17a8:	82 81       	ldd	r24, Z+2	; 0x02
    17aa:	93 81       	ldd	r25, Z+3	; 0x03
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	40 e2       	ldi	r20, 0x20	; 32
    17b2:	51 e4       	ldi	r21, 0x41	; 65
    17b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b8:	dc 01       	movw	r26, r24
    17ba:	cb 01       	movw	r24, r22
    17bc:	8e 01       	movw	r16, r28
    17be:	05 5d       	subi	r16, 0xD5	; 213
    17c0:	1e 4f       	sbci	r17, 0xFE	; 254
    17c2:	bc 01       	movw	r22, r24
    17c4:	cd 01       	movw	r24, r26
    17c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ca:	dc 01       	movw	r26, r24
    17cc:	cb 01       	movw	r24, r22
    17ce:	f8 01       	movw	r30, r16
    17d0:	91 83       	std	Z+1, r25	; 0x01
    17d2:	80 83       	st	Z, r24
    17d4:	1f c0       	rjmp	.+62     	; 0x1814 <main+0x33e>
    17d6:	fe 01       	movw	r30, r28
    17d8:	e7 5d       	subi	r30, 0xD7	; 215
    17da:	fe 4f       	sbci	r31, 0xFE	; 254
    17dc:	84 e1       	ldi	r24, 0x14	; 20
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	91 83       	std	Z+1, r25	; 0x01
    17e2:	80 83       	st	Z, r24
    17e4:	fe 01       	movw	r30, r28
    17e6:	e7 5d       	subi	r30, 0xD7	; 215
    17e8:	fe 4f       	sbci	r31, 0xFE	; 254
    17ea:	80 81       	ld	r24, Z
    17ec:	91 81       	ldd	r25, Z+1	; 0x01
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <main+0x318>
    17f2:	fe 01       	movw	r30, r28
    17f4:	e7 5d       	subi	r30, 0xD7	; 215
    17f6:	fe 4f       	sbci	r31, 0xFE	; 254
    17f8:	91 83       	std	Z+1, r25	; 0x01
    17fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17fc:	de 01       	movw	r26, r28
    17fe:	a5 5d       	subi	r26, 0xD5	; 213
    1800:	be 4f       	sbci	r27, 0xFE	; 254
    1802:	fe 01       	movw	r30, r28
    1804:	e5 5d       	subi	r30, 0xD5	; 213
    1806:	fe 4f       	sbci	r31, 0xFE	; 254
    1808:	80 81       	ld	r24, Z
    180a:	91 81       	ldd	r25, Z+1	; 0x01
    180c:	01 97       	sbiw	r24, 0x01	; 1
    180e:	11 96       	adiw	r26, 0x01	; 1
    1810:	9c 93       	st	X, r25
    1812:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1814:	fe 01       	movw	r30, r28
    1816:	e5 5d       	subi	r30, 0xD5	; 213
    1818:	fe 4f       	sbci	r31, 0xFE	; 254
    181a:	80 81       	ld	r24, Z
    181c:	91 81       	ldd	r25, Z+1	; 0x01
    181e:	00 97       	sbiw	r24, 0x00	; 0
    1820:	d1 f6       	brne	.-76     	; 0x17d6 <main+0x300>
    1822:	27 c0       	rjmp	.+78     	; 0x1872 <main+0x39c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1824:	8e 01       	movw	r16, r28
    1826:	05 5d       	subi	r16, 0xD5	; 213
    1828:	1e 4f       	sbci	r17, 0xFE	; 254
    182a:	fe 01       	movw	r30, r28
    182c:	e3 5d       	subi	r30, 0xD3	; 211
    182e:	fe 4f       	sbci	r31, 0xFE	; 254
    1830:	60 81       	ld	r22, Z
    1832:	71 81       	ldd	r23, Z+1	; 0x01
    1834:	82 81       	ldd	r24, Z+2	; 0x02
    1836:	93 81       	ldd	r25, Z+3	; 0x03
    1838:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    183c:	dc 01       	movw	r26, r24
    183e:	cb 01       	movw	r24, r22
    1840:	f8 01       	movw	r30, r16
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	80 83       	st	Z, r24
    1846:	de 01       	movw	r26, r28
    1848:	a9 5d       	subi	r26, 0xD9	; 217
    184a:	be 4f       	sbci	r27, 0xFE	; 254
    184c:	fe 01       	movw	r30, r28
    184e:	e5 5d       	subi	r30, 0xD5	; 213
    1850:	fe 4f       	sbci	r31, 0xFE	; 254
    1852:	80 81       	ld	r24, Z
    1854:	91 81       	ldd	r25, Z+1	; 0x01
    1856:	8d 93       	st	X+, r24
    1858:	9c 93       	st	X, r25
    185a:	fe 01       	movw	r30, r28
    185c:	e9 5d       	subi	r30, 0xD9	; 217
    185e:	fe 4f       	sbci	r31, 0xFE	; 254
    1860:	80 81       	ld	r24, Z
    1862:	91 81       	ldd	r25, Z+1	; 0x01
    1864:	01 97       	sbiw	r24, 0x01	; 1
    1866:	f1 f7       	brne	.-4      	; 0x1864 <main+0x38e>
    1868:	fe 01       	movw	r30, r28
    186a:	e9 5d       	subi	r30, 0xD9	; 217
    186c:	fe 4f       	sbci	r31, 0xFE	; 254
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    1872:	ce 01       	movw	r24, r28
    1874:	87 5b       	subi	r24, 0xB7	; 183
    1876:	9e 4f       	sbci	r25, 0xFE	; 254
    1878:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber8(&SevenSegment1);
    187c:	ce 01       	movw	r24, r28
    187e:	86 5b       	subi	r24, 0xB6	; 182
    1880:	9e 4f       	sbci	r25, 0xFE	; 254
    1882:	0e 94 47 0a 	call	0x148e	; 0x148e <SevenSegment_voidDisplayNumber8>
    1886:	fe 01       	movw	r30, r28
    1888:	ed 5d       	subi	r30, 0xDD	; 221
    188a:	fe 4f       	sbci	r31, 0xFE	; 254
    188c:	80 e0       	ldi	r24, 0x00	; 0
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	aa e7       	ldi	r26, 0x7A	; 122
    1892:	b4 e4       	ldi	r27, 0x44	; 68
    1894:	80 83       	st	Z, r24
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	a2 83       	std	Z+2, r26	; 0x02
    189a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    189c:	8e 01       	movw	r16, r28
    189e:	01 5e       	subi	r16, 0xE1	; 225
    18a0:	1e 4f       	sbci	r17, 0xFE	; 254
    18a2:	fe 01       	movw	r30, r28
    18a4:	ed 5d       	subi	r30, 0xDD	; 221
    18a6:	fe 4f       	sbci	r31, 0xFE	; 254
    18a8:	60 81       	ld	r22, Z
    18aa:	71 81       	ldd	r23, Z+1	; 0x01
    18ac:	82 81       	ldd	r24, Z+2	; 0x02
    18ae:	93 81       	ldd	r25, Z+3	; 0x03
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	48 e4       	ldi	r20, 0x48	; 72
    18b6:	53 e4       	ldi	r21, 0x43	; 67
    18b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18bc:	dc 01       	movw	r26, r24
    18be:	cb 01       	movw	r24, r22
    18c0:	f8 01       	movw	r30, r16
    18c2:	80 83       	st	Z, r24
    18c4:	91 83       	std	Z+1, r25	; 0x01
    18c6:	a2 83       	std	Z+2, r26	; 0x02
    18c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ca:	fe 01       	movw	r30, r28
    18cc:	e1 5e       	subi	r30, 0xE1	; 225
    18ce:	fe 4f       	sbci	r31, 0xFE	; 254
    18d0:	60 81       	ld	r22, Z
    18d2:	71 81       	ldd	r23, Z+1	; 0x01
    18d4:	82 81       	ldd	r24, Z+2	; 0x02
    18d6:	93 81       	ldd	r25, Z+3	; 0x03
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	40 e8       	ldi	r20, 0x80	; 128
    18de:	5f e3       	ldi	r21, 0x3F	; 63
    18e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18e4:	88 23       	and	r24, r24
    18e6:	44 f4       	brge	.+16     	; 0x18f8 <main+0x422>
		__ticks = 1;
    18e8:	fe 01       	movw	r30, r28
    18ea:	e3 5e       	subi	r30, 0xE3	; 227
    18ec:	fe 4f       	sbci	r31, 0xFE	; 254
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	91 83       	std	Z+1, r25	; 0x01
    18f4:	80 83       	st	Z, r24
    18f6:	64 c0       	rjmp	.+200    	; 0x19c0 <main+0x4ea>
	else if (__tmp > 65535)
    18f8:	fe 01       	movw	r30, r28
    18fa:	e1 5e       	subi	r30, 0xE1	; 225
    18fc:	fe 4f       	sbci	r31, 0xFE	; 254
    18fe:	60 81       	ld	r22, Z
    1900:	71 81       	ldd	r23, Z+1	; 0x01
    1902:	82 81       	ldd	r24, Z+2	; 0x02
    1904:	93 81       	ldd	r25, Z+3	; 0x03
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	3f ef       	ldi	r19, 0xFF	; 255
    190a:	4f e7       	ldi	r20, 0x7F	; 127
    190c:	57 e4       	ldi	r21, 0x47	; 71
    190e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1912:	18 16       	cp	r1, r24
    1914:	0c f0       	brlt	.+2      	; 0x1918 <main+0x442>
    1916:	43 c0       	rjmp	.+134    	; 0x199e <main+0x4c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1918:	fe 01       	movw	r30, r28
    191a:	ed 5d       	subi	r30, 0xDD	; 221
    191c:	fe 4f       	sbci	r31, 0xFE	; 254
    191e:	60 81       	ld	r22, Z
    1920:	71 81       	ldd	r23, Z+1	; 0x01
    1922:	82 81       	ldd	r24, Z+2	; 0x02
    1924:	93 81       	ldd	r25, Z+3	; 0x03
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	30 e0       	ldi	r19, 0x00	; 0
    192a:	40 e2       	ldi	r20, 0x20	; 32
    192c:	51 e4       	ldi	r21, 0x41	; 65
    192e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	8e 01       	movw	r16, r28
    1938:	03 5e       	subi	r16, 0xE3	; 227
    193a:	1e 4f       	sbci	r17, 0xFE	; 254
    193c:	bc 01       	movw	r22, r24
    193e:	cd 01       	movw	r24, r26
    1940:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	f8 01       	movw	r30, r16
    194a:	91 83       	std	Z+1, r25	; 0x01
    194c:	80 83       	st	Z, r24
    194e:	1f c0       	rjmp	.+62     	; 0x198e <main+0x4b8>
    1950:	fe 01       	movw	r30, r28
    1952:	e5 5e       	subi	r30, 0xE5	; 229
    1954:	fe 4f       	sbci	r31, 0xFE	; 254
    1956:	84 e1       	ldi	r24, 0x14	; 20
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
    195e:	fe 01       	movw	r30, r28
    1960:	e5 5e       	subi	r30, 0xE5	; 229
    1962:	fe 4f       	sbci	r31, 0xFE	; 254
    1964:	80 81       	ld	r24, Z
    1966:	91 81       	ldd	r25, Z+1	; 0x01
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	f1 f7       	brne	.-4      	; 0x1968 <main+0x492>
    196c:	fe 01       	movw	r30, r28
    196e:	e5 5e       	subi	r30, 0xE5	; 229
    1970:	fe 4f       	sbci	r31, 0xFE	; 254
    1972:	91 83       	std	Z+1, r25	; 0x01
    1974:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1976:	de 01       	movw	r26, r28
    1978:	a3 5e       	subi	r26, 0xE3	; 227
    197a:	be 4f       	sbci	r27, 0xFE	; 254
    197c:	fe 01       	movw	r30, r28
    197e:	e3 5e       	subi	r30, 0xE3	; 227
    1980:	fe 4f       	sbci	r31, 0xFE	; 254
    1982:	80 81       	ld	r24, Z
    1984:	91 81       	ldd	r25, Z+1	; 0x01
    1986:	01 97       	sbiw	r24, 0x01	; 1
    1988:	11 96       	adiw	r26, 0x01	; 1
    198a:	9c 93       	st	X, r25
    198c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    198e:	fe 01       	movw	r30, r28
    1990:	e3 5e       	subi	r30, 0xE3	; 227
    1992:	fe 4f       	sbci	r31, 0xFE	; 254
    1994:	80 81       	ld	r24, Z
    1996:	91 81       	ldd	r25, Z+1	; 0x01
    1998:	00 97       	sbiw	r24, 0x00	; 0
    199a:	d1 f6       	brne	.-76     	; 0x1950 <main+0x47a>
    199c:	27 c0       	rjmp	.+78     	; 0x19ec <main+0x516>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    199e:	8e 01       	movw	r16, r28
    19a0:	03 5e       	subi	r16, 0xE3	; 227
    19a2:	1e 4f       	sbci	r17, 0xFE	; 254
    19a4:	fe 01       	movw	r30, r28
    19a6:	e1 5e       	subi	r30, 0xE1	; 225
    19a8:	fe 4f       	sbci	r31, 0xFE	; 254
    19aa:	60 81       	ld	r22, Z
    19ac:	71 81       	ldd	r23, Z+1	; 0x01
    19ae:	82 81       	ldd	r24, Z+2	; 0x02
    19b0:	93 81       	ldd	r25, Z+3	; 0x03
    19b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19b6:	dc 01       	movw	r26, r24
    19b8:	cb 01       	movw	r24, r22
    19ba:	f8 01       	movw	r30, r16
    19bc:	91 83       	std	Z+1, r25	; 0x01
    19be:	80 83       	st	Z, r24
    19c0:	de 01       	movw	r26, r28
    19c2:	a7 5e       	subi	r26, 0xE7	; 231
    19c4:	be 4f       	sbci	r27, 0xFE	; 254
    19c6:	fe 01       	movw	r30, r28
    19c8:	e3 5e       	subi	r30, 0xE3	; 227
    19ca:	fe 4f       	sbci	r31, 0xFE	; 254
    19cc:	80 81       	ld	r24, Z
    19ce:	91 81       	ldd	r25, Z+1	; 0x01
    19d0:	8d 93       	st	X+, r24
    19d2:	9c 93       	st	X, r25
    19d4:	fe 01       	movw	r30, r28
    19d6:	e7 5e       	subi	r30, 0xE7	; 231
    19d8:	fe 4f       	sbci	r31, 0xFE	; 254
    19da:	80 81       	ld	r24, Z
    19dc:	91 81       	ldd	r25, Z+1	; 0x01
    19de:	01 97       	sbiw	r24, 0x01	; 1
    19e0:	f1 f7       	brne	.-4      	; 0x19de <main+0x508>
    19e2:	fe 01       	movw	r30, r28
    19e4:	e7 5e       	subi	r30, 0xE7	; 231
    19e6:	fe 4f       	sbci	r31, 0xFE	; 254
    19e8:	91 83       	std	Z+1, r25	; 0x01
    19ea:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    19ec:	ce 01       	movw	r24, r28
    19ee:	87 5b       	subi	r24, 0xB7	; 183
    19f0:	9e 4f       	sbci	r25, 0xFE	; 254
    19f2:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber7(&SevenSegment1);
    19f6:	ce 01       	movw	r24, r28
    19f8:	86 5b       	subi	r24, 0xB6	; 182
    19fa:	9e 4f       	sbci	r25, 0xFE	; 254
    19fc:	0e 94 35 0a 	call	0x146a	; 0x146a <SevenSegment_voidDisplayNumber7>
    1a00:	fe 01       	movw	r30, r28
    1a02:	eb 5e       	subi	r30, 0xEB	; 235
    1a04:	fe 4f       	sbci	r31, 0xFE	; 254
    1a06:	80 e0       	ldi	r24, 0x00	; 0
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	aa e7       	ldi	r26, 0x7A	; 122
    1a0c:	b4 e4       	ldi	r27, 0x44	; 68
    1a0e:	80 83       	st	Z, r24
    1a10:	91 83       	std	Z+1, r25	; 0x01
    1a12:	a2 83       	std	Z+2, r26	; 0x02
    1a14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a16:	8e 01       	movw	r16, r28
    1a18:	0f 5e       	subi	r16, 0xEF	; 239
    1a1a:	1e 4f       	sbci	r17, 0xFE	; 254
    1a1c:	fe 01       	movw	r30, r28
    1a1e:	eb 5e       	subi	r30, 0xEB	; 235
    1a20:	fe 4f       	sbci	r31, 0xFE	; 254
    1a22:	60 81       	ld	r22, Z
    1a24:	71 81       	ldd	r23, Z+1	; 0x01
    1a26:	82 81       	ldd	r24, Z+2	; 0x02
    1a28:	93 81       	ldd	r25, Z+3	; 0x03
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	48 e4       	ldi	r20, 0x48	; 72
    1a30:	53 e4       	ldi	r21, 0x43	; 67
    1a32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a36:	dc 01       	movw	r26, r24
    1a38:	cb 01       	movw	r24, r22
    1a3a:	f8 01       	movw	r30, r16
    1a3c:	80 83       	st	Z, r24
    1a3e:	91 83       	std	Z+1, r25	; 0x01
    1a40:	a2 83       	std	Z+2, r26	; 0x02
    1a42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a44:	fe 01       	movw	r30, r28
    1a46:	ef 5e       	subi	r30, 0xEF	; 239
    1a48:	fe 4f       	sbci	r31, 0xFE	; 254
    1a4a:	60 81       	ld	r22, Z
    1a4c:	71 81       	ldd	r23, Z+1	; 0x01
    1a4e:	82 81       	ldd	r24, Z+2	; 0x02
    1a50:	93 81       	ldd	r25, Z+3	; 0x03
    1a52:	20 e0       	ldi	r18, 0x00	; 0
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	40 e8       	ldi	r20, 0x80	; 128
    1a58:	5f e3       	ldi	r21, 0x3F	; 63
    1a5a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a5e:	88 23       	and	r24, r24
    1a60:	44 f4       	brge	.+16     	; 0x1a72 <main+0x59c>
		__ticks = 1;
    1a62:	fe 01       	movw	r30, r28
    1a64:	e1 5f       	subi	r30, 0xF1	; 241
    1a66:	fe 4f       	sbci	r31, 0xFE	; 254
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	91 83       	std	Z+1, r25	; 0x01
    1a6e:	80 83       	st	Z, r24
    1a70:	64 c0       	rjmp	.+200    	; 0x1b3a <main+0x664>
	else if (__tmp > 65535)
    1a72:	fe 01       	movw	r30, r28
    1a74:	ef 5e       	subi	r30, 0xEF	; 239
    1a76:	fe 4f       	sbci	r31, 0xFE	; 254
    1a78:	60 81       	ld	r22, Z
    1a7a:	71 81       	ldd	r23, Z+1	; 0x01
    1a7c:	82 81       	ldd	r24, Z+2	; 0x02
    1a7e:	93 81       	ldd	r25, Z+3	; 0x03
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	3f ef       	ldi	r19, 0xFF	; 255
    1a84:	4f e7       	ldi	r20, 0x7F	; 127
    1a86:	57 e4       	ldi	r21, 0x47	; 71
    1a88:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a8c:	18 16       	cp	r1, r24
    1a8e:	0c f0       	brlt	.+2      	; 0x1a92 <main+0x5bc>
    1a90:	43 c0       	rjmp	.+134    	; 0x1b18 <main+0x642>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a92:	fe 01       	movw	r30, r28
    1a94:	eb 5e       	subi	r30, 0xEB	; 235
    1a96:	fe 4f       	sbci	r31, 0xFE	; 254
    1a98:	60 81       	ld	r22, Z
    1a9a:	71 81       	ldd	r23, Z+1	; 0x01
    1a9c:	82 81       	ldd	r24, Z+2	; 0x02
    1a9e:	93 81       	ldd	r25, Z+3	; 0x03
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	30 e0       	ldi	r19, 0x00	; 0
    1aa4:	40 e2       	ldi	r20, 0x20	; 32
    1aa6:	51 e4       	ldi	r21, 0x41	; 65
    1aa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aac:	dc 01       	movw	r26, r24
    1aae:	cb 01       	movw	r24, r22
    1ab0:	8e 01       	movw	r16, r28
    1ab2:	01 5f       	subi	r16, 0xF1	; 241
    1ab4:	1e 4f       	sbci	r17, 0xFE	; 254
    1ab6:	bc 01       	movw	r22, r24
    1ab8:	cd 01       	movw	r24, r26
    1aba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1abe:	dc 01       	movw	r26, r24
    1ac0:	cb 01       	movw	r24, r22
    1ac2:	f8 01       	movw	r30, r16
    1ac4:	91 83       	std	Z+1, r25	; 0x01
    1ac6:	80 83       	st	Z, r24
    1ac8:	1f c0       	rjmp	.+62     	; 0x1b08 <main+0x632>
    1aca:	fe 01       	movw	r30, r28
    1acc:	e3 5f       	subi	r30, 0xF3	; 243
    1ace:	fe 4f       	sbci	r31, 0xFE	; 254
    1ad0:	84 e1       	ldi	r24, 0x14	; 20
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	91 83       	std	Z+1, r25	; 0x01
    1ad6:	80 83       	st	Z, r24
    1ad8:	fe 01       	movw	r30, r28
    1ada:	e3 5f       	subi	r30, 0xF3	; 243
    1adc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ade:	80 81       	ld	r24, Z
    1ae0:	91 81       	ldd	r25, Z+1	; 0x01
    1ae2:	01 97       	sbiw	r24, 0x01	; 1
    1ae4:	f1 f7       	brne	.-4      	; 0x1ae2 <main+0x60c>
    1ae6:	fe 01       	movw	r30, r28
    1ae8:	e3 5f       	subi	r30, 0xF3	; 243
    1aea:	fe 4f       	sbci	r31, 0xFE	; 254
    1aec:	91 83       	std	Z+1, r25	; 0x01
    1aee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1af0:	de 01       	movw	r26, r28
    1af2:	a1 5f       	subi	r26, 0xF1	; 241
    1af4:	be 4f       	sbci	r27, 0xFE	; 254
    1af6:	fe 01       	movw	r30, r28
    1af8:	e1 5f       	subi	r30, 0xF1	; 241
    1afa:	fe 4f       	sbci	r31, 0xFE	; 254
    1afc:	80 81       	ld	r24, Z
    1afe:	91 81       	ldd	r25, Z+1	; 0x01
    1b00:	01 97       	sbiw	r24, 0x01	; 1
    1b02:	11 96       	adiw	r26, 0x01	; 1
    1b04:	9c 93       	st	X, r25
    1b06:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b08:	fe 01       	movw	r30, r28
    1b0a:	e1 5f       	subi	r30, 0xF1	; 241
    1b0c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b0e:	80 81       	ld	r24, Z
    1b10:	91 81       	ldd	r25, Z+1	; 0x01
    1b12:	00 97       	sbiw	r24, 0x00	; 0
    1b14:	d1 f6       	brne	.-76     	; 0x1aca <main+0x5f4>
    1b16:	27 c0       	rjmp	.+78     	; 0x1b66 <main+0x690>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b18:	8e 01       	movw	r16, r28
    1b1a:	01 5f       	subi	r16, 0xF1	; 241
    1b1c:	1e 4f       	sbci	r17, 0xFE	; 254
    1b1e:	fe 01       	movw	r30, r28
    1b20:	ef 5e       	subi	r30, 0xEF	; 239
    1b22:	fe 4f       	sbci	r31, 0xFE	; 254
    1b24:	60 81       	ld	r22, Z
    1b26:	71 81       	ldd	r23, Z+1	; 0x01
    1b28:	82 81       	ldd	r24, Z+2	; 0x02
    1b2a:	93 81       	ldd	r25, Z+3	; 0x03
    1b2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b30:	dc 01       	movw	r26, r24
    1b32:	cb 01       	movw	r24, r22
    1b34:	f8 01       	movw	r30, r16
    1b36:	91 83       	std	Z+1, r25	; 0x01
    1b38:	80 83       	st	Z, r24
    1b3a:	de 01       	movw	r26, r28
    1b3c:	a5 5f       	subi	r26, 0xF5	; 245
    1b3e:	be 4f       	sbci	r27, 0xFE	; 254
    1b40:	fe 01       	movw	r30, r28
    1b42:	e1 5f       	subi	r30, 0xF1	; 241
    1b44:	fe 4f       	sbci	r31, 0xFE	; 254
    1b46:	80 81       	ld	r24, Z
    1b48:	91 81       	ldd	r25, Z+1	; 0x01
    1b4a:	8d 93       	st	X+, r24
    1b4c:	9c 93       	st	X, r25
    1b4e:	fe 01       	movw	r30, r28
    1b50:	e5 5f       	subi	r30, 0xF5	; 245
    1b52:	fe 4f       	sbci	r31, 0xFE	; 254
    1b54:	80 81       	ld	r24, Z
    1b56:	91 81       	ldd	r25, Z+1	; 0x01
    1b58:	01 97       	sbiw	r24, 0x01	; 1
    1b5a:	f1 f7       	brne	.-4      	; 0x1b58 <main+0x682>
    1b5c:	fe 01       	movw	r30, r28
    1b5e:	e5 5f       	subi	r30, 0xF5	; 245
    1b60:	fe 4f       	sbci	r31, 0xFE	; 254
    1b62:	91 83       	std	Z+1, r25	; 0x01
    1b64:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    1b66:	ce 01       	movw	r24, r28
    1b68:	87 5b       	subi	r24, 0xB7	; 183
    1b6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1b6c:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber6(&SevenSegment1);
    1b70:	ce 01       	movw	r24, r28
    1b72:	86 5b       	subi	r24, 0xB6	; 182
    1b74:	9e 4f       	sbci	r25, 0xFE	; 254
    1b76:	0e 94 23 0a 	call	0x1446	; 0x1446 <SevenSegment_voidDisplayNumber6>
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	e9 5f       	subi	r30, 0xF9	; 249
    1b7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b80:	80 e0       	ldi	r24, 0x00	; 0
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	aa e7       	ldi	r26, 0x7A	; 122
    1b86:	b4 e4       	ldi	r27, 0x44	; 68
    1b88:	80 83       	st	Z, r24
    1b8a:	91 83       	std	Z+1, r25	; 0x01
    1b8c:	a2 83       	std	Z+2, r26	; 0x02
    1b8e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b90:	8e 01       	movw	r16, r28
    1b92:	0d 5f       	subi	r16, 0xFD	; 253
    1b94:	1e 4f       	sbci	r17, 0xFE	; 254
    1b96:	fe 01       	movw	r30, r28
    1b98:	e9 5f       	subi	r30, 0xF9	; 249
    1b9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b9c:	60 81       	ld	r22, Z
    1b9e:	71 81       	ldd	r23, Z+1	; 0x01
    1ba0:	82 81       	ldd	r24, Z+2	; 0x02
    1ba2:	93 81       	ldd	r25, Z+3	; 0x03
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	48 e4       	ldi	r20, 0x48	; 72
    1baa:	53 e4       	ldi	r21, 0x43	; 67
    1bac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bb0:	dc 01       	movw	r26, r24
    1bb2:	cb 01       	movw	r24, r22
    1bb4:	f8 01       	movw	r30, r16
    1bb6:	80 83       	st	Z, r24
    1bb8:	91 83       	std	Z+1, r25	; 0x01
    1bba:	a2 83       	std	Z+2, r26	; 0x02
    1bbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bbe:	fe 01       	movw	r30, r28
    1bc0:	ed 5f       	subi	r30, 0xFD	; 253
    1bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	40 e8       	ldi	r20, 0x80	; 128
    1bd2:	5f e3       	ldi	r21, 0x3F	; 63
    1bd4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bd8:	88 23       	and	r24, r24
    1bda:	44 f4       	brge	.+16     	; 0x1bec <main+0x716>
		__ticks = 1;
    1bdc:	fe 01       	movw	r30, r28
    1bde:	ef 5f       	subi	r30, 0xFF	; 255
    1be0:	fe 4f       	sbci	r31, 0xFE	; 254
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	91 83       	std	Z+1, r25	; 0x01
    1be8:	80 83       	st	Z, r24
    1bea:	64 c0       	rjmp	.+200    	; 0x1cb4 <main+0x7de>
	else if (__tmp > 65535)
    1bec:	fe 01       	movw	r30, r28
    1bee:	ed 5f       	subi	r30, 0xFD	; 253
    1bf0:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf2:	60 81       	ld	r22, Z
    1bf4:	71 81       	ldd	r23, Z+1	; 0x01
    1bf6:	82 81       	ldd	r24, Z+2	; 0x02
    1bf8:	93 81       	ldd	r25, Z+3	; 0x03
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	3f ef       	ldi	r19, 0xFF	; 255
    1bfe:	4f e7       	ldi	r20, 0x7F	; 127
    1c00:	57 e4       	ldi	r21, 0x47	; 71
    1c02:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c06:	18 16       	cp	r1, r24
    1c08:	0c f0       	brlt	.+2      	; 0x1c0c <main+0x736>
    1c0a:	43 c0       	rjmp	.+134    	; 0x1c92 <main+0x7bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c0c:	fe 01       	movw	r30, r28
    1c0e:	e9 5f       	subi	r30, 0xF9	; 249
    1c10:	fe 4f       	sbci	r31, 0xFE	; 254
    1c12:	60 81       	ld	r22, Z
    1c14:	71 81       	ldd	r23, Z+1	; 0x01
    1c16:	82 81       	ldd	r24, Z+2	; 0x02
    1c18:	93 81       	ldd	r25, Z+3	; 0x03
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	40 e2       	ldi	r20, 0x20	; 32
    1c20:	51 e4       	ldi	r21, 0x41	; 65
    1c22:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c26:	dc 01       	movw	r26, r24
    1c28:	cb 01       	movw	r24, r22
    1c2a:	8e 01       	movw	r16, r28
    1c2c:	0f 5f       	subi	r16, 0xFF	; 255
    1c2e:	1e 4f       	sbci	r17, 0xFE	; 254
    1c30:	bc 01       	movw	r22, r24
    1c32:	cd 01       	movw	r24, r26
    1c34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c38:	dc 01       	movw	r26, r24
    1c3a:	cb 01       	movw	r24, r22
    1c3c:	f8 01       	movw	r30, r16
    1c3e:	91 83       	std	Z+1, r25	; 0x01
    1c40:	80 83       	st	Z, r24
    1c42:	1f c0       	rjmp	.+62     	; 0x1c82 <main+0x7ac>
    1c44:	fe 01       	movw	r30, r28
    1c46:	e1 50       	subi	r30, 0x01	; 1
    1c48:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4a:	84 e1       	ldi	r24, 0x14	; 20
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	91 83       	std	Z+1, r25	; 0x01
    1c50:	80 83       	st	Z, r24
    1c52:	fe 01       	movw	r30, r28
    1c54:	e1 50       	subi	r30, 0x01	; 1
    1c56:	ff 4f       	sbci	r31, 0xFF	; 255
    1c58:	80 81       	ld	r24, Z
    1c5a:	91 81       	ldd	r25, Z+1	; 0x01
    1c5c:	01 97       	sbiw	r24, 0x01	; 1
    1c5e:	f1 f7       	brne	.-4      	; 0x1c5c <main+0x786>
    1c60:	fe 01       	movw	r30, r28
    1c62:	e1 50       	subi	r30, 0x01	; 1
    1c64:	ff 4f       	sbci	r31, 0xFF	; 255
    1c66:	91 83       	std	Z+1, r25	; 0x01
    1c68:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c6a:	de 01       	movw	r26, r28
    1c6c:	af 5f       	subi	r26, 0xFF	; 255
    1c6e:	be 4f       	sbci	r27, 0xFE	; 254
    1c70:	fe 01       	movw	r30, r28
    1c72:	ef 5f       	subi	r30, 0xFF	; 255
    1c74:	fe 4f       	sbci	r31, 0xFE	; 254
    1c76:	80 81       	ld	r24, Z
    1c78:	91 81       	ldd	r25, Z+1	; 0x01
    1c7a:	01 97       	sbiw	r24, 0x01	; 1
    1c7c:	11 96       	adiw	r26, 0x01	; 1
    1c7e:	9c 93       	st	X, r25
    1c80:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c82:	fe 01       	movw	r30, r28
    1c84:	ef 5f       	subi	r30, 0xFF	; 255
    1c86:	fe 4f       	sbci	r31, 0xFE	; 254
    1c88:	80 81       	ld	r24, Z
    1c8a:	91 81       	ldd	r25, Z+1	; 0x01
    1c8c:	00 97       	sbiw	r24, 0x00	; 0
    1c8e:	d1 f6       	brne	.-76     	; 0x1c44 <main+0x76e>
    1c90:	27 c0       	rjmp	.+78     	; 0x1ce0 <main+0x80a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c92:	8e 01       	movw	r16, r28
    1c94:	0f 5f       	subi	r16, 0xFF	; 255
    1c96:	1e 4f       	sbci	r17, 0xFE	; 254
    1c98:	fe 01       	movw	r30, r28
    1c9a:	ed 5f       	subi	r30, 0xFD	; 253
    1c9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c9e:	60 81       	ld	r22, Z
    1ca0:	71 81       	ldd	r23, Z+1	; 0x01
    1ca2:	82 81       	ldd	r24, Z+2	; 0x02
    1ca4:	93 81       	ldd	r25, Z+3	; 0x03
    1ca6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1caa:	dc 01       	movw	r26, r24
    1cac:	cb 01       	movw	r24, r22
    1cae:	f8 01       	movw	r30, r16
    1cb0:	91 83       	std	Z+1, r25	; 0x01
    1cb2:	80 83       	st	Z, r24
    1cb4:	de 01       	movw	r26, r28
    1cb6:	a3 50       	subi	r26, 0x03	; 3
    1cb8:	bf 4f       	sbci	r27, 0xFF	; 255
    1cba:	fe 01       	movw	r30, r28
    1cbc:	ef 5f       	subi	r30, 0xFF	; 255
    1cbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc0:	80 81       	ld	r24, Z
    1cc2:	91 81       	ldd	r25, Z+1	; 0x01
    1cc4:	8d 93       	st	X+, r24
    1cc6:	9c 93       	st	X, r25
    1cc8:	fe 01       	movw	r30, r28
    1cca:	e3 50       	subi	r30, 0x03	; 3
    1ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cce:	80 81       	ld	r24, Z
    1cd0:	91 81       	ldd	r25, Z+1	; 0x01
    1cd2:	01 97       	sbiw	r24, 0x01	; 1
    1cd4:	f1 f7       	brne	.-4      	; 0x1cd2 <main+0x7fc>
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	e3 50       	subi	r30, 0x03	; 3
    1cda:	ff 4f       	sbci	r31, 0xFF	; 255
    1cdc:	91 83       	std	Z+1, r25	; 0x01
    1cde:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    1ce0:	ce 01       	movw	r24, r28
    1ce2:	87 5b       	subi	r24, 0xB7	; 183
    1ce4:	9e 4f       	sbci	r25, 0xFE	; 254
    1ce6:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber5(&SevenSegment1);
    1cea:	ce 01       	movw	r24, r28
    1cec:	86 5b       	subi	r24, 0xB6	; 182
    1cee:	9e 4f       	sbci	r25, 0xFE	; 254
    1cf0:	0e 94 11 0a 	call	0x1422	; 0x1422 <SevenSegment_voidDisplayNumber5>
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	e7 50       	subi	r30, 0x07	; 7
    1cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfa:	80 e0       	ldi	r24, 0x00	; 0
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	aa e7       	ldi	r26, 0x7A	; 122
    1d00:	b4 e4       	ldi	r27, 0x44	; 68
    1d02:	80 83       	st	Z, r24
    1d04:	91 83       	std	Z+1, r25	; 0x01
    1d06:	a2 83       	std	Z+2, r26	; 0x02
    1d08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d0a:	8e 01       	movw	r16, r28
    1d0c:	0b 50       	subi	r16, 0x0B	; 11
    1d0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d10:	fe 01       	movw	r30, r28
    1d12:	e7 50       	subi	r30, 0x07	; 7
    1d14:	ff 4f       	sbci	r31, 0xFF	; 255
    1d16:	60 81       	ld	r22, Z
    1d18:	71 81       	ldd	r23, Z+1	; 0x01
    1d1a:	82 81       	ldd	r24, Z+2	; 0x02
    1d1c:	93 81       	ldd	r25, Z+3	; 0x03
    1d1e:	20 e0       	ldi	r18, 0x00	; 0
    1d20:	30 e0       	ldi	r19, 0x00	; 0
    1d22:	48 e4       	ldi	r20, 0x48	; 72
    1d24:	53 e4       	ldi	r21, 0x43	; 67
    1d26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d2a:	dc 01       	movw	r26, r24
    1d2c:	cb 01       	movw	r24, r22
    1d2e:	f8 01       	movw	r30, r16
    1d30:	80 83       	st	Z, r24
    1d32:	91 83       	std	Z+1, r25	; 0x01
    1d34:	a2 83       	std	Z+2, r26	; 0x02
    1d36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d38:	fe 01       	movw	r30, r28
    1d3a:	eb 50       	subi	r30, 0x0B	; 11
    1d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3e:	60 81       	ld	r22, Z
    1d40:	71 81       	ldd	r23, Z+1	; 0x01
    1d42:	82 81       	ldd	r24, Z+2	; 0x02
    1d44:	93 81       	ldd	r25, Z+3	; 0x03
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	40 e8       	ldi	r20, 0x80	; 128
    1d4c:	5f e3       	ldi	r21, 0x3F	; 63
    1d4e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d52:	88 23       	and	r24, r24
    1d54:	44 f4       	brge	.+16     	; 0x1d66 <main+0x890>
		__ticks = 1;
    1d56:	fe 01       	movw	r30, r28
    1d58:	ed 50       	subi	r30, 0x0D	; 13
    1d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	91 83       	std	Z+1, r25	; 0x01
    1d62:	80 83       	st	Z, r24
    1d64:	64 c0       	rjmp	.+200    	; 0x1e2e <main+0x958>
	else if (__tmp > 65535)
    1d66:	fe 01       	movw	r30, r28
    1d68:	eb 50       	subi	r30, 0x0B	; 11
    1d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6c:	60 81       	ld	r22, Z
    1d6e:	71 81       	ldd	r23, Z+1	; 0x01
    1d70:	82 81       	ldd	r24, Z+2	; 0x02
    1d72:	93 81       	ldd	r25, Z+3	; 0x03
    1d74:	20 e0       	ldi	r18, 0x00	; 0
    1d76:	3f ef       	ldi	r19, 0xFF	; 255
    1d78:	4f e7       	ldi	r20, 0x7F	; 127
    1d7a:	57 e4       	ldi	r21, 0x47	; 71
    1d7c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d80:	18 16       	cp	r1, r24
    1d82:	0c f0       	brlt	.+2      	; 0x1d86 <main+0x8b0>
    1d84:	43 c0       	rjmp	.+134    	; 0x1e0c <main+0x936>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d86:	fe 01       	movw	r30, r28
    1d88:	e7 50       	subi	r30, 0x07	; 7
    1d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8c:	60 81       	ld	r22, Z
    1d8e:	71 81       	ldd	r23, Z+1	; 0x01
    1d90:	82 81       	ldd	r24, Z+2	; 0x02
    1d92:	93 81       	ldd	r25, Z+3	; 0x03
    1d94:	20 e0       	ldi	r18, 0x00	; 0
    1d96:	30 e0       	ldi	r19, 0x00	; 0
    1d98:	40 e2       	ldi	r20, 0x20	; 32
    1d9a:	51 e4       	ldi	r21, 0x41	; 65
    1d9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da0:	dc 01       	movw	r26, r24
    1da2:	cb 01       	movw	r24, r22
    1da4:	8e 01       	movw	r16, r28
    1da6:	0d 50       	subi	r16, 0x0D	; 13
    1da8:	1f 4f       	sbci	r17, 0xFF	; 255
    1daa:	bc 01       	movw	r22, r24
    1dac:	cd 01       	movw	r24, r26
    1dae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	f8 01       	movw	r30, r16
    1db8:	91 83       	std	Z+1, r25	; 0x01
    1dba:	80 83       	st	Z, r24
    1dbc:	1f c0       	rjmp	.+62     	; 0x1dfc <main+0x926>
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	ef 50       	subi	r30, 0x0F	; 15
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	84 e1       	ldi	r24, 0x14	; 20
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	91 83       	std	Z+1, r25	; 0x01
    1dca:	80 83       	st	Z, r24
    1dcc:	fe 01       	movw	r30, r28
    1dce:	ef 50       	subi	r30, 0x0F	; 15
    1dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd2:	80 81       	ld	r24, Z
    1dd4:	91 81       	ldd	r25, Z+1	; 0x01
    1dd6:	01 97       	sbiw	r24, 0x01	; 1
    1dd8:	f1 f7       	brne	.-4      	; 0x1dd6 <main+0x900>
    1dda:	fe 01       	movw	r30, r28
    1ddc:	ef 50       	subi	r30, 0x0F	; 15
    1dde:	ff 4f       	sbci	r31, 0xFF	; 255
    1de0:	91 83       	std	Z+1, r25	; 0x01
    1de2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1de4:	de 01       	movw	r26, r28
    1de6:	ad 50       	subi	r26, 0x0D	; 13
    1de8:	bf 4f       	sbci	r27, 0xFF	; 255
    1dea:	fe 01       	movw	r30, r28
    1dec:	ed 50       	subi	r30, 0x0D	; 13
    1dee:	ff 4f       	sbci	r31, 0xFF	; 255
    1df0:	80 81       	ld	r24, Z
    1df2:	91 81       	ldd	r25, Z+1	; 0x01
    1df4:	01 97       	sbiw	r24, 0x01	; 1
    1df6:	11 96       	adiw	r26, 0x01	; 1
    1df8:	9c 93       	st	X, r25
    1dfa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	ed 50       	subi	r30, 0x0D	; 13
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	80 81       	ld	r24, Z
    1e04:	91 81       	ldd	r25, Z+1	; 0x01
    1e06:	00 97       	sbiw	r24, 0x00	; 0
    1e08:	d1 f6       	brne	.-76     	; 0x1dbe <main+0x8e8>
    1e0a:	27 c0       	rjmp	.+78     	; 0x1e5a <main+0x984>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e0c:	8e 01       	movw	r16, r28
    1e0e:	0d 50       	subi	r16, 0x0D	; 13
    1e10:	1f 4f       	sbci	r17, 0xFF	; 255
    1e12:	fe 01       	movw	r30, r28
    1e14:	eb 50       	subi	r30, 0x0B	; 11
    1e16:	ff 4f       	sbci	r31, 0xFF	; 255
    1e18:	60 81       	ld	r22, Z
    1e1a:	71 81       	ldd	r23, Z+1	; 0x01
    1e1c:	82 81       	ldd	r24, Z+2	; 0x02
    1e1e:	93 81       	ldd	r25, Z+3	; 0x03
    1e20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e24:	dc 01       	movw	r26, r24
    1e26:	cb 01       	movw	r24, r22
    1e28:	f8 01       	movw	r30, r16
    1e2a:	91 83       	std	Z+1, r25	; 0x01
    1e2c:	80 83       	st	Z, r24
    1e2e:	de 01       	movw	r26, r28
    1e30:	a1 51       	subi	r26, 0x11	; 17
    1e32:	bf 4f       	sbci	r27, 0xFF	; 255
    1e34:	fe 01       	movw	r30, r28
    1e36:	ed 50       	subi	r30, 0x0D	; 13
    1e38:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3a:	80 81       	ld	r24, Z
    1e3c:	91 81       	ldd	r25, Z+1	; 0x01
    1e3e:	8d 93       	st	X+, r24
    1e40:	9c 93       	st	X, r25
    1e42:	fe 01       	movw	r30, r28
    1e44:	e1 51       	subi	r30, 0x11	; 17
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	80 81       	ld	r24, Z
    1e4a:	91 81       	ldd	r25, Z+1	; 0x01
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <main+0x976>
    1e50:	fe 01       	movw	r30, r28
    1e52:	e1 51       	subi	r30, 0x11	; 17
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	87 5b       	subi	r24, 0xB7	; 183
    1e5e:	9e 4f       	sbci	r25, 0xFE	; 254
    1e60:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber4(&SevenSegment1);
    1e64:	ce 01       	movw	r24, r28
    1e66:	86 5b       	subi	r24, 0xB6	; 182
    1e68:	9e 4f       	sbci	r25, 0xFE	; 254
    1e6a:	0e 94 ff 09 	call	0x13fe	; 0x13fe <SevenSegment_voidDisplayNumber4>
    1e6e:	fe 01       	movw	r30, r28
    1e70:	e5 51       	subi	r30, 0x15	; 21
    1e72:	ff 4f       	sbci	r31, 0xFF	; 255
    1e74:	80 e0       	ldi	r24, 0x00	; 0
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	aa e7       	ldi	r26, 0x7A	; 122
    1e7a:	b4 e4       	ldi	r27, 0x44	; 68
    1e7c:	80 83       	st	Z, r24
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	a2 83       	std	Z+2, r26	; 0x02
    1e82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e84:	8e 01       	movw	r16, r28
    1e86:	09 51       	subi	r16, 0x19	; 25
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	fe 01       	movw	r30, r28
    1e8c:	e5 51       	subi	r30, 0x15	; 21
    1e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e90:	60 81       	ld	r22, Z
    1e92:	71 81       	ldd	r23, Z+1	; 0x01
    1e94:	82 81       	ldd	r24, Z+2	; 0x02
    1e96:	93 81       	ldd	r25, Z+3	; 0x03
    1e98:	20 e0       	ldi	r18, 0x00	; 0
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	48 e4       	ldi	r20, 0x48	; 72
    1e9e:	53 e4       	ldi	r21, 0x43	; 67
    1ea0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea4:	dc 01       	movw	r26, r24
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	f8 01       	movw	r30, r16
    1eaa:	80 83       	st	Z, r24
    1eac:	91 83       	std	Z+1, r25	; 0x01
    1eae:	a2 83       	std	Z+2, r26	; 0x02
    1eb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	e9 51       	subi	r30, 0x19	; 25
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	60 81       	ld	r22, Z
    1eba:	71 81       	ldd	r23, Z+1	; 0x01
    1ebc:	82 81       	ldd	r24, Z+2	; 0x02
    1ebe:	93 81       	ldd	r25, Z+3	; 0x03
    1ec0:	20 e0       	ldi	r18, 0x00	; 0
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	40 e8       	ldi	r20, 0x80	; 128
    1ec6:	5f e3       	ldi	r21, 0x3F	; 63
    1ec8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ecc:	88 23       	and	r24, r24
    1ece:	44 f4       	brge	.+16     	; 0x1ee0 <main+0xa0a>
		__ticks = 1;
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	eb 51       	subi	r30, 0x1B	; 27
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	90 e0       	ldi	r25, 0x00	; 0
    1eda:	91 83       	std	Z+1, r25	; 0x01
    1edc:	80 83       	st	Z, r24
    1ede:	64 c0       	rjmp	.+200    	; 0x1fa8 <main+0xad2>
	else if (__tmp > 65535)
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	e9 51       	subi	r30, 0x19	; 25
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	60 81       	ld	r22, Z
    1ee8:	71 81       	ldd	r23, Z+1	; 0x01
    1eea:	82 81       	ldd	r24, Z+2	; 0x02
    1eec:	93 81       	ldd	r25, Z+3	; 0x03
    1eee:	20 e0       	ldi	r18, 0x00	; 0
    1ef0:	3f ef       	ldi	r19, 0xFF	; 255
    1ef2:	4f e7       	ldi	r20, 0x7F	; 127
    1ef4:	57 e4       	ldi	r21, 0x47	; 71
    1ef6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1efa:	18 16       	cp	r1, r24
    1efc:	0c f0       	brlt	.+2      	; 0x1f00 <main+0xa2a>
    1efe:	43 c0       	rjmp	.+134    	; 0x1f86 <main+0xab0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f00:	fe 01       	movw	r30, r28
    1f02:	e5 51       	subi	r30, 0x15	; 21
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	60 81       	ld	r22, Z
    1f08:	71 81       	ldd	r23, Z+1	; 0x01
    1f0a:	82 81       	ldd	r24, Z+2	; 0x02
    1f0c:	93 81       	ldd	r25, Z+3	; 0x03
    1f0e:	20 e0       	ldi	r18, 0x00	; 0
    1f10:	30 e0       	ldi	r19, 0x00	; 0
    1f12:	40 e2       	ldi	r20, 0x20	; 32
    1f14:	51 e4       	ldi	r21, 0x41	; 65
    1f16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f1a:	dc 01       	movw	r26, r24
    1f1c:	cb 01       	movw	r24, r22
    1f1e:	8e 01       	movw	r16, r28
    1f20:	0b 51       	subi	r16, 0x1B	; 27
    1f22:	1f 4f       	sbci	r17, 0xFF	; 255
    1f24:	bc 01       	movw	r22, r24
    1f26:	cd 01       	movw	r24, r26
    1f28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f2c:	dc 01       	movw	r26, r24
    1f2e:	cb 01       	movw	r24, r22
    1f30:	f8 01       	movw	r30, r16
    1f32:	91 83       	std	Z+1, r25	; 0x01
    1f34:	80 83       	st	Z, r24
    1f36:	1f c0       	rjmp	.+62     	; 0x1f76 <main+0xaa0>
    1f38:	fe 01       	movw	r30, r28
    1f3a:	ed 51       	subi	r30, 0x1D	; 29
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	84 e1       	ldi	r24, 0x14	; 20
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	91 83       	std	Z+1, r25	; 0x01
    1f44:	80 83       	st	Z, r24
    1f46:	fe 01       	movw	r30, r28
    1f48:	ed 51       	subi	r30, 0x1D	; 29
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	80 81       	ld	r24, Z
    1f4e:	91 81       	ldd	r25, Z+1	; 0x01
    1f50:	01 97       	sbiw	r24, 0x01	; 1
    1f52:	f1 f7       	brne	.-4      	; 0x1f50 <main+0xa7a>
    1f54:	fe 01       	movw	r30, r28
    1f56:	ed 51       	subi	r30, 0x1D	; 29
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	91 83       	std	Z+1, r25	; 0x01
    1f5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f5e:	de 01       	movw	r26, r28
    1f60:	ab 51       	subi	r26, 0x1B	; 27
    1f62:	bf 4f       	sbci	r27, 0xFF	; 255
    1f64:	fe 01       	movw	r30, r28
    1f66:	eb 51       	subi	r30, 0x1B	; 27
    1f68:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6a:	80 81       	ld	r24, Z
    1f6c:	91 81       	ldd	r25, Z+1	; 0x01
    1f6e:	01 97       	sbiw	r24, 0x01	; 1
    1f70:	11 96       	adiw	r26, 0x01	; 1
    1f72:	9c 93       	st	X, r25
    1f74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f76:	fe 01       	movw	r30, r28
    1f78:	eb 51       	subi	r30, 0x1B	; 27
    1f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7c:	80 81       	ld	r24, Z
    1f7e:	91 81       	ldd	r25, Z+1	; 0x01
    1f80:	00 97       	sbiw	r24, 0x00	; 0
    1f82:	d1 f6       	brne	.-76     	; 0x1f38 <main+0xa62>
    1f84:	27 c0       	rjmp	.+78     	; 0x1fd4 <main+0xafe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f86:	8e 01       	movw	r16, r28
    1f88:	0b 51       	subi	r16, 0x1B	; 27
    1f8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f8c:	fe 01       	movw	r30, r28
    1f8e:	e9 51       	subi	r30, 0x19	; 25
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	60 81       	ld	r22, Z
    1f94:	71 81       	ldd	r23, Z+1	; 0x01
    1f96:	82 81       	ldd	r24, Z+2	; 0x02
    1f98:	93 81       	ldd	r25, Z+3	; 0x03
    1f9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f9e:	dc 01       	movw	r26, r24
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	f8 01       	movw	r30, r16
    1fa4:	91 83       	std	Z+1, r25	; 0x01
    1fa6:	80 83       	st	Z, r24
    1fa8:	de 01       	movw	r26, r28
    1faa:	af 51       	subi	r26, 0x1F	; 31
    1fac:	bf 4f       	sbci	r27, 0xFF	; 255
    1fae:	fe 01       	movw	r30, r28
    1fb0:	eb 51       	subi	r30, 0x1B	; 27
    1fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb4:	80 81       	ld	r24, Z
    1fb6:	91 81       	ldd	r25, Z+1	; 0x01
    1fb8:	8d 93       	st	X+, r24
    1fba:	9c 93       	st	X, r25
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	ef 51       	subi	r30, 0x1F	; 31
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	80 81       	ld	r24, Z
    1fc4:	91 81       	ldd	r25, Z+1	; 0x01
    1fc6:	01 97       	sbiw	r24, 0x01	; 1
    1fc8:	f1 f7       	brne	.-4      	; 0x1fc6 <main+0xaf0>
    1fca:	fe 01       	movw	r30, r28
    1fcc:	ef 51       	subi	r30, 0x1F	; 31
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	91 83       	std	Z+1, r25	; 0x01
    1fd2:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    1fd4:	ce 01       	movw	r24, r28
    1fd6:	87 5b       	subi	r24, 0xB7	; 183
    1fd8:	9e 4f       	sbci	r25, 0xFE	; 254
    1fda:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber3(&SevenSegment1);
    1fde:	ce 01       	movw	r24, r28
    1fe0:	86 5b       	subi	r24, 0xB6	; 182
    1fe2:	9e 4f       	sbci	r25, 0xFE	; 254
    1fe4:	0e 94 ed 09 	call	0x13da	; 0x13da <SevenSegment_voidDisplayNumber3>
    1fe8:	fe 01       	movw	r30, r28
    1fea:	e3 52       	subi	r30, 0x23	; 35
    1fec:	ff 4f       	sbci	r31, 0xFF	; 255
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	aa e7       	ldi	r26, 0x7A	; 122
    1ff4:	b4 e4       	ldi	r27, 0x44	; 68
    1ff6:	80 83       	st	Z, r24
    1ff8:	91 83       	std	Z+1, r25	; 0x01
    1ffa:	a2 83       	std	Z+2, r26	; 0x02
    1ffc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ffe:	8e 01       	movw	r16, r28
    2000:	07 52       	subi	r16, 0x27	; 39
    2002:	1f 4f       	sbci	r17, 0xFF	; 255
    2004:	fe 01       	movw	r30, r28
    2006:	e3 52       	subi	r30, 0x23	; 35
    2008:	ff 4f       	sbci	r31, 0xFF	; 255
    200a:	60 81       	ld	r22, Z
    200c:	71 81       	ldd	r23, Z+1	; 0x01
    200e:	82 81       	ldd	r24, Z+2	; 0x02
    2010:	93 81       	ldd	r25, Z+3	; 0x03
    2012:	20 e0       	ldi	r18, 0x00	; 0
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	48 e4       	ldi	r20, 0x48	; 72
    2018:	53 e4       	ldi	r21, 0x43	; 67
    201a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    201e:	dc 01       	movw	r26, r24
    2020:	cb 01       	movw	r24, r22
    2022:	f8 01       	movw	r30, r16
    2024:	80 83       	st	Z, r24
    2026:	91 83       	std	Z+1, r25	; 0x01
    2028:	a2 83       	std	Z+2, r26	; 0x02
    202a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    202c:	fe 01       	movw	r30, r28
    202e:	e7 52       	subi	r30, 0x27	; 39
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	60 81       	ld	r22, Z
    2034:	71 81       	ldd	r23, Z+1	; 0x01
    2036:	82 81       	ldd	r24, Z+2	; 0x02
    2038:	93 81       	ldd	r25, Z+3	; 0x03
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	40 e8       	ldi	r20, 0x80	; 128
    2040:	5f e3       	ldi	r21, 0x3F	; 63
    2042:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2046:	88 23       	and	r24, r24
    2048:	44 f4       	brge	.+16     	; 0x205a <main+0xb84>
		__ticks = 1;
    204a:	fe 01       	movw	r30, r28
    204c:	e9 52       	subi	r30, 0x29	; 41
    204e:	ff 4f       	sbci	r31, 0xFF	; 255
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	91 83       	std	Z+1, r25	; 0x01
    2056:	80 83       	st	Z, r24
    2058:	64 c0       	rjmp	.+200    	; 0x2122 <main+0xc4c>
	else if (__tmp > 65535)
    205a:	fe 01       	movw	r30, r28
    205c:	e7 52       	subi	r30, 0x27	; 39
    205e:	ff 4f       	sbci	r31, 0xFF	; 255
    2060:	60 81       	ld	r22, Z
    2062:	71 81       	ldd	r23, Z+1	; 0x01
    2064:	82 81       	ldd	r24, Z+2	; 0x02
    2066:	93 81       	ldd	r25, Z+3	; 0x03
    2068:	20 e0       	ldi	r18, 0x00	; 0
    206a:	3f ef       	ldi	r19, 0xFF	; 255
    206c:	4f e7       	ldi	r20, 0x7F	; 127
    206e:	57 e4       	ldi	r21, 0x47	; 71
    2070:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2074:	18 16       	cp	r1, r24
    2076:	0c f0       	brlt	.+2      	; 0x207a <main+0xba4>
    2078:	43 c0       	rjmp	.+134    	; 0x2100 <main+0xc2a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    207a:	fe 01       	movw	r30, r28
    207c:	e3 52       	subi	r30, 0x23	; 35
    207e:	ff 4f       	sbci	r31, 0xFF	; 255
    2080:	60 81       	ld	r22, Z
    2082:	71 81       	ldd	r23, Z+1	; 0x01
    2084:	82 81       	ldd	r24, Z+2	; 0x02
    2086:	93 81       	ldd	r25, Z+3	; 0x03
    2088:	20 e0       	ldi	r18, 0x00	; 0
    208a:	30 e0       	ldi	r19, 0x00	; 0
    208c:	40 e2       	ldi	r20, 0x20	; 32
    208e:	51 e4       	ldi	r21, 0x41	; 65
    2090:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2094:	dc 01       	movw	r26, r24
    2096:	cb 01       	movw	r24, r22
    2098:	8e 01       	movw	r16, r28
    209a:	09 52       	subi	r16, 0x29	; 41
    209c:	1f 4f       	sbci	r17, 0xFF	; 255
    209e:	bc 01       	movw	r22, r24
    20a0:	cd 01       	movw	r24, r26
    20a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20a6:	dc 01       	movw	r26, r24
    20a8:	cb 01       	movw	r24, r22
    20aa:	f8 01       	movw	r30, r16
    20ac:	91 83       	std	Z+1, r25	; 0x01
    20ae:	80 83       	st	Z, r24
    20b0:	1f c0       	rjmp	.+62     	; 0x20f0 <main+0xc1a>
    20b2:	fe 01       	movw	r30, r28
    20b4:	eb 52       	subi	r30, 0x2B	; 43
    20b6:	ff 4f       	sbci	r31, 0xFF	; 255
    20b8:	84 e1       	ldi	r24, 0x14	; 20
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	91 83       	std	Z+1, r25	; 0x01
    20be:	80 83       	st	Z, r24
    20c0:	fe 01       	movw	r30, r28
    20c2:	eb 52       	subi	r30, 0x2B	; 43
    20c4:	ff 4f       	sbci	r31, 0xFF	; 255
    20c6:	80 81       	ld	r24, Z
    20c8:	91 81       	ldd	r25, Z+1	; 0x01
    20ca:	01 97       	sbiw	r24, 0x01	; 1
    20cc:	f1 f7       	brne	.-4      	; 0x20ca <main+0xbf4>
    20ce:	fe 01       	movw	r30, r28
    20d0:	eb 52       	subi	r30, 0x2B	; 43
    20d2:	ff 4f       	sbci	r31, 0xFF	; 255
    20d4:	91 83       	std	Z+1, r25	; 0x01
    20d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20d8:	de 01       	movw	r26, r28
    20da:	a9 52       	subi	r26, 0x29	; 41
    20dc:	bf 4f       	sbci	r27, 0xFF	; 255
    20de:	fe 01       	movw	r30, r28
    20e0:	e9 52       	subi	r30, 0x29	; 41
    20e2:	ff 4f       	sbci	r31, 0xFF	; 255
    20e4:	80 81       	ld	r24, Z
    20e6:	91 81       	ldd	r25, Z+1	; 0x01
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	11 96       	adiw	r26, 0x01	; 1
    20ec:	9c 93       	st	X, r25
    20ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20f0:	fe 01       	movw	r30, r28
    20f2:	e9 52       	subi	r30, 0x29	; 41
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	80 81       	ld	r24, Z
    20f8:	91 81       	ldd	r25, Z+1	; 0x01
    20fa:	00 97       	sbiw	r24, 0x00	; 0
    20fc:	d1 f6       	brne	.-76     	; 0x20b2 <main+0xbdc>
    20fe:	27 c0       	rjmp	.+78     	; 0x214e <main+0xc78>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2100:	8e 01       	movw	r16, r28
    2102:	09 52       	subi	r16, 0x29	; 41
    2104:	1f 4f       	sbci	r17, 0xFF	; 255
    2106:	fe 01       	movw	r30, r28
    2108:	e7 52       	subi	r30, 0x27	; 39
    210a:	ff 4f       	sbci	r31, 0xFF	; 255
    210c:	60 81       	ld	r22, Z
    210e:	71 81       	ldd	r23, Z+1	; 0x01
    2110:	82 81       	ldd	r24, Z+2	; 0x02
    2112:	93 81       	ldd	r25, Z+3	; 0x03
    2114:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2118:	dc 01       	movw	r26, r24
    211a:	cb 01       	movw	r24, r22
    211c:	f8 01       	movw	r30, r16
    211e:	91 83       	std	Z+1, r25	; 0x01
    2120:	80 83       	st	Z, r24
    2122:	de 01       	movw	r26, r28
    2124:	ad 52       	subi	r26, 0x2D	; 45
    2126:	bf 4f       	sbci	r27, 0xFF	; 255
    2128:	fe 01       	movw	r30, r28
    212a:	e9 52       	subi	r30, 0x29	; 41
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	80 81       	ld	r24, Z
    2130:	91 81       	ldd	r25, Z+1	; 0x01
    2132:	8d 93       	st	X+, r24
    2134:	9c 93       	st	X, r25
    2136:	fe 01       	movw	r30, r28
    2138:	ed 52       	subi	r30, 0x2D	; 45
    213a:	ff 4f       	sbci	r31, 0xFF	; 255
    213c:	80 81       	ld	r24, Z
    213e:	91 81       	ldd	r25, Z+1	; 0x01
    2140:	01 97       	sbiw	r24, 0x01	; 1
    2142:	f1 f7       	brne	.-4      	; 0x2140 <main+0xc6a>
    2144:	fe 01       	movw	r30, r28
    2146:	ed 52       	subi	r30, 0x2D	; 45
    2148:	ff 4f       	sbci	r31, 0xFF	; 255
    214a:	91 83       	std	Z+1, r25	; 0x01
    214c:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    214e:	ce 01       	movw	r24, r28
    2150:	87 5b       	subi	r24, 0xB7	; 183
    2152:	9e 4f       	sbci	r25, 0xFE	; 254
    2154:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber2(&SevenSegment1);
    2158:	ce 01       	movw	r24, r28
    215a:	86 5b       	subi	r24, 0xB6	; 182
    215c:	9e 4f       	sbci	r25, 0xFE	; 254
    215e:	0e 94 db 09 	call	0x13b6	; 0x13b6 <SevenSegment_voidDisplayNumber2>
    2162:	fe 01       	movw	r30, r28
    2164:	e1 53       	subi	r30, 0x31	; 49
    2166:	ff 4f       	sbci	r31, 0xFF	; 255
    2168:	80 e0       	ldi	r24, 0x00	; 0
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	aa e7       	ldi	r26, 0x7A	; 122
    216e:	b4 e4       	ldi	r27, 0x44	; 68
    2170:	80 83       	st	Z, r24
    2172:	91 83       	std	Z+1, r25	; 0x01
    2174:	a2 83       	std	Z+2, r26	; 0x02
    2176:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2178:	8e 01       	movw	r16, r28
    217a:	05 53       	subi	r16, 0x35	; 53
    217c:	1f 4f       	sbci	r17, 0xFF	; 255
    217e:	fe 01       	movw	r30, r28
    2180:	e1 53       	subi	r30, 0x31	; 49
    2182:	ff 4f       	sbci	r31, 0xFF	; 255
    2184:	60 81       	ld	r22, Z
    2186:	71 81       	ldd	r23, Z+1	; 0x01
    2188:	82 81       	ldd	r24, Z+2	; 0x02
    218a:	93 81       	ldd	r25, Z+3	; 0x03
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	48 e4       	ldi	r20, 0x48	; 72
    2192:	53 e4       	ldi	r21, 0x43	; 67
    2194:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	f8 01       	movw	r30, r16
    219e:	80 83       	st	Z, r24
    21a0:	91 83       	std	Z+1, r25	; 0x01
    21a2:	a2 83       	std	Z+2, r26	; 0x02
    21a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21a6:	fe 01       	movw	r30, r28
    21a8:	e5 53       	subi	r30, 0x35	; 53
    21aa:	ff 4f       	sbci	r31, 0xFF	; 255
    21ac:	60 81       	ld	r22, Z
    21ae:	71 81       	ldd	r23, Z+1	; 0x01
    21b0:	82 81       	ldd	r24, Z+2	; 0x02
    21b2:	93 81       	ldd	r25, Z+3	; 0x03
    21b4:	20 e0       	ldi	r18, 0x00	; 0
    21b6:	30 e0       	ldi	r19, 0x00	; 0
    21b8:	40 e8       	ldi	r20, 0x80	; 128
    21ba:	5f e3       	ldi	r21, 0x3F	; 63
    21bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21c0:	88 23       	and	r24, r24
    21c2:	44 f4       	brge	.+16     	; 0x21d4 <main+0xcfe>
		__ticks = 1;
    21c4:	fe 01       	movw	r30, r28
    21c6:	e7 53       	subi	r30, 0x37	; 55
    21c8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ca:	81 e0       	ldi	r24, 0x01	; 1
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	91 83       	std	Z+1, r25	; 0x01
    21d0:	80 83       	st	Z, r24
    21d2:	64 c0       	rjmp	.+200    	; 0x229c <main+0xdc6>
	else if (__tmp > 65535)
    21d4:	fe 01       	movw	r30, r28
    21d6:	e5 53       	subi	r30, 0x35	; 53
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	60 81       	ld	r22, Z
    21dc:	71 81       	ldd	r23, Z+1	; 0x01
    21de:	82 81       	ldd	r24, Z+2	; 0x02
    21e0:	93 81       	ldd	r25, Z+3	; 0x03
    21e2:	20 e0       	ldi	r18, 0x00	; 0
    21e4:	3f ef       	ldi	r19, 0xFF	; 255
    21e6:	4f e7       	ldi	r20, 0x7F	; 127
    21e8:	57 e4       	ldi	r21, 0x47	; 71
    21ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21ee:	18 16       	cp	r1, r24
    21f0:	0c f0       	brlt	.+2      	; 0x21f4 <main+0xd1e>
    21f2:	43 c0       	rjmp	.+134    	; 0x227a <main+0xda4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21f4:	fe 01       	movw	r30, r28
    21f6:	e1 53       	subi	r30, 0x31	; 49
    21f8:	ff 4f       	sbci	r31, 0xFF	; 255
    21fa:	60 81       	ld	r22, Z
    21fc:	71 81       	ldd	r23, Z+1	; 0x01
    21fe:	82 81       	ldd	r24, Z+2	; 0x02
    2200:	93 81       	ldd	r25, Z+3	; 0x03
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	40 e2       	ldi	r20, 0x20	; 32
    2208:	51 e4       	ldi	r21, 0x41	; 65
    220a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    220e:	dc 01       	movw	r26, r24
    2210:	cb 01       	movw	r24, r22
    2212:	8e 01       	movw	r16, r28
    2214:	07 53       	subi	r16, 0x37	; 55
    2216:	1f 4f       	sbci	r17, 0xFF	; 255
    2218:	bc 01       	movw	r22, r24
    221a:	cd 01       	movw	r24, r26
    221c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2220:	dc 01       	movw	r26, r24
    2222:	cb 01       	movw	r24, r22
    2224:	f8 01       	movw	r30, r16
    2226:	91 83       	std	Z+1, r25	; 0x01
    2228:	80 83       	st	Z, r24
    222a:	1f c0       	rjmp	.+62     	; 0x226a <main+0xd94>
    222c:	fe 01       	movw	r30, r28
    222e:	e9 53       	subi	r30, 0x39	; 57
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	84 e1       	ldi	r24, 0x14	; 20
    2234:	90 e0       	ldi	r25, 0x00	; 0
    2236:	91 83       	std	Z+1, r25	; 0x01
    2238:	80 83       	st	Z, r24
    223a:	fe 01       	movw	r30, r28
    223c:	e9 53       	subi	r30, 0x39	; 57
    223e:	ff 4f       	sbci	r31, 0xFF	; 255
    2240:	80 81       	ld	r24, Z
    2242:	91 81       	ldd	r25, Z+1	; 0x01
    2244:	01 97       	sbiw	r24, 0x01	; 1
    2246:	f1 f7       	brne	.-4      	; 0x2244 <main+0xd6e>
    2248:	fe 01       	movw	r30, r28
    224a:	e9 53       	subi	r30, 0x39	; 57
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	91 83       	std	Z+1, r25	; 0x01
    2250:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2252:	de 01       	movw	r26, r28
    2254:	a7 53       	subi	r26, 0x37	; 55
    2256:	bf 4f       	sbci	r27, 0xFF	; 255
    2258:	fe 01       	movw	r30, r28
    225a:	e7 53       	subi	r30, 0x37	; 55
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	80 81       	ld	r24, Z
    2260:	91 81       	ldd	r25, Z+1	; 0x01
    2262:	01 97       	sbiw	r24, 0x01	; 1
    2264:	11 96       	adiw	r26, 0x01	; 1
    2266:	9c 93       	st	X, r25
    2268:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    226a:	fe 01       	movw	r30, r28
    226c:	e7 53       	subi	r30, 0x37	; 55
    226e:	ff 4f       	sbci	r31, 0xFF	; 255
    2270:	80 81       	ld	r24, Z
    2272:	91 81       	ldd	r25, Z+1	; 0x01
    2274:	00 97       	sbiw	r24, 0x00	; 0
    2276:	d1 f6       	brne	.-76     	; 0x222c <main+0xd56>
    2278:	27 c0       	rjmp	.+78     	; 0x22c8 <main+0xdf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    227a:	8e 01       	movw	r16, r28
    227c:	07 53       	subi	r16, 0x37	; 55
    227e:	1f 4f       	sbci	r17, 0xFF	; 255
    2280:	fe 01       	movw	r30, r28
    2282:	e5 53       	subi	r30, 0x35	; 53
    2284:	ff 4f       	sbci	r31, 0xFF	; 255
    2286:	60 81       	ld	r22, Z
    2288:	71 81       	ldd	r23, Z+1	; 0x01
    228a:	82 81       	ldd	r24, Z+2	; 0x02
    228c:	93 81       	ldd	r25, Z+3	; 0x03
    228e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2292:	dc 01       	movw	r26, r24
    2294:	cb 01       	movw	r24, r22
    2296:	f8 01       	movw	r30, r16
    2298:	91 83       	std	Z+1, r25	; 0x01
    229a:	80 83       	st	Z, r24
    229c:	de 01       	movw	r26, r28
    229e:	ab 53       	subi	r26, 0x3B	; 59
    22a0:	bf 4f       	sbci	r27, 0xFF	; 255
    22a2:	fe 01       	movw	r30, r28
    22a4:	e7 53       	subi	r30, 0x37	; 55
    22a6:	ff 4f       	sbci	r31, 0xFF	; 255
    22a8:	80 81       	ld	r24, Z
    22aa:	91 81       	ldd	r25, Z+1	; 0x01
    22ac:	8d 93       	st	X+, r24
    22ae:	9c 93       	st	X, r25
    22b0:	fe 01       	movw	r30, r28
    22b2:	eb 53       	subi	r30, 0x3B	; 59
    22b4:	ff 4f       	sbci	r31, 0xFF	; 255
    22b6:	80 81       	ld	r24, Z
    22b8:	91 81       	ldd	r25, Z+1	; 0x01
    22ba:	01 97       	sbiw	r24, 0x01	; 1
    22bc:	f1 f7       	brne	.-4      	; 0x22ba <main+0xde4>
    22be:	fe 01       	movw	r30, r28
    22c0:	eb 53       	subi	r30, 0x3B	; 59
    22c2:	ff 4f       	sbci	r31, 0xFF	; 255
    22c4:	91 83       	std	Z+1, r25	; 0x01
    22c6:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    22c8:	ce 01       	movw	r24, r28
    22ca:	87 5b       	subi	r24, 0xB7	; 183
    22cc:	9e 4f       	sbci	r25, 0xFE	; 254
    22ce:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber1(&SevenSegment1);
    22d2:	ce 01       	movw	r24, r28
    22d4:	86 5b       	subi	r24, 0xB6	; 182
    22d6:	9e 4f       	sbci	r25, 0xFE	; 254
    22d8:	0e 94 c9 09 	call	0x1392	; 0x1392 <SevenSegment_voidDisplayNumber1>
    22dc:	fe 01       	movw	r30, r28
    22de:	ef 53       	subi	r30, 0x3F	; 63
    22e0:	ff 4f       	sbci	r31, 0xFF	; 255
    22e2:	80 e0       	ldi	r24, 0x00	; 0
    22e4:	90 e0       	ldi	r25, 0x00	; 0
    22e6:	aa e7       	ldi	r26, 0x7A	; 122
    22e8:	b4 e4       	ldi	r27, 0x44	; 68
    22ea:	80 83       	st	Z, r24
    22ec:	91 83       	std	Z+1, r25	; 0x01
    22ee:	a2 83       	std	Z+2, r26	; 0x02
    22f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22f2:	8e 01       	movw	r16, r28
    22f4:	03 54       	subi	r16, 0x43	; 67
    22f6:	1f 4f       	sbci	r17, 0xFF	; 255
    22f8:	fe 01       	movw	r30, r28
    22fa:	ef 53       	subi	r30, 0x3F	; 63
    22fc:	ff 4f       	sbci	r31, 0xFF	; 255
    22fe:	60 81       	ld	r22, Z
    2300:	71 81       	ldd	r23, Z+1	; 0x01
    2302:	82 81       	ldd	r24, Z+2	; 0x02
    2304:	93 81       	ldd	r25, Z+3	; 0x03
    2306:	20 e0       	ldi	r18, 0x00	; 0
    2308:	30 e0       	ldi	r19, 0x00	; 0
    230a:	48 e4       	ldi	r20, 0x48	; 72
    230c:	53 e4       	ldi	r21, 0x43	; 67
    230e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2312:	dc 01       	movw	r26, r24
    2314:	cb 01       	movw	r24, r22
    2316:	f8 01       	movw	r30, r16
    2318:	80 83       	st	Z, r24
    231a:	91 83       	std	Z+1, r25	; 0x01
    231c:	a2 83       	std	Z+2, r26	; 0x02
    231e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2320:	fe 01       	movw	r30, r28
    2322:	e3 54       	subi	r30, 0x43	; 67
    2324:	ff 4f       	sbci	r31, 0xFF	; 255
    2326:	60 81       	ld	r22, Z
    2328:	71 81       	ldd	r23, Z+1	; 0x01
    232a:	82 81       	ldd	r24, Z+2	; 0x02
    232c:	93 81       	ldd	r25, Z+3	; 0x03
    232e:	20 e0       	ldi	r18, 0x00	; 0
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	40 e8       	ldi	r20, 0x80	; 128
    2334:	5f e3       	ldi	r21, 0x3F	; 63
    2336:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    233a:	88 23       	and	r24, r24
    233c:	44 f4       	brge	.+16     	; 0x234e <main+0xe78>
		__ticks = 1;
    233e:	fe 01       	movw	r30, r28
    2340:	e5 54       	subi	r30, 0x45	; 69
    2342:	ff 4f       	sbci	r31, 0xFF	; 255
    2344:	81 e0       	ldi	r24, 0x01	; 1
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	91 83       	std	Z+1, r25	; 0x01
    234a:	80 83       	st	Z, r24
    234c:	64 c0       	rjmp	.+200    	; 0x2416 <main+0xf40>
	else if (__tmp > 65535)
    234e:	fe 01       	movw	r30, r28
    2350:	e3 54       	subi	r30, 0x43	; 67
    2352:	ff 4f       	sbci	r31, 0xFF	; 255
    2354:	60 81       	ld	r22, Z
    2356:	71 81       	ldd	r23, Z+1	; 0x01
    2358:	82 81       	ldd	r24, Z+2	; 0x02
    235a:	93 81       	ldd	r25, Z+3	; 0x03
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	3f ef       	ldi	r19, 0xFF	; 255
    2360:	4f e7       	ldi	r20, 0x7F	; 127
    2362:	57 e4       	ldi	r21, 0x47	; 71
    2364:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2368:	18 16       	cp	r1, r24
    236a:	0c f0       	brlt	.+2      	; 0x236e <main+0xe98>
    236c:	43 c0       	rjmp	.+134    	; 0x23f4 <main+0xf1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    236e:	fe 01       	movw	r30, r28
    2370:	ef 53       	subi	r30, 0x3F	; 63
    2372:	ff 4f       	sbci	r31, 0xFF	; 255
    2374:	60 81       	ld	r22, Z
    2376:	71 81       	ldd	r23, Z+1	; 0x01
    2378:	82 81       	ldd	r24, Z+2	; 0x02
    237a:	93 81       	ldd	r25, Z+3	; 0x03
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	40 e2       	ldi	r20, 0x20	; 32
    2382:	51 e4       	ldi	r21, 0x41	; 65
    2384:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2388:	dc 01       	movw	r26, r24
    238a:	cb 01       	movw	r24, r22
    238c:	8e 01       	movw	r16, r28
    238e:	05 54       	subi	r16, 0x45	; 69
    2390:	1f 4f       	sbci	r17, 0xFF	; 255
    2392:	bc 01       	movw	r22, r24
    2394:	cd 01       	movw	r24, r26
    2396:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    239a:	dc 01       	movw	r26, r24
    239c:	cb 01       	movw	r24, r22
    239e:	f8 01       	movw	r30, r16
    23a0:	91 83       	std	Z+1, r25	; 0x01
    23a2:	80 83       	st	Z, r24
    23a4:	1f c0       	rjmp	.+62     	; 0x23e4 <main+0xf0e>
    23a6:	fe 01       	movw	r30, r28
    23a8:	e7 54       	subi	r30, 0x47	; 71
    23aa:	ff 4f       	sbci	r31, 0xFF	; 255
    23ac:	84 e1       	ldi	r24, 0x14	; 20
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	91 83       	std	Z+1, r25	; 0x01
    23b2:	80 83       	st	Z, r24
    23b4:	fe 01       	movw	r30, r28
    23b6:	e7 54       	subi	r30, 0x47	; 71
    23b8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ba:	80 81       	ld	r24, Z
    23bc:	91 81       	ldd	r25, Z+1	; 0x01
    23be:	01 97       	sbiw	r24, 0x01	; 1
    23c0:	f1 f7       	brne	.-4      	; 0x23be <main+0xee8>
    23c2:	fe 01       	movw	r30, r28
    23c4:	e7 54       	subi	r30, 0x47	; 71
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	91 83       	std	Z+1, r25	; 0x01
    23ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23cc:	de 01       	movw	r26, r28
    23ce:	a5 54       	subi	r26, 0x45	; 69
    23d0:	bf 4f       	sbci	r27, 0xFF	; 255
    23d2:	fe 01       	movw	r30, r28
    23d4:	e5 54       	subi	r30, 0x45	; 69
    23d6:	ff 4f       	sbci	r31, 0xFF	; 255
    23d8:	80 81       	ld	r24, Z
    23da:	91 81       	ldd	r25, Z+1	; 0x01
    23dc:	01 97       	sbiw	r24, 0x01	; 1
    23de:	11 96       	adiw	r26, 0x01	; 1
    23e0:	9c 93       	st	X, r25
    23e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23e4:	fe 01       	movw	r30, r28
    23e6:	e5 54       	subi	r30, 0x45	; 69
    23e8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ea:	80 81       	ld	r24, Z
    23ec:	91 81       	ldd	r25, Z+1	; 0x01
    23ee:	00 97       	sbiw	r24, 0x00	; 0
    23f0:	d1 f6       	brne	.-76     	; 0x23a6 <main+0xed0>
    23f2:	27 c0       	rjmp	.+78     	; 0x2442 <main+0xf6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23f4:	8e 01       	movw	r16, r28
    23f6:	05 54       	subi	r16, 0x45	; 69
    23f8:	1f 4f       	sbci	r17, 0xFF	; 255
    23fa:	fe 01       	movw	r30, r28
    23fc:	e3 54       	subi	r30, 0x43	; 67
    23fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2400:	60 81       	ld	r22, Z
    2402:	71 81       	ldd	r23, Z+1	; 0x01
    2404:	82 81       	ldd	r24, Z+2	; 0x02
    2406:	93 81       	ldd	r25, Z+3	; 0x03
    2408:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    240c:	dc 01       	movw	r26, r24
    240e:	cb 01       	movw	r24, r22
    2410:	f8 01       	movw	r30, r16
    2412:	91 83       	std	Z+1, r25	; 0x01
    2414:	80 83       	st	Z, r24
    2416:	de 01       	movw	r26, r28
    2418:	a9 54       	subi	r26, 0x49	; 73
    241a:	bf 4f       	sbci	r27, 0xFF	; 255
    241c:	fe 01       	movw	r30, r28
    241e:	e5 54       	subi	r30, 0x45	; 69
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	80 81       	ld	r24, Z
    2424:	91 81       	ldd	r25, Z+1	; 0x01
    2426:	8d 93       	st	X+, r24
    2428:	9c 93       	st	X, r25
    242a:	fe 01       	movw	r30, r28
    242c:	e9 54       	subi	r30, 0x49	; 73
    242e:	ff 4f       	sbci	r31, 0xFF	; 255
    2430:	80 81       	ld	r24, Z
    2432:	91 81       	ldd	r25, Z+1	; 0x01
    2434:	01 97       	sbiw	r24, 0x01	; 1
    2436:	f1 f7       	brne	.-4      	; 0x2434 <main+0xf5e>
    2438:	fe 01       	movw	r30, r28
    243a:	e9 54       	subi	r30, 0x49	; 73
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	91 83       	std	Z+1, r25	; 0x01
    2440:	80 83       	st	Z, r24
		_delay_ms(1000);

		/* Turn Yellow LED and count from 3 to 0 */
		LED_voidLEDTurnOFF(&LED0);
    2442:	ce 01       	movw	r24, r28
    2444:	8d 5b       	subi	r24, 0xBD	; 189
    2446:	9e 4f       	sbci	r25, 0xFE	; 254
    2448:	0e 94 8f 09 	call	0x131e	; 0x131e <LED_voidLEDTurnOFF>
		LED_voidLEDTurnON(&LED1);
    244c:	ce 01       	movw	r24, r28
    244e:	8b 5b       	subi	r24, 0xBB	; 187
    2450:	9e 4f       	sbci	r25, 0xFE	; 254
    2452:	0e 94 79 09 	call	0x12f2	; 0x12f2 <LED_voidLEDTurnON>
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    2456:	ce 01       	movw	r24, r28
    2458:	87 5b       	subi	r24, 0xB7	; 183
    245a:	9e 4f       	sbci	r25, 0xFE	; 254
    245c:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber3(&SevenSegment1);
    2460:	ce 01       	movw	r24, r28
    2462:	86 5b       	subi	r24, 0xB6	; 182
    2464:	9e 4f       	sbci	r25, 0xFE	; 254
    2466:	0e 94 ed 09 	call	0x13da	; 0x13da <SevenSegment_voidDisplayNumber3>
    246a:	fe 01       	movw	r30, r28
    246c:	ed 54       	subi	r30, 0x4D	; 77
    246e:	ff 4f       	sbci	r31, 0xFF	; 255
    2470:	80 e0       	ldi	r24, 0x00	; 0
    2472:	90 e0       	ldi	r25, 0x00	; 0
    2474:	aa e7       	ldi	r26, 0x7A	; 122
    2476:	b4 e4       	ldi	r27, 0x44	; 68
    2478:	80 83       	st	Z, r24
    247a:	91 83       	std	Z+1, r25	; 0x01
    247c:	a2 83       	std	Z+2, r26	; 0x02
    247e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2480:	8e 01       	movw	r16, r28
    2482:	01 55       	subi	r16, 0x51	; 81
    2484:	1f 4f       	sbci	r17, 0xFF	; 255
    2486:	fe 01       	movw	r30, r28
    2488:	ed 54       	subi	r30, 0x4D	; 77
    248a:	ff 4f       	sbci	r31, 0xFF	; 255
    248c:	60 81       	ld	r22, Z
    248e:	71 81       	ldd	r23, Z+1	; 0x01
    2490:	82 81       	ldd	r24, Z+2	; 0x02
    2492:	93 81       	ldd	r25, Z+3	; 0x03
    2494:	20 e0       	ldi	r18, 0x00	; 0
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	48 e4       	ldi	r20, 0x48	; 72
    249a:	53 e4       	ldi	r21, 0x43	; 67
    249c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24a0:	dc 01       	movw	r26, r24
    24a2:	cb 01       	movw	r24, r22
    24a4:	f8 01       	movw	r30, r16
    24a6:	80 83       	st	Z, r24
    24a8:	91 83       	std	Z+1, r25	; 0x01
    24aa:	a2 83       	std	Z+2, r26	; 0x02
    24ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24ae:	fe 01       	movw	r30, r28
    24b0:	e1 55       	subi	r30, 0x51	; 81
    24b2:	ff 4f       	sbci	r31, 0xFF	; 255
    24b4:	60 81       	ld	r22, Z
    24b6:	71 81       	ldd	r23, Z+1	; 0x01
    24b8:	82 81       	ldd	r24, Z+2	; 0x02
    24ba:	93 81       	ldd	r25, Z+3	; 0x03
    24bc:	20 e0       	ldi	r18, 0x00	; 0
    24be:	30 e0       	ldi	r19, 0x00	; 0
    24c0:	40 e8       	ldi	r20, 0x80	; 128
    24c2:	5f e3       	ldi	r21, 0x3F	; 63
    24c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24c8:	88 23       	and	r24, r24
    24ca:	44 f4       	brge	.+16     	; 0x24dc <main+0x1006>
		__ticks = 1;
    24cc:	fe 01       	movw	r30, r28
    24ce:	e3 55       	subi	r30, 0x53	; 83
    24d0:	ff 4f       	sbci	r31, 0xFF	; 255
    24d2:	81 e0       	ldi	r24, 0x01	; 1
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	91 83       	std	Z+1, r25	; 0x01
    24d8:	80 83       	st	Z, r24
    24da:	64 c0       	rjmp	.+200    	; 0x25a4 <main+0x10ce>
	else if (__tmp > 65535)
    24dc:	fe 01       	movw	r30, r28
    24de:	e1 55       	subi	r30, 0x51	; 81
    24e0:	ff 4f       	sbci	r31, 0xFF	; 255
    24e2:	60 81       	ld	r22, Z
    24e4:	71 81       	ldd	r23, Z+1	; 0x01
    24e6:	82 81       	ldd	r24, Z+2	; 0x02
    24e8:	93 81       	ldd	r25, Z+3	; 0x03
    24ea:	20 e0       	ldi	r18, 0x00	; 0
    24ec:	3f ef       	ldi	r19, 0xFF	; 255
    24ee:	4f e7       	ldi	r20, 0x7F	; 127
    24f0:	57 e4       	ldi	r21, 0x47	; 71
    24f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24f6:	18 16       	cp	r1, r24
    24f8:	0c f0       	brlt	.+2      	; 0x24fc <main+0x1026>
    24fa:	43 c0       	rjmp	.+134    	; 0x2582 <main+0x10ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24fc:	fe 01       	movw	r30, r28
    24fe:	ed 54       	subi	r30, 0x4D	; 77
    2500:	ff 4f       	sbci	r31, 0xFF	; 255
    2502:	60 81       	ld	r22, Z
    2504:	71 81       	ldd	r23, Z+1	; 0x01
    2506:	82 81       	ldd	r24, Z+2	; 0x02
    2508:	93 81       	ldd	r25, Z+3	; 0x03
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	40 e2       	ldi	r20, 0x20	; 32
    2510:	51 e4       	ldi	r21, 0x41	; 65
    2512:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2516:	dc 01       	movw	r26, r24
    2518:	cb 01       	movw	r24, r22
    251a:	8e 01       	movw	r16, r28
    251c:	03 55       	subi	r16, 0x53	; 83
    251e:	1f 4f       	sbci	r17, 0xFF	; 255
    2520:	bc 01       	movw	r22, r24
    2522:	cd 01       	movw	r24, r26
    2524:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2528:	dc 01       	movw	r26, r24
    252a:	cb 01       	movw	r24, r22
    252c:	f8 01       	movw	r30, r16
    252e:	91 83       	std	Z+1, r25	; 0x01
    2530:	80 83       	st	Z, r24
    2532:	1f c0       	rjmp	.+62     	; 0x2572 <main+0x109c>
    2534:	fe 01       	movw	r30, r28
    2536:	e5 55       	subi	r30, 0x55	; 85
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	84 e1       	ldi	r24, 0x14	; 20
    253c:	90 e0       	ldi	r25, 0x00	; 0
    253e:	91 83       	std	Z+1, r25	; 0x01
    2540:	80 83       	st	Z, r24
    2542:	fe 01       	movw	r30, r28
    2544:	e5 55       	subi	r30, 0x55	; 85
    2546:	ff 4f       	sbci	r31, 0xFF	; 255
    2548:	80 81       	ld	r24, Z
    254a:	91 81       	ldd	r25, Z+1	; 0x01
    254c:	01 97       	sbiw	r24, 0x01	; 1
    254e:	f1 f7       	brne	.-4      	; 0x254c <main+0x1076>
    2550:	fe 01       	movw	r30, r28
    2552:	e5 55       	subi	r30, 0x55	; 85
    2554:	ff 4f       	sbci	r31, 0xFF	; 255
    2556:	91 83       	std	Z+1, r25	; 0x01
    2558:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    255a:	de 01       	movw	r26, r28
    255c:	a3 55       	subi	r26, 0x53	; 83
    255e:	bf 4f       	sbci	r27, 0xFF	; 255
    2560:	fe 01       	movw	r30, r28
    2562:	e3 55       	subi	r30, 0x53	; 83
    2564:	ff 4f       	sbci	r31, 0xFF	; 255
    2566:	80 81       	ld	r24, Z
    2568:	91 81       	ldd	r25, Z+1	; 0x01
    256a:	01 97       	sbiw	r24, 0x01	; 1
    256c:	11 96       	adiw	r26, 0x01	; 1
    256e:	9c 93       	st	X, r25
    2570:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2572:	fe 01       	movw	r30, r28
    2574:	e3 55       	subi	r30, 0x53	; 83
    2576:	ff 4f       	sbci	r31, 0xFF	; 255
    2578:	80 81       	ld	r24, Z
    257a:	91 81       	ldd	r25, Z+1	; 0x01
    257c:	00 97       	sbiw	r24, 0x00	; 0
    257e:	d1 f6       	brne	.-76     	; 0x2534 <main+0x105e>
    2580:	27 c0       	rjmp	.+78     	; 0x25d0 <main+0x10fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2582:	8e 01       	movw	r16, r28
    2584:	03 55       	subi	r16, 0x53	; 83
    2586:	1f 4f       	sbci	r17, 0xFF	; 255
    2588:	fe 01       	movw	r30, r28
    258a:	e1 55       	subi	r30, 0x51	; 81
    258c:	ff 4f       	sbci	r31, 0xFF	; 255
    258e:	60 81       	ld	r22, Z
    2590:	71 81       	ldd	r23, Z+1	; 0x01
    2592:	82 81       	ldd	r24, Z+2	; 0x02
    2594:	93 81       	ldd	r25, Z+3	; 0x03
    2596:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    259a:	dc 01       	movw	r26, r24
    259c:	cb 01       	movw	r24, r22
    259e:	f8 01       	movw	r30, r16
    25a0:	91 83       	std	Z+1, r25	; 0x01
    25a2:	80 83       	st	Z, r24
    25a4:	de 01       	movw	r26, r28
    25a6:	a7 55       	subi	r26, 0x57	; 87
    25a8:	bf 4f       	sbci	r27, 0xFF	; 255
    25aa:	fe 01       	movw	r30, r28
    25ac:	e3 55       	subi	r30, 0x53	; 83
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	80 81       	ld	r24, Z
    25b2:	91 81       	ldd	r25, Z+1	; 0x01
    25b4:	8d 93       	st	X+, r24
    25b6:	9c 93       	st	X, r25
    25b8:	fe 01       	movw	r30, r28
    25ba:	e7 55       	subi	r30, 0x57	; 87
    25bc:	ff 4f       	sbci	r31, 0xFF	; 255
    25be:	80 81       	ld	r24, Z
    25c0:	91 81       	ldd	r25, Z+1	; 0x01
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	f1 f7       	brne	.-4      	; 0x25c2 <main+0x10ec>
    25c6:	fe 01       	movw	r30, r28
    25c8:	e7 55       	subi	r30, 0x57	; 87
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	91 83       	std	Z+1, r25	; 0x01
    25ce:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    25d0:	ce 01       	movw	r24, r28
    25d2:	87 5b       	subi	r24, 0xB7	; 183
    25d4:	9e 4f       	sbci	r25, 0xFE	; 254
    25d6:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber2(&SevenSegment1);
    25da:	ce 01       	movw	r24, r28
    25dc:	86 5b       	subi	r24, 0xB6	; 182
    25de:	9e 4f       	sbci	r25, 0xFE	; 254
    25e0:	0e 94 db 09 	call	0x13b6	; 0x13b6 <SevenSegment_voidDisplayNumber2>
    25e4:	fe 01       	movw	r30, r28
    25e6:	eb 55       	subi	r30, 0x5B	; 91
    25e8:	ff 4f       	sbci	r31, 0xFF	; 255
    25ea:	80 e0       	ldi	r24, 0x00	; 0
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	aa e7       	ldi	r26, 0x7A	; 122
    25f0:	b4 e4       	ldi	r27, 0x44	; 68
    25f2:	80 83       	st	Z, r24
    25f4:	91 83       	std	Z+1, r25	; 0x01
    25f6:	a2 83       	std	Z+2, r26	; 0x02
    25f8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25fa:	8e 01       	movw	r16, r28
    25fc:	0f 55       	subi	r16, 0x5F	; 95
    25fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2600:	fe 01       	movw	r30, r28
    2602:	eb 55       	subi	r30, 0x5B	; 91
    2604:	ff 4f       	sbci	r31, 0xFF	; 255
    2606:	60 81       	ld	r22, Z
    2608:	71 81       	ldd	r23, Z+1	; 0x01
    260a:	82 81       	ldd	r24, Z+2	; 0x02
    260c:	93 81       	ldd	r25, Z+3	; 0x03
    260e:	20 e0       	ldi	r18, 0x00	; 0
    2610:	30 e0       	ldi	r19, 0x00	; 0
    2612:	48 e4       	ldi	r20, 0x48	; 72
    2614:	53 e4       	ldi	r21, 0x43	; 67
    2616:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    261a:	dc 01       	movw	r26, r24
    261c:	cb 01       	movw	r24, r22
    261e:	f8 01       	movw	r30, r16
    2620:	80 83       	st	Z, r24
    2622:	91 83       	std	Z+1, r25	; 0x01
    2624:	a2 83       	std	Z+2, r26	; 0x02
    2626:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2628:	fe 01       	movw	r30, r28
    262a:	ef 55       	subi	r30, 0x5F	; 95
    262c:	ff 4f       	sbci	r31, 0xFF	; 255
    262e:	60 81       	ld	r22, Z
    2630:	71 81       	ldd	r23, Z+1	; 0x01
    2632:	82 81       	ldd	r24, Z+2	; 0x02
    2634:	93 81       	ldd	r25, Z+3	; 0x03
    2636:	20 e0       	ldi	r18, 0x00	; 0
    2638:	30 e0       	ldi	r19, 0x00	; 0
    263a:	40 e8       	ldi	r20, 0x80	; 128
    263c:	5f e3       	ldi	r21, 0x3F	; 63
    263e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2642:	88 23       	and	r24, r24
    2644:	44 f4       	brge	.+16     	; 0x2656 <main+0x1180>
		__ticks = 1;
    2646:	fe 01       	movw	r30, r28
    2648:	e1 56       	subi	r30, 0x61	; 97
    264a:	ff 4f       	sbci	r31, 0xFF	; 255
    264c:	81 e0       	ldi	r24, 0x01	; 1
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	91 83       	std	Z+1, r25	; 0x01
    2652:	80 83       	st	Z, r24
    2654:	64 c0       	rjmp	.+200    	; 0x271e <main+0x1248>
	else if (__tmp > 65535)
    2656:	fe 01       	movw	r30, r28
    2658:	ef 55       	subi	r30, 0x5F	; 95
    265a:	ff 4f       	sbci	r31, 0xFF	; 255
    265c:	60 81       	ld	r22, Z
    265e:	71 81       	ldd	r23, Z+1	; 0x01
    2660:	82 81       	ldd	r24, Z+2	; 0x02
    2662:	93 81       	ldd	r25, Z+3	; 0x03
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	3f ef       	ldi	r19, 0xFF	; 255
    2668:	4f e7       	ldi	r20, 0x7F	; 127
    266a:	57 e4       	ldi	r21, 0x47	; 71
    266c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2670:	18 16       	cp	r1, r24
    2672:	0c f0       	brlt	.+2      	; 0x2676 <main+0x11a0>
    2674:	43 c0       	rjmp	.+134    	; 0x26fc <main+0x1226>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2676:	fe 01       	movw	r30, r28
    2678:	eb 55       	subi	r30, 0x5B	; 91
    267a:	ff 4f       	sbci	r31, 0xFF	; 255
    267c:	60 81       	ld	r22, Z
    267e:	71 81       	ldd	r23, Z+1	; 0x01
    2680:	82 81       	ldd	r24, Z+2	; 0x02
    2682:	93 81       	ldd	r25, Z+3	; 0x03
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	40 e2       	ldi	r20, 0x20	; 32
    268a:	51 e4       	ldi	r21, 0x41	; 65
    268c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2690:	dc 01       	movw	r26, r24
    2692:	cb 01       	movw	r24, r22
    2694:	8e 01       	movw	r16, r28
    2696:	01 56       	subi	r16, 0x61	; 97
    2698:	1f 4f       	sbci	r17, 0xFF	; 255
    269a:	bc 01       	movw	r22, r24
    269c:	cd 01       	movw	r24, r26
    269e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26a2:	dc 01       	movw	r26, r24
    26a4:	cb 01       	movw	r24, r22
    26a6:	f8 01       	movw	r30, r16
    26a8:	91 83       	std	Z+1, r25	; 0x01
    26aa:	80 83       	st	Z, r24
    26ac:	1f c0       	rjmp	.+62     	; 0x26ec <main+0x1216>
    26ae:	fe 01       	movw	r30, r28
    26b0:	e3 56       	subi	r30, 0x63	; 99
    26b2:	ff 4f       	sbci	r31, 0xFF	; 255
    26b4:	84 e1       	ldi	r24, 0x14	; 20
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	91 83       	std	Z+1, r25	; 0x01
    26ba:	80 83       	st	Z, r24
    26bc:	fe 01       	movw	r30, r28
    26be:	e3 56       	subi	r30, 0x63	; 99
    26c0:	ff 4f       	sbci	r31, 0xFF	; 255
    26c2:	80 81       	ld	r24, Z
    26c4:	91 81       	ldd	r25, Z+1	; 0x01
    26c6:	01 97       	sbiw	r24, 0x01	; 1
    26c8:	f1 f7       	brne	.-4      	; 0x26c6 <main+0x11f0>
    26ca:	fe 01       	movw	r30, r28
    26cc:	e3 56       	subi	r30, 0x63	; 99
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	91 83       	std	Z+1, r25	; 0x01
    26d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26d4:	de 01       	movw	r26, r28
    26d6:	a1 56       	subi	r26, 0x61	; 97
    26d8:	bf 4f       	sbci	r27, 0xFF	; 255
    26da:	fe 01       	movw	r30, r28
    26dc:	e1 56       	subi	r30, 0x61	; 97
    26de:	ff 4f       	sbci	r31, 0xFF	; 255
    26e0:	80 81       	ld	r24, Z
    26e2:	91 81       	ldd	r25, Z+1	; 0x01
    26e4:	01 97       	sbiw	r24, 0x01	; 1
    26e6:	11 96       	adiw	r26, 0x01	; 1
    26e8:	9c 93       	st	X, r25
    26ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ec:	fe 01       	movw	r30, r28
    26ee:	e1 56       	subi	r30, 0x61	; 97
    26f0:	ff 4f       	sbci	r31, 0xFF	; 255
    26f2:	80 81       	ld	r24, Z
    26f4:	91 81       	ldd	r25, Z+1	; 0x01
    26f6:	00 97       	sbiw	r24, 0x00	; 0
    26f8:	d1 f6       	brne	.-76     	; 0x26ae <main+0x11d8>
    26fa:	27 c0       	rjmp	.+78     	; 0x274a <main+0x1274>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26fc:	8e 01       	movw	r16, r28
    26fe:	01 56       	subi	r16, 0x61	; 97
    2700:	1f 4f       	sbci	r17, 0xFF	; 255
    2702:	fe 01       	movw	r30, r28
    2704:	ef 55       	subi	r30, 0x5F	; 95
    2706:	ff 4f       	sbci	r31, 0xFF	; 255
    2708:	60 81       	ld	r22, Z
    270a:	71 81       	ldd	r23, Z+1	; 0x01
    270c:	82 81       	ldd	r24, Z+2	; 0x02
    270e:	93 81       	ldd	r25, Z+3	; 0x03
    2710:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2714:	dc 01       	movw	r26, r24
    2716:	cb 01       	movw	r24, r22
    2718:	f8 01       	movw	r30, r16
    271a:	91 83       	std	Z+1, r25	; 0x01
    271c:	80 83       	st	Z, r24
    271e:	de 01       	movw	r26, r28
    2720:	a5 56       	subi	r26, 0x65	; 101
    2722:	bf 4f       	sbci	r27, 0xFF	; 255
    2724:	fe 01       	movw	r30, r28
    2726:	e1 56       	subi	r30, 0x61	; 97
    2728:	ff 4f       	sbci	r31, 0xFF	; 255
    272a:	80 81       	ld	r24, Z
    272c:	91 81       	ldd	r25, Z+1	; 0x01
    272e:	8d 93       	st	X+, r24
    2730:	9c 93       	st	X, r25
    2732:	fe 01       	movw	r30, r28
    2734:	e5 56       	subi	r30, 0x65	; 101
    2736:	ff 4f       	sbci	r31, 0xFF	; 255
    2738:	80 81       	ld	r24, Z
    273a:	91 81       	ldd	r25, Z+1	; 0x01
    273c:	01 97       	sbiw	r24, 0x01	; 1
    273e:	f1 f7       	brne	.-4      	; 0x273c <main+0x1266>
    2740:	fe 01       	movw	r30, r28
    2742:	e5 56       	subi	r30, 0x65	; 101
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    274a:	ce 01       	movw	r24, r28
    274c:	87 5b       	subi	r24, 0xB7	; 183
    274e:	9e 4f       	sbci	r25, 0xFE	; 254
    2750:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber1(&SevenSegment1);
    2754:	ce 01       	movw	r24, r28
    2756:	86 5b       	subi	r24, 0xB6	; 182
    2758:	9e 4f       	sbci	r25, 0xFE	; 254
    275a:	0e 94 c9 09 	call	0x1392	; 0x1392 <SevenSegment_voidDisplayNumber1>
    275e:	fe 01       	movw	r30, r28
    2760:	e9 56       	subi	r30, 0x69	; 105
    2762:	ff 4f       	sbci	r31, 0xFF	; 255
    2764:	80 e0       	ldi	r24, 0x00	; 0
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	aa e7       	ldi	r26, 0x7A	; 122
    276a:	b4 e4       	ldi	r27, 0x44	; 68
    276c:	80 83       	st	Z, r24
    276e:	91 83       	std	Z+1, r25	; 0x01
    2770:	a2 83       	std	Z+2, r26	; 0x02
    2772:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2774:	8e 01       	movw	r16, r28
    2776:	0d 56       	subi	r16, 0x6D	; 109
    2778:	1f 4f       	sbci	r17, 0xFF	; 255
    277a:	fe 01       	movw	r30, r28
    277c:	e9 56       	subi	r30, 0x69	; 105
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	60 81       	ld	r22, Z
    2782:	71 81       	ldd	r23, Z+1	; 0x01
    2784:	82 81       	ldd	r24, Z+2	; 0x02
    2786:	93 81       	ldd	r25, Z+3	; 0x03
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	48 e4       	ldi	r20, 0x48	; 72
    278e:	53 e4       	ldi	r21, 0x43	; 67
    2790:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2794:	dc 01       	movw	r26, r24
    2796:	cb 01       	movw	r24, r22
    2798:	f8 01       	movw	r30, r16
    279a:	80 83       	st	Z, r24
    279c:	91 83       	std	Z+1, r25	; 0x01
    279e:	a2 83       	std	Z+2, r26	; 0x02
    27a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27a2:	fe 01       	movw	r30, r28
    27a4:	ed 56       	subi	r30, 0x6D	; 109
    27a6:	ff 4f       	sbci	r31, 0xFF	; 255
    27a8:	60 81       	ld	r22, Z
    27aa:	71 81       	ldd	r23, Z+1	; 0x01
    27ac:	82 81       	ldd	r24, Z+2	; 0x02
    27ae:	93 81       	ldd	r25, Z+3	; 0x03
    27b0:	20 e0       	ldi	r18, 0x00	; 0
    27b2:	30 e0       	ldi	r19, 0x00	; 0
    27b4:	40 e8       	ldi	r20, 0x80	; 128
    27b6:	5f e3       	ldi	r21, 0x3F	; 63
    27b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27bc:	88 23       	and	r24, r24
    27be:	44 f4       	brge	.+16     	; 0x27d0 <main+0x12fa>
		__ticks = 1;
    27c0:	fe 01       	movw	r30, r28
    27c2:	ef 56       	subi	r30, 0x6F	; 111
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	81 e0       	ldi	r24, 0x01	; 1
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	91 83       	std	Z+1, r25	; 0x01
    27cc:	80 83       	st	Z, r24
    27ce:	64 c0       	rjmp	.+200    	; 0x2898 <main+0x13c2>
	else if (__tmp > 65535)
    27d0:	fe 01       	movw	r30, r28
    27d2:	ed 56       	subi	r30, 0x6D	; 109
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	60 81       	ld	r22, Z
    27d8:	71 81       	ldd	r23, Z+1	; 0x01
    27da:	82 81       	ldd	r24, Z+2	; 0x02
    27dc:	93 81       	ldd	r25, Z+3	; 0x03
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	3f ef       	ldi	r19, 0xFF	; 255
    27e2:	4f e7       	ldi	r20, 0x7F	; 127
    27e4:	57 e4       	ldi	r21, 0x47	; 71
    27e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27ea:	18 16       	cp	r1, r24
    27ec:	0c f0       	brlt	.+2      	; 0x27f0 <main+0x131a>
    27ee:	43 c0       	rjmp	.+134    	; 0x2876 <main+0x13a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27f0:	fe 01       	movw	r30, r28
    27f2:	e9 56       	subi	r30, 0x69	; 105
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	60 81       	ld	r22, Z
    27f8:	71 81       	ldd	r23, Z+1	; 0x01
    27fa:	82 81       	ldd	r24, Z+2	; 0x02
    27fc:	93 81       	ldd	r25, Z+3	; 0x03
    27fe:	20 e0       	ldi	r18, 0x00	; 0
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	40 e2       	ldi	r20, 0x20	; 32
    2804:	51 e4       	ldi	r21, 0x41	; 65
    2806:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    280a:	dc 01       	movw	r26, r24
    280c:	cb 01       	movw	r24, r22
    280e:	8e 01       	movw	r16, r28
    2810:	0f 56       	subi	r16, 0x6F	; 111
    2812:	1f 4f       	sbci	r17, 0xFF	; 255
    2814:	bc 01       	movw	r22, r24
    2816:	cd 01       	movw	r24, r26
    2818:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    281c:	dc 01       	movw	r26, r24
    281e:	cb 01       	movw	r24, r22
    2820:	f8 01       	movw	r30, r16
    2822:	91 83       	std	Z+1, r25	; 0x01
    2824:	80 83       	st	Z, r24
    2826:	1f c0       	rjmp	.+62     	; 0x2866 <main+0x1390>
    2828:	fe 01       	movw	r30, r28
    282a:	e1 57       	subi	r30, 0x71	; 113
    282c:	ff 4f       	sbci	r31, 0xFF	; 255
    282e:	84 e1       	ldi	r24, 0x14	; 20
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	91 83       	std	Z+1, r25	; 0x01
    2834:	80 83       	st	Z, r24
    2836:	fe 01       	movw	r30, r28
    2838:	e1 57       	subi	r30, 0x71	; 113
    283a:	ff 4f       	sbci	r31, 0xFF	; 255
    283c:	80 81       	ld	r24, Z
    283e:	91 81       	ldd	r25, Z+1	; 0x01
    2840:	01 97       	sbiw	r24, 0x01	; 1
    2842:	f1 f7       	brne	.-4      	; 0x2840 <main+0x136a>
    2844:	fe 01       	movw	r30, r28
    2846:	e1 57       	subi	r30, 0x71	; 113
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	91 83       	std	Z+1, r25	; 0x01
    284c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    284e:	de 01       	movw	r26, r28
    2850:	af 56       	subi	r26, 0x6F	; 111
    2852:	bf 4f       	sbci	r27, 0xFF	; 255
    2854:	fe 01       	movw	r30, r28
    2856:	ef 56       	subi	r30, 0x6F	; 111
    2858:	ff 4f       	sbci	r31, 0xFF	; 255
    285a:	80 81       	ld	r24, Z
    285c:	91 81       	ldd	r25, Z+1	; 0x01
    285e:	01 97       	sbiw	r24, 0x01	; 1
    2860:	11 96       	adiw	r26, 0x01	; 1
    2862:	9c 93       	st	X, r25
    2864:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2866:	fe 01       	movw	r30, r28
    2868:	ef 56       	subi	r30, 0x6F	; 111
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	80 81       	ld	r24, Z
    286e:	91 81       	ldd	r25, Z+1	; 0x01
    2870:	00 97       	sbiw	r24, 0x00	; 0
    2872:	d1 f6       	brne	.-76     	; 0x2828 <main+0x1352>
    2874:	27 c0       	rjmp	.+78     	; 0x28c4 <main+0x13ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2876:	8e 01       	movw	r16, r28
    2878:	0f 56       	subi	r16, 0x6F	; 111
    287a:	1f 4f       	sbci	r17, 0xFF	; 255
    287c:	fe 01       	movw	r30, r28
    287e:	ed 56       	subi	r30, 0x6D	; 109
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	60 81       	ld	r22, Z
    2884:	71 81       	ldd	r23, Z+1	; 0x01
    2886:	82 81       	ldd	r24, Z+2	; 0x02
    2888:	93 81       	ldd	r25, Z+3	; 0x03
    288a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    288e:	dc 01       	movw	r26, r24
    2890:	cb 01       	movw	r24, r22
    2892:	f8 01       	movw	r30, r16
    2894:	91 83       	std	Z+1, r25	; 0x01
    2896:	80 83       	st	Z, r24
    2898:	de 01       	movw	r26, r28
    289a:	a3 57       	subi	r26, 0x73	; 115
    289c:	bf 4f       	sbci	r27, 0xFF	; 255
    289e:	fe 01       	movw	r30, r28
    28a0:	ef 56       	subi	r30, 0x6F	; 111
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	80 81       	ld	r24, Z
    28a6:	91 81       	ldd	r25, Z+1	; 0x01
    28a8:	8d 93       	st	X+, r24
    28aa:	9c 93       	st	X, r25
    28ac:	fe 01       	movw	r30, r28
    28ae:	e3 57       	subi	r30, 0x73	; 115
    28b0:	ff 4f       	sbci	r31, 0xFF	; 255
    28b2:	80 81       	ld	r24, Z
    28b4:	91 81       	ldd	r25, Z+1	; 0x01
    28b6:	01 97       	sbiw	r24, 0x01	; 1
    28b8:	f1 f7       	brne	.-4      	; 0x28b6 <main+0x13e0>
    28ba:	fe 01       	movw	r30, r28
    28bc:	e3 57       	subi	r30, 0x73	; 115
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
		_delay_ms(1000);

		/* Turn on Green LED and count from 10 to 0 */
		LED_voidLEDTurnOFF(&LED1);
    28c4:	ce 01       	movw	r24, r28
    28c6:	8b 5b       	subi	r24, 0xBB	; 187
    28c8:	9e 4f       	sbci	r25, 0xFE	; 254
    28ca:	0e 94 8f 09 	call	0x131e	; 0x131e <LED_voidLEDTurnOFF>
		LED_voidLEDTurnON(&LED2);
    28ce:	ce 01       	movw	r24, r28
    28d0:	89 5b       	subi	r24, 0xB9	; 185
    28d2:	9e 4f       	sbci	r25, 0xFE	; 254
    28d4:	0e 94 79 09 	call	0x12f2	; 0x12f2 <LED_voidLEDTurnON>
		SevenSegment_voidDisplayNumber1(&SevenSegment0);
    28d8:	ce 01       	movw	r24, r28
    28da:	87 5b       	subi	r24, 0xB7	; 183
    28dc:	9e 4f       	sbci	r25, 0xFE	; 254
    28de:	0e 94 c9 09 	call	0x1392	; 0x1392 <SevenSegment_voidDisplayNumber1>
		SevenSegment_voidDisplayNumber0(&SevenSegment1);
    28e2:	ce 01       	movw	r24, r28
    28e4:	86 5b       	subi	r24, 0xB6	; 182
    28e6:	9e 4f       	sbci	r25, 0xFE	; 254
    28e8:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
    28ec:	fe 01       	movw	r30, r28
    28ee:	e7 57       	subi	r30, 0x77	; 119
    28f0:	ff 4f       	sbci	r31, 0xFF	; 255
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	aa e7       	ldi	r26, 0x7A	; 122
    28f8:	b4 e4       	ldi	r27, 0x44	; 68
    28fa:	80 83       	st	Z, r24
    28fc:	91 83       	std	Z+1, r25	; 0x01
    28fe:	a2 83       	std	Z+2, r26	; 0x02
    2900:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2902:	8e 01       	movw	r16, r28
    2904:	0b 57       	subi	r16, 0x7B	; 123
    2906:	1f 4f       	sbci	r17, 0xFF	; 255
    2908:	fe 01       	movw	r30, r28
    290a:	e7 57       	subi	r30, 0x77	; 119
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	60 81       	ld	r22, Z
    2910:	71 81       	ldd	r23, Z+1	; 0x01
    2912:	82 81       	ldd	r24, Z+2	; 0x02
    2914:	93 81       	ldd	r25, Z+3	; 0x03
    2916:	20 e0       	ldi	r18, 0x00	; 0
    2918:	30 e0       	ldi	r19, 0x00	; 0
    291a:	48 e4       	ldi	r20, 0x48	; 72
    291c:	53 e4       	ldi	r21, 0x43	; 67
    291e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2922:	dc 01       	movw	r26, r24
    2924:	cb 01       	movw	r24, r22
    2926:	f8 01       	movw	r30, r16
    2928:	80 83       	st	Z, r24
    292a:	91 83       	std	Z+1, r25	; 0x01
    292c:	a2 83       	std	Z+2, r26	; 0x02
    292e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2930:	fe 01       	movw	r30, r28
    2932:	eb 57       	subi	r30, 0x7B	; 123
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	60 81       	ld	r22, Z
    2938:	71 81       	ldd	r23, Z+1	; 0x01
    293a:	82 81       	ldd	r24, Z+2	; 0x02
    293c:	93 81       	ldd	r25, Z+3	; 0x03
    293e:	20 e0       	ldi	r18, 0x00	; 0
    2940:	30 e0       	ldi	r19, 0x00	; 0
    2942:	40 e8       	ldi	r20, 0x80	; 128
    2944:	5f e3       	ldi	r21, 0x3F	; 63
    2946:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    294a:	88 23       	and	r24, r24
    294c:	44 f4       	brge	.+16     	; 0x295e <main+0x1488>
		__ticks = 1;
    294e:	fe 01       	movw	r30, r28
    2950:	ed 57       	subi	r30, 0x7D	; 125
    2952:	ff 4f       	sbci	r31, 0xFF	; 255
    2954:	81 e0       	ldi	r24, 0x01	; 1
    2956:	90 e0       	ldi	r25, 0x00	; 0
    2958:	91 83       	std	Z+1, r25	; 0x01
    295a:	80 83       	st	Z, r24
    295c:	64 c0       	rjmp	.+200    	; 0x2a26 <main+0x1550>
	else if (__tmp > 65535)
    295e:	fe 01       	movw	r30, r28
    2960:	eb 57       	subi	r30, 0x7B	; 123
    2962:	ff 4f       	sbci	r31, 0xFF	; 255
    2964:	60 81       	ld	r22, Z
    2966:	71 81       	ldd	r23, Z+1	; 0x01
    2968:	82 81       	ldd	r24, Z+2	; 0x02
    296a:	93 81       	ldd	r25, Z+3	; 0x03
    296c:	20 e0       	ldi	r18, 0x00	; 0
    296e:	3f ef       	ldi	r19, 0xFF	; 255
    2970:	4f e7       	ldi	r20, 0x7F	; 127
    2972:	57 e4       	ldi	r21, 0x47	; 71
    2974:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2978:	18 16       	cp	r1, r24
    297a:	0c f0       	brlt	.+2      	; 0x297e <main+0x14a8>
    297c:	43 c0       	rjmp	.+134    	; 0x2a04 <main+0x152e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    297e:	fe 01       	movw	r30, r28
    2980:	e7 57       	subi	r30, 0x77	; 119
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	60 81       	ld	r22, Z
    2986:	71 81       	ldd	r23, Z+1	; 0x01
    2988:	82 81       	ldd	r24, Z+2	; 0x02
    298a:	93 81       	ldd	r25, Z+3	; 0x03
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	40 e2       	ldi	r20, 0x20	; 32
    2992:	51 e4       	ldi	r21, 0x41	; 65
    2994:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2998:	dc 01       	movw	r26, r24
    299a:	cb 01       	movw	r24, r22
    299c:	8e 01       	movw	r16, r28
    299e:	0d 57       	subi	r16, 0x7D	; 125
    29a0:	1f 4f       	sbci	r17, 0xFF	; 255
    29a2:	bc 01       	movw	r22, r24
    29a4:	cd 01       	movw	r24, r26
    29a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29aa:	dc 01       	movw	r26, r24
    29ac:	cb 01       	movw	r24, r22
    29ae:	f8 01       	movw	r30, r16
    29b0:	91 83       	std	Z+1, r25	; 0x01
    29b2:	80 83       	st	Z, r24
    29b4:	1f c0       	rjmp	.+62     	; 0x29f4 <main+0x151e>
    29b6:	fe 01       	movw	r30, r28
    29b8:	ef 57       	subi	r30, 0x7F	; 127
    29ba:	ff 4f       	sbci	r31, 0xFF	; 255
    29bc:	84 e1       	ldi	r24, 0x14	; 20
    29be:	90 e0       	ldi	r25, 0x00	; 0
    29c0:	91 83       	std	Z+1, r25	; 0x01
    29c2:	80 83       	st	Z, r24
    29c4:	fe 01       	movw	r30, r28
    29c6:	ef 57       	subi	r30, 0x7F	; 127
    29c8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ca:	80 81       	ld	r24, Z
    29cc:	91 81       	ldd	r25, Z+1	; 0x01
    29ce:	01 97       	sbiw	r24, 0x01	; 1
    29d0:	f1 f7       	brne	.-4      	; 0x29ce <main+0x14f8>
    29d2:	fe 01       	movw	r30, r28
    29d4:	ef 57       	subi	r30, 0x7F	; 127
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	91 83       	std	Z+1, r25	; 0x01
    29da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29dc:	de 01       	movw	r26, r28
    29de:	ad 57       	subi	r26, 0x7D	; 125
    29e0:	bf 4f       	sbci	r27, 0xFF	; 255
    29e2:	fe 01       	movw	r30, r28
    29e4:	ed 57       	subi	r30, 0x7D	; 125
    29e6:	ff 4f       	sbci	r31, 0xFF	; 255
    29e8:	80 81       	ld	r24, Z
    29ea:	91 81       	ldd	r25, Z+1	; 0x01
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	11 96       	adiw	r26, 0x01	; 1
    29f0:	9c 93       	st	X, r25
    29f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29f4:	fe 01       	movw	r30, r28
    29f6:	ed 57       	subi	r30, 0x7D	; 125
    29f8:	ff 4f       	sbci	r31, 0xFF	; 255
    29fa:	80 81       	ld	r24, Z
    29fc:	91 81       	ldd	r25, Z+1	; 0x01
    29fe:	00 97       	sbiw	r24, 0x00	; 0
    2a00:	d1 f6       	brne	.-76     	; 0x29b6 <main+0x14e0>
    2a02:	27 c0       	rjmp	.+78     	; 0x2a52 <main+0x157c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a04:	8e 01       	movw	r16, r28
    2a06:	0d 57       	subi	r16, 0x7D	; 125
    2a08:	1f 4f       	sbci	r17, 0xFF	; 255
    2a0a:	fe 01       	movw	r30, r28
    2a0c:	eb 57       	subi	r30, 0x7B	; 123
    2a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a10:	60 81       	ld	r22, Z
    2a12:	71 81       	ldd	r23, Z+1	; 0x01
    2a14:	82 81       	ldd	r24, Z+2	; 0x02
    2a16:	93 81       	ldd	r25, Z+3	; 0x03
    2a18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a1c:	dc 01       	movw	r26, r24
    2a1e:	cb 01       	movw	r24, r22
    2a20:	f8 01       	movw	r30, r16
    2a22:	91 83       	std	Z+1, r25	; 0x01
    2a24:	80 83       	st	Z, r24
    2a26:	de 01       	movw	r26, r28
    2a28:	a1 58       	subi	r26, 0x81	; 129
    2a2a:	bf 4f       	sbci	r27, 0xFF	; 255
    2a2c:	fe 01       	movw	r30, r28
    2a2e:	ed 57       	subi	r30, 0x7D	; 125
    2a30:	ff 4f       	sbci	r31, 0xFF	; 255
    2a32:	80 81       	ld	r24, Z
    2a34:	91 81       	ldd	r25, Z+1	; 0x01
    2a36:	8d 93       	st	X+, r24
    2a38:	9c 93       	st	X, r25
    2a3a:	fe 01       	movw	r30, r28
    2a3c:	e1 58       	subi	r30, 0x81	; 129
    2a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a40:	80 81       	ld	r24, Z
    2a42:	91 81       	ldd	r25, Z+1	; 0x01
    2a44:	01 97       	sbiw	r24, 0x01	; 1
    2a46:	f1 f7       	brne	.-4      	; 0x2a44 <main+0x156e>
    2a48:	fe 01       	movw	r30, r28
    2a4a:	e1 58       	subi	r30, 0x81	; 129
    2a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4e:	91 83       	std	Z+1, r25	; 0x01
    2a50:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    2a52:	ce 01       	movw	r24, r28
    2a54:	87 5b       	subi	r24, 0xB7	; 183
    2a56:	9e 4f       	sbci	r25, 0xFE	; 254
    2a58:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber9(&SevenSegment1);
    2a5c:	ce 01       	movw	r24, r28
    2a5e:	86 5b       	subi	r24, 0xB6	; 182
    2a60:	9e 4f       	sbci	r25, 0xFE	; 254
    2a62:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <SevenSegment_voidDisplayNumber9>
    2a66:	fe 01       	movw	r30, r28
    2a68:	e5 58       	subi	r30, 0x85	; 133
    2a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6c:	80 e0       	ldi	r24, 0x00	; 0
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	aa e7       	ldi	r26, 0x7A	; 122
    2a72:	b4 e4       	ldi	r27, 0x44	; 68
    2a74:	80 83       	st	Z, r24
    2a76:	91 83       	std	Z+1, r25	; 0x01
    2a78:	a2 83       	std	Z+2, r26	; 0x02
    2a7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a7c:	8e 01       	movw	r16, r28
    2a7e:	09 58       	subi	r16, 0x89	; 137
    2a80:	1f 4f       	sbci	r17, 0xFF	; 255
    2a82:	fe 01       	movw	r30, r28
    2a84:	e5 58       	subi	r30, 0x85	; 133
    2a86:	ff 4f       	sbci	r31, 0xFF	; 255
    2a88:	60 81       	ld	r22, Z
    2a8a:	71 81       	ldd	r23, Z+1	; 0x01
    2a8c:	82 81       	ldd	r24, Z+2	; 0x02
    2a8e:	93 81       	ldd	r25, Z+3	; 0x03
    2a90:	20 e0       	ldi	r18, 0x00	; 0
    2a92:	30 e0       	ldi	r19, 0x00	; 0
    2a94:	48 e4       	ldi	r20, 0x48	; 72
    2a96:	53 e4       	ldi	r21, 0x43	; 67
    2a98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a9c:	dc 01       	movw	r26, r24
    2a9e:	cb 01       	movw	r24, r22
    2aa0:	f8 01       	movw	r30, r16
    2aa2:	80 83       	st	Z, r24
    2aa4:	91 83       	std	Z+1, r25	; 0x01
    2aa6:	a2 83       	std	Z+2, r26	; 0x02
    2aa8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aaa:	fe 01       	movw	r30, r28
    2aac:	e9 58       	subi	r30, 0x89	; 137
    2aae:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab0:	60 81       	ld	r22, Z
    2ab2:	71 81       	ldd	r23, Z+1	; 0x01
    2ab4:	82 81       	ldd	r24, Z+2	; 0x02
    2ab6:	93 81       	ldd	r25, Z+3	; 0x03
    2ab8:	20 e0       	ldi	r18, 0x00	; 0
    2aba:	30 e0       	ldi	r19, 0x00	; 0
    2abc:	40 e8       	ldi	r20, 0x80	; 128
    2abe:	5f e3       	ldi	r21, 0x3F	; 63
    2ac0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ac4:	88 23       	and	r24, r24
    2ac6:	44 f4       	brge	.+16     	; 0x2ad8 <main+0x1602>
		__ticks = 1;
    2ac8:	fe 01       	movw	r30, r28
    2aca:	eb 58       	subi	r30, 0x8B	; 139
    2acc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ace:	81 e0       	ldi	r24, 0x01	; 1
    2ad0:	90 e0       	ldi	r25, 0x00	; 0
    2ad2:	91 83       	std	Z+1, r25	; 0x01
    2ad4:	80 83       	st	Z, r24
    2ad6:	64 c0       	rjmp	.+200    	; 0x2ba0 <main+0x16ca>
	else if (__tmp > 65535)
    2ad8:	fe 01       	movw	r30, r28
    2ada:	e9 58       	subi	r30, 0x89	; 137
    2adc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ade:	60 81       	ld	r22, Z
    2ae0:	71 81       	ldd	r23, Z+1	; 0x01
    2ae2:	82 81       	ldd	r24, Z+2	; 0x02
    2ae4:	93 81       	ldd	r25, Z+3	; 0x03
    2ae6:	20 e0       	ldi	r18, 0x00	; 0
    2ae8:	3f ef       	ldi	r19, 0xFF	; 255
    2aea:	4f e7       	ldi	r20, 0x7F	; 127
    2aec:	57 e4       	ldi	r21, 0x47	; 71
    2aee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2af2:	18 16       	cp	r1, r24
    2af4:	0c f0       	brlt	.+2      	; 0x2af8 <main+0x1622>
    2af6:	43 c0       	rjmp	.+134    	; 0x2b7e <main+0x16a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2af8:	fe 01       	movw	r30, r28
    2afa:	e5 58       	subi	r30, 0x85	; 133
    2afc:	ff 4f       	sbci	r31, 0xFF	; 255
    2afe:	60 81       	ld	r22, Z
    2b00:	71 81       	ldd	r23, Z+1	; 0x01
    2b02:	82 81       	ldd	r24, Z+2	; 0x02
    2b04:	93 81       	ldd	r25, Z+3	; 0x03
    2b06:	20 e0       	ldi	r18, 0x00	; 0
    2b08:	30 e0       	ldi	r19, 0x00	; 0
    2b0a:	40 e2       	ldi	r20, 0x20	; 32
    2b0c:	51 e4       	ldi	r21, 0x41	; 65
    2b0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b12:	dc 01       	movw	r26, r24
    2b14:	cb 01       	movw	r24, r22
    2b16:	8e 01       	movw	r16, r28
    2b18:	0b 58       	subi	r16, 0x8B	; 139
    2b1a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b1c:	bc 01       	movw	r22, r24
    2b1e:	cd 01       	movw	r24, r26
    2b20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b24:	dc 01       	movw	r26, r24
    2b26:	cb 01       	movw	r24, r22
    2b28:	f8 01       	movw	r30, r16
    2b2a:	91 83       	std	Z+1, r25	; 0x01
    2b2c:	80 83       	st	Z, r24
    2b2e:	1f c0       	rjmp	.+62     	; 0x2b6e <main+0x1698>
    2b30:	fe 01       	movw	r30, r28
    2b32:	ed 58       	subi	r30, 0x8D	; 141
    2b34:	ff 4f       	sbci	r31, 0xFF	; 255
    2b36:	84 e1       	ldi	r24, 0x14	; 20
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	91 83       	std	Z+1, r25	; 0x01
    2b3c:	80 83       	st	Z, r24
    2b3e:	fe 01       	movw	r30, r28
    2b40:	ed 58       	subi	r30, 0x8D	; 141
    2b42:	ff 4f       	sbci	r31, 0xFF	; 255
    2b44:	80 81       	ld	r24, Z
    2b46:	91 81       	ldd	r25, Z+1	; 0x01
    2b48:	01 97       	sbiw	r24, 0x01	; 1
    2b4a:	f1 f7       	brne	.-4      	; 0x2b48 <main+0x1672>
    2b4c:	fe 01       	movw	r30, r28
    2b4e:	ed 58       	subi	r30, 0x8D	; 141
    2b50:	ff 4f       	sbci	r31, 0xFF	; 255
    2b52:	91 83       	std	Z+1, r25	; 0x01
    2b54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b56:	de 01       	movw	r26, r28
    2b58:	ab 58       	subi	r26, 0x8B	; 139
    2b5a:	bf 4f       	sbci	r27, 0xFF	; 255
    2b5c:	fe 01       	movw	r30, r28
    2b5e:	eb 58       	subi	r30, 0x8B	; 139
    2b60:	ff 4f       	sbci	r31, 0xFF	; 255
    2b62:	80 81       	ld	r24, Z
    2b64:	91 81       	ldd	r25, Z+1	; 0x01
    2b66:	01 97       	sbiw	r24, 0x01	; 1
    2b68:	11 96       	adiw	r26, 0x01	; 1
    2b6a:	9c 93       	st	X, r25
    2b6c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b6e:	fe 01       	movw	r30, r28
    2b70:	eb 58       	subi	r30, 0x8B	; 139
    2b72:	ff 4f       	sbci	r31, 0xFF	; 255
    2b74:	80 81       	ld	r24, Z
    2b76:	91 81       	ldd	r25, Z+1	; 0x01
    2b78:	00 97       	sbiw	r24, 0x00	; 0
    2b7a:	d1 f6       	brne	.-76     	; 0x2b30 <main+0x165a>
    2b7c:	27 c0       	rjmp	.+78     	; 0x2bcc <main+0x16f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b7e:	8e 01       	movw	r16, r28
    2b80:	0b 58       	subi	r16, 0x8B	; 139
    2b82:	1f 4f       	sbci	r17, 0xFF	; 255
    2b84:	fe 01       	movw	r30, r28
    2b86:	e9 58       	subi	r30, 0x89	; 137
    2b88:	ff 4f       	sbci	r31, 0xFF	; 255
    2b8a:	60 81       	ld	r22, Z
    2b8c:	71 81       	ldd	r23, Z+1	; 0x01
    2b8e:	82 81       	ldd	r24, Z+2	; 0x02
    2b90:	93 81       	ldd	r25, Z+3	; 0x03
    2b92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b96:	dc 01       	movw	r26, r24
    2b98:	cb 01       	movw	r24, r22
    2b9a:	f8 01       	movw	r30, r16
    2b9c:	91 83       	std	Z+1, r25	; 0x01
    2b9e:	80 83       	st	Z, r24
    2ba0:	de 01       	movw	r26, r28
    2ba2:	af 58       	subi	r26, 0x8F	; 143
    2ba4:	bf 4f       	sbci	r27, 0xFF	; 255
    2ba6:	fe 01       	movw	r30, r28
    2ba8:	eb 58       	subi	r30, 0x8B	; 139
    2baa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bac:	80 81       	ld	r24, Z
    2bae:	91 81       	ldd	r25, Z+1	; 0x01
    2bb0:	8d 93       	st	X+, r24
    2bb2:	9c 93       	st	X, r25
    2bb4:	fe 01       	movw	r30, r28
    2bb6:	ef 58       	subi	r30, 0x8F	; 143
    2bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bba:	80 81       	ld	r24, Z
    2bbc:	91 81       	ldd	r25, Z+1	; 0x01
    2bbe:	01 97       	sbiw	r24, 0x01	; 1
    2bc0:	f1 f7       	brne	.-4      	; 0x2bbe <main+0x16e8>
    2bc2:	fe 01       	movw	r30, r28
    2bc4:	ef 58       	subi	r30, 0x8F	; 143
    2bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc8:	91 83       	std	Z+1, r25	; 0x01
    2bca:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    2bcc:	ce 01       	movw	r24, r28
    2bce:	87 5b       	subi	r24, 0xB7	; 183
    2bd0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bd2:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber8(&SevenSegment1);
    2bd6:	ce 01       	movw	r24, r28
    2bd8:	86 5b       	subi	r24, 0xB6	; 182
    2bda:	9e 4f       	sbci	r25, 0xFE	; 254
    2bdc:	0e 94 47 0a 	call	0x148e	; 0x148e <SevenSegment_voidDisplayNumber8>
    2be0:	fe 01       	movw	r30, r28
    2be2:	e3 59       	subi	r30, 0x93	; 147
    2be4:	ff 4f       	sbci	r31, 0xFF	; 255
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	90 e0       	ldi	r25, 0x00	; 0
    2bea:	aa e7       	ldi	r26, 0x7A	; 122
    2bec:	b4 e4       	ldi	r27, 0x44	; 68
    2bee:	80 83       	st	Z, r24
    2bf0:	91 83       	std	Z+1, r25	; 0x01
    2bf2:	a2 83       	std	Z+2, r26	; 0x02
    2bf4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bf6:	8e 01       	movw	r16, r28
    2bf8:	07 59       	subi	r16, 0x97	; 151
    2bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    2bfc:	fe 01       	movw	r30, r28
    2bfe:	e3 59       	subi	r30, 0x93	; 147
    2c00:	ff 4f       	sbci	r31, 0xFF	; 255
    2c02:	60 81       	ld	r22, Z
    2c04:	71 81       	ldd	r23, Z+1	; 0x01
    2c06:	82 81       	ldd	r24, Z+2	; 0x02
    2c08:	93 81       	ldd	r25, Z+3	; 0x03
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	48 e4       	ldi	r20, 0x48	; 72
    2c10:	53 e4       	ldi	r21, 0x43	; 67
    2c12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c16:	dc 01       	movw	r26, r24
    2c18:	cb 01       	movw	r24, r22
    2c1a:	f8 01       	movw	r30, r16
    2c1c:	80 83       	st	Z, r24
    2c1e:	91 83       	std	Z+1, r25	; 0x01
    2c20:	a2 83       	std	Z+2, r26	; 0x02
    2c22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c24:	fe 01       	movw	r30, r28
    2c26:	e7 59       	subi	r30, 0x97	; 151
    2c28:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2a:	60 81       	ld	r22, Z
    2c2c:	71 81       	ldd	r23, Z+1	; 0x01
    2c2e:	82 81       	ldd	r24, Z+2	; 0x02
    2c30:	93 81       	ldd	r25, Z+3	; 0x03
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	40 e8       	ldi	r20, 0x80	; 128
    2c38:	5f e3       	ldi	r21, 0x3F	; 63
    2c3a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c3e:	88 23       	and	r24, r24
    2c40:	44 f4       	brge	.+16     	; 0x2c52 <main+0x177c>
		__ticks = 1;
    2c42:	fe 01       	movw	r30, r28
    2c44:	e9 59       	subi	r30, 0x99	; 153
    2c46:	ff 4f       	sbci	r31, 0xFF	; 255
    2c48:	81 e0       	ldi	r24, 0x01	; 1
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	91 83       	std	Z+1, r25	; 0x01
    2c4e:	80 83       	st	Z, r24
    2c50:	64 c0       	rjmp	.+200    	; 0x2d1a <main+0x1844>
	else if (__tmp > 65535)
    2c52:	fe 01       	movw	r30, r28
    2c54:	e7 59       	subi	r30, 0x97	; 151
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
    2c58:	60 81       	ld	r22, Z
    2c5a:	71 81       	ldd	r23, Z+1	; 0x01
    2c5c:	82 81       	ldd	r24, Z+2	; 0x02
    2c5e:	93 81       	ldd	r25, Z+3	; 0x03
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	3f ef       	ldi	r19, 0xFF	; 255
    2c64:	4f e7       	ldi	r20, 0x7F	; 127
    2c66:	57 e4       	ldi	r21, 0x47	; 71
    2c68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c6c:	18 16       	cp	r1, r24
    2c6e:	0c f0       	brlt	.+2      	; 0x2c72 <main+0x179c>
    2c70:	43 c0       	rjmp	.+134    	; 0x2cf8 <main+0x1822>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c72:	fe 01       	movw	r30, r28
    2c74:	e3 59       	subi	r30, 0x93	; 147
    2c76:	ff 4f       	sbci	r31, 0xFF	; 255
    2c78:	60 81       	ld	r22, Z
    2c7a:	71 81       	ldd	r23, Z+1	; 0x01
    2c7c:	82 81       	ldd	r24, Z+2	; 0x02
    2c7e:	93 81       	ldd	r25, Z+3	; 0x03
    2c80:	20 e0       	ldi	r18, 0x00	; 0
    2c82:	30 e0       	ldi	r19, 0x00	; 0
    2c84:	40 e2       	ldi	r20, 0x20	; 32
    2c86:	51 e4       	ldi	r21, 0x41	; 65
    2c88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c8c:	dc 01       	movw	r26, r24
    2c8e:	cb 01       	movw	r24, r22
    2c90:	8e 01       	movw	r16, r28
    2c92:	09 59       	subi	r16, 0x99	; 153
    2c94:	1f 4f       	sbci	r17, 0xFF	; 255
    2c96:	bc 01       	movw	r22, r24
    2c98:	cd 01       	movw	r24, r26
    2c9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c9e:	dc 01       	movw	r26, r24
    2ca0:	cb 01       	movw	r24, r22
    2ca2:	f8 01       	movw	r30, r16
    2ca4:	91 83       	std	Z+1, r25	; 0x01
    2ca6:	80 83       	st	Z, r24
    2ca8:	1f c0       	rjmp	.+62     	; 0x2ce8 <main+0x1812>
    2caa:	fe 01       	movw	r30, r28
    2cac:	eb 59       	subi	r30, 0x9B	; 155
    2cae:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb0:	84 e1       	ldi	r24, 0x14	; 20
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	91 83       	std	Z+1, r25	; 0x01
    2cb6:	80 83       	st	Z, r24
    2cb8:	fe 01       	movw	r30, r28
    2cba:	eb 59       	subi	r30, 0x9B	; 155
    2cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbe:	80 81       	ld	r24, Z
    2cc0:	91 81       	ldd	r25, Z+1	; 0x01
    2cc2:	01 97       	sbiw	r24, 0x01	; 1
    2cc4:	f1 f7       	brne	.-4      	; 0x2cc2 <main+0x17ec>
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	eb 59       	subi	r30, 0x9B	; 155
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	91 83       	std	Z+1, r25	; 0x01
    2cce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cd0:	de 01       	movw	r26, r28
    2cd2:	a9 59       	subi	r26, 0x99	; 153
    2cd4:	bf 4f       	sbci	r27, 0xFF	; 255
    2cd6:	fe 01       	movw	r30, r28
    2cd8:	e9 59       	subi	r30, 0x99	; 153
    2cda:	ff 4f       	sbci	r31, 0xFF	; 255
    2cdc:	80 81       	ld	r24, Z
    2cde:	91 81       	ldd	r25, Z+1	; 0x01
    2ce0:	01 97       	sbiw	r24, 0x01	; 1
    2ce2:	11 96       	adiw	r26, 0x01	; 1
    2ce4:	9c 93       	st	X, r25
    2ce6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ce8:	fe 01       	movw	r30, r28
    2cea:	e9 59       	subi	r30, 0x99	; 153
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	80 81       	ld	r24, Z
    2cf0:	91 81       	ldd	r25, Z+1	; 0x01
    2cf2:	00 97       	sbiw	r24, 0x00	; 0
    2cf4:	d1 f6       	brne	.-76     	; 0x2caa <main+0x17d4>
    2cf6:	27 c0       	rjmp	.+78     	; 0x2d46 <main+0x1870>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cf8:	8e 01       	movw	r16, r28
    2cfa:	09 59       	subi	r16, 0x99	; 153
    2cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    2cfe:	fe 01       	movw	r30, r28
    2d00:	e7 59       	subi	r30, 0x97	; 151
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	60 81       	ld	r22, Z
    2d06:	71 81       	ldd	r23, Z+1	; 0x01
    2d08:	82 81       	ldd	r24, Z+2	; 0x02
    2d0a:	93 81       	ldd	r25, Z+3	; 0x03
    2d0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d10:	dc 01       	movw	r26, r24
    2d12:	cb 01       	movw	r24, r22
    2d14:	f8 01       	movw	r30, r16
    2d16:	91 83       	std	Z+1, r25	; 0x01
    2d18:	80 83       	st	Z, r24
    2d1a:	de 01       	movw	r26, r28
    2d1c:	ad 59       	subi	r26, 0x9D	; 157
    2d1e:	bf 4f       	sbci	r27, 0xFF	; 255
    2d20:	fe 01       	movw	r30, r28
    2d22:	e9 59       	subi	r30, 0x99	; 153
    2d24:	ff 4f       	sbci	r31, 0xFF	; 255
    2d26:	80 81       	ld	r24, Z
    2d28:	91 81       	ldd	r25, Z+1	; 0x01
    2d2a:	8d 93       	st	X+, r24
    2d2c:	9c 93       	st	X, r25
    2d2e:	fe 01       	movw	r30, r28
    2d30:	ed 59       	subi	r30, 0x9D	; 157
    2d32:	ff 4f       	sbci	r31, 0xFF	; 255
    2d34:	80 81       	ld	r24, Z
    2d36:	91 81       	ldd	r25, Z+1	; 0x01
    2d38:	01 97       	sbiw	r24, 0x01	; 1
    2d3a:	f1 f7       	brne	.-4      	; 0x2d38 <main+0x1862>
    2d3c:	fe 01       	movw	r30, r28
    2d3e:	ed 59       	subi	r30, 0x9D	; 157
    2d40:	ff 4f       	sbci	r31, 0xFF	; 255
    2d42:	91 83       	std	Z+1, r25	; 0x01
    2d44:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    2d46:	ce 01       	movw	r24, r28
    2d48:	87 5b       	subi	r24, 0xB7	; 183
    2d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d4c:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber7(&SevenSegment1);
    2d50:	ce 01       	movw	r24, r28
    2d52:	86 5b       	subi	r24, 0xB6	; 182
    2d54:	9e 4f       	sbci	r25, 0xFE	; 254
    2d56:	0e 94 35 0a 	call	0x146a	; 0x146a <SevenSegment_voidDisplayNumber7>
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e1 5a       	subi	r30, 0xA1	; 161
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	80 e0       	ldi	r24, 0x00	; 0
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	aa e7       	ldi	r26, 0x7A	; 122
    2d66:	b4 e4       	ldi	r27, 0x44	; 68
    2d68:	80 83       	st	Z, r24
    2d6a:	91 83       	std	Z+1, r25	; 0x01
    2d6c:	a2 83       	std	Z+2, r26	; 0x02
    2d6e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d70:	8e 01       	movw	r16, r28
    2d72:	05 5a       	subi	r16, 0xA5	; 165
    2d74:	1f 4f       	sbci	r17, 0xFF	; 255
    2d76:	fe 01       	movw	r30, r28
    2d78:	e1 5a       	subi	r30, 0xA1	; 161
    2d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7c:	60 81       	ld	r22, Z
    2d7e:	71 81       	ldd	r23, Z+1	; 0x01
    2d80:	82 81       	ldd	r24, Z+2	; 0x02
    2d82:	93 81       	ldd	r25, Z+3	; 0x03
    2d84:	20 e0       	ldi	r18, 0x00	; 0
    2d86:	30 e0       	ldi	r19, 0x00	; 0
    2d88:	48 e4       	ldi	r20, 0x48	; 72
    2d8a:	53 e4       	ldi	r21, 0x43	; 67
    2d8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d90:	dc 01       	movw	r26, r24
    2d92:	cb 01       	movw	r24, r22
    2d94:	f8 01       	movw	r30, r16
    2d96:	80 83       	st	Z, r24
    2d98:	91 83       	std	Z+1, r25	; 0x01
    2d9a:	a2 83       	std	Z+2, r26	; 0x02
    2d9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d9e:	fe 01       	movw	r30, r28
    2da0:	e5 5a       	subi	r30, 0xA5	; 165
    2da2:	ff 4f       	sbci	r31, 0xFF	; 255
    2da4:	60 81       	ld	r22, Z
    2da6:	71 81       	ldd	r23, Z+1	; 0x01
    2da8:	82 81       	ldd	r24, Z+2	; 0x02
    2daa:	93 81       	ldd	r25, Z+3	; 0x03
    2dac:	20 e0       	ldi	r18, 0x00	; 0
    2dae:	30 e0       	ldi	r19, 0x00	; 0
    2db0:	40 e8       	ldi	r20, 0x80	; 128
    2db2:	5f e3       	ldi	r21, 0x3F	; 63
    2db4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2db8:	88 23       	and	r24, r24
    2dba:	44 f4       	brge	.+16     	; 0x2dcc <main+0x18f6>
		__ticks = 1;
    2dbc:	fe 01       	movw	r30, r28
    2dbe:	e7 5a       	subi	r30, 0xA7	; 167
    2dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc2:	81 e0       	ldi	r24, 0x01	; 1
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	91 83       	std	Z+1, r25	; 0x01
    2dc8:	80 83       	st	Z, r24
    2dca:	64 c0       	rjmp	.+200    	; 0x2e94 <main+0x19be>
	else if (__tmp > 65535)
    2dcc:	fe 01       	movw	r30, r28
    2dce:	e5 5a       	subi	r30, 0xA5	; 165
    2dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd2:	60 81       	ld	r22, Z
    2dd4:	71 81       	ldd	r23, Z+1	; 0x01
    2dd6:	82 81       	ldd	r24, Z+2	; 0x02
    2dd8:	93 81       	ldd	r25, Z+3	; 0x03
    2dda:	20 e0       	ldi	r18, 0x00	; 0
    2ddc:	3f ef       	ldi	r19, 0xFF	; 255
    2dde:	4f e7       	ldi	r20, 0x7F	; 127
    2de0:	57 e4       	ldi	r21, 0x47	; 71
    2de2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2de6:	18 16       	cp	r1, r24
    2de8:	0c f0       	brlt	.+2      	; 0x2dec <main+0x1916>
    2dea:	43 c0       	rjmp	.+134    	; 0x2e72 <main+0x199c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dec:	fe 01       	movw	r30, r28
    2dee:	e1 5a       	subi	r30, 0xA1	; 161
    2df0:	ff 4f       	sbci	r31, 0xFF	; 255
    2df2:	60 81       	ld	r22, Z
    2df4:	71 81       	ldd	r23, Z+1	; 0x01
    2df6:	82 81       	ldd	r24, Z+2	; 0x02
    2df8:	93 81       	ldd	r25, Z+3	; 0x03
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	40 e2       	ldi	r20, 0x20	; 32
    2e00:	51 e4       	ldi	r21, 0x41	; 65
    2e02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e06:	dc 01       	movw	r26, r24
    2e08:	cb 01       	movw	r24, r22
    2e0a:	8e 01       	movw	r16, r28
    2e0c:	07 5a       	subi	r16, 0xA7	; 167
    2e0e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e10:	bc 01       	movw	r22, r24
    2e12:	cd 01       	movw	r24, r26
    2e14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e18:	dc 01       	movw	r26, r24
    2e1a:	cb 01       	movw	r24, r22
    2e1c:	f8 01       	movw	r30, r16
    2e1e:	91 83       	std	Z+1, r25	; 0x01
    2e20:	80 83       	st	Z, r24
    2e22:	1f c0       	rjmp	.+62     	; 0x2e62 <main+0x198c>
    2e24:	fe 01       	movw	r30, r28
    2e26:	e9 5a       	subi	r30, 0xA9	; 169
    2e28:	ff 4f       	sbci	r31, 0xFF	; 255
    2e2a:	84 e1       	ldi	r24, 0x14	; 20
    2e2c:	90 e0       	ldi	r25, 0x00	; 0
    2e2e:	91 83       	std	Z+1, r25	; 0x01
    2e30:	80 83       	st	Z, r24
    2e32:	fe 01       	movw	r30, r28
    2e34:	e9 5a       	subi	r30, 0xA9	; 169
    2e36:	ff 4f       	sbci	r31, 0xFF	; 255
    2e38:	80 81       	ld	r24, Z
    2e3a:	91 81       	ldd	r25, Z+1	; 0x01
    2e3c:	01 97       	sbiw	r24, 0x01	; 1
    2e3e:	f1 f7       	brne	.-4      	; 0x2e3c <main+0x1966>
    2e40:	fe 01       	movw	r30, r28
    2e42:	e9 5a       	subi	r30, 0xA9	; 169
    2e44:	ff 4f       	sbci	r31, 0xFF	; 255
    2e46:	91 83       	std	Z+1, r25	; 0x01
    2e48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e4a:	de 01       	movw	r26, r28
    2e4c:	a7 5a       	subi	r26, 0xA7	; 167
    2e4e:	bf 4f       	sbci	r27, 0xFF	; 255
    2e50:	fe 01       	movw	r30, r28
    2e52:	e7 5a       	subi	r30, 0xA7	; 167
    2e54:	ff 4f       	sbci	r31, 0xFF	; 255
    2e56:	80 81       	ld	r24, Z
    2e58:	91 81       	ldd	r25, Z+1	; 0x01
    2e5a:	01 97       	sbiw	r24, 0x01	; 1
    2e5c:	11 96       	adiw	r26, 0x01	; 1
    2e5e:	9c 93       	st	X, r25
    2e60:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e62:	fe 01       	movw	r30, r28
    2e64:	e7 5a       	subi	r30, 0xA7	; 167
    2e66:	ff 4f       	sbci	r31, 0xFF	; 255
    2e68:	80 81       	ld	r24, Z
    2e6a:	91 81       	ldd	r25, Z+1	; 0x01
    2e6c:	00 97       	sbiw	r24, 0x00	; 0
    2e6e:	d1 f6       	brne	.-76     	; 0x2e24 <main+0x194e>
    2e70:	27 c0       	rjmp	.+78     	; 0x2ec0 <main+0x19ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e72:	8e 01       	movw	r16, r28
    2e74:	07 5a       	subi	r16, 0xA7	; 167
    2e76:	1f 4f       	sbci	r17, 0xFF	; 255
    2e78:	fe 01       	movw	r30, r28
    2e7a:	e5 5a       	subi	r30, 0xA5	; 165
    2e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7e:	60 81       	ld	r22, Z
    2e80:	71 81       	ldd	r23, Z+1	; 0x01
    2e82:	82 81       	ldd	r24, Z+2	; 0x02
    2e84:	93 81       	ldd	r25, Z+3	; 0x03
    2e86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e8a:	dc 01       	movw	r26, r24
    2e8c:	cb 01       	movw	r24, r22
    2e8e:	f8 01       	movw	r30, r16
    2e90:	91 83       	std	Z+1, r25	; 0x01
    2e92:	80 83       	st	Z, r24
    2e94:	de 01       	movw	r26, r28
    2e96:	ab 5a       	subi	r26, 0xAB	; 171
    2e98:	bf 4f       	sbci	r27, 0xFF	; 255
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e7 5a       	subi	r30, 0xA7	; 167
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	80 81       	ld	r24, Z
    2ea2:	91 81       	ldd	r25, Z+1	; 0x01
    2ea4:	8d 93       	st	X+, r24
    2ea6:	9c 93       	st	X, r25
    2ea8:	fe 01       	movw	r30, r28
    2eaa:	eb 5a       	subi	r30, 0xAB	; 171
    2eac:	ff 4f       	sbci	r31, 0xFF	; 255
    2eae:	80 81       	ld	r24, Z
    2eb0:	91 81       	ldd	r25, Z+1	; 0x01
    2eb2:	01 97       	sbiw	r24, 0x01	; 1
    2eb4:	f1 f7       	brne	.-4      	; 0x2eb2 <main+0x19dc>
    2eb6:	fe 01       	movw	r30, r28
    2eb8:	eb 5a       	subi	r30, 0xAB	; 171
    2eba:	ff 4f       	sbci	r31, 0xFF	; 255
    2ebc:	91 83       	std	Z+1, r25	; 0x01
    2ebe:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    2ec0:	ce 01       	movw	r24, r28
    2ec2:	87 5b       	subi	r24, 0xB7	; 183
    2ec4:	9e 4f       	sbci	r25, 0xFE	; 254
    2ec6:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber6(&SevenSegment1);
    2eca:	ce 01       	movw	r24, r28
    2ecc:	86 5b       	subi	r24, 0xB6	; 182
    2ece:	9e 4f       	sbci	r25, 0xFE	; 254
    2ed0:	0e 94 23 0a 	call	0x1446	; 0x1446 <SevenSegment_voidDisplayNumber6>
    2ed4:	fe 01       	movw	r30, r28
    2ed6:	ef 5a       	subi	r30, 0xAF	; 175
    2ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eda:	80 e0       	ldi	r24, 0x00	; 0
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	aa e7       	ldi	r26, 0x7A	; 122
    2ee0:	b4 e4       	ldi	r27, 0x44	; 68
    2ee2:	80 83       	st	Z, r24
    2ee4:	91 83       	std	Z+1, r25	; 0x01
    2ee6:	a2 83       	std	Z+2, r26	; 0x02
    2ee8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2eea:	8e 01       	movw	r16, r28
    2eec:	03 5b       	subi	r16, 0xB3	; 179
    2eee:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef0:	fe 01       	movw	r30, r28
    2ef2:	ef 5a       	subi	r30, 0xAF	; 175
    2ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef6:	60 81       	ld	r22, Z
    2ef8:	71 81       	ldd	r23, Z+1	; 0x01
    2efa:	82 81       	ldd	r24, Z+2	; 0x02
    2efc:	93 81       	ldd	r25, Z+3	; 0x03
    2efe:	20 e0       	ldi	r18, 0x00	; 0
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	48 e4       	ldi	r20, 0x48	; 72
    2f04:	53 e4       	ldi	r21, 0x43	; 67
    2f06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f0a:	dc 01       	movw	r26, r24
    2f0c:	cb 01       	movw	r24, r22
    2f0e:	f8 01       	movw	r30, r16
    2f10:	80 83       	st	Z, r24
    2f12:	91 83       	std	Z+1, r25	; 0x01
    2f14:	a2 83       	std	Z+2, r26	; 0x02
    2f16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f18:	fe 01       	movw	r30, r28
    2f1a:	e3 5b       	subi	r30, 0xB3	; 179
    2f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1e:	60 81       	ld	r22, Z
    2f20:	71 81       	ldd	r23, Z+1	; 0x01
    2f22:	82 81       	ldd	r24, Z+2	; 0x02
    2f24:	93 81       	ldd	r25, Z+3	; 0x03
    2f26:	20 e0       	ldi	r18, 0x00	; 0
    2f28:	30 e0       	ldi	r19, 0x00	; 0
    2f2a:	40 e8       	ldi	r20, 0x80	; 128
    2f2c:	5f e3       	ldi	r21, 0x3F	; 63
    2f2e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f32:	88 23       	and	r24, r24
    2f34:	44 f4       	brge	.+16     	; 0x2f46 <main+0x1a70>
		__ticks = 1;
    2f36:	fe 01       	movw	r30, r28
    2f38:	e5 5b       	subi	r30, 0xB5	; 181
    2f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3c:	81 e0       	ldi	r24, 0x01	; 1
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	91 83       	std	Z+1, r25	; 0x01
    2f42:	80 83       	st	Z, r24
    2f44:	64 c0       	rjmp	.+200    	; 0x300e <main+0x1b38>
	else if (__tmp > 65535)
    2f46:	fe 01       	movw	r30, r28
    2f48:	e3 5b       	subi	r30, 0xB3	; 179
    2f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4c:	60 81       	ld	r22, Z
    2f4e:	71 81       	ldd	r23, Z+1	; 0x01
    2f50:	82 81       	ldd	r24, Z+2	; 0x02
    2f52:	93 81       	ldd	r25, Z+3	; 0x03
    2f54:	20 e0       	ldi	r18, 0x00	; 0
    2f56:	3f ef       	ldi	r19, 0xFF	; 255
    2f58:	4f e7       	ldi	r20, 0x7F	; 127
    2f5a:	57 e4       	ldi	r21, 0x47	; 71
    2f5c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f60:	18 16       	cp	r1, r24
    2f62:	0c f0       	brlt	.+2      	; 0x2f66 <main+0x1a90>
    2f64:	43 c0       	rjmp	.+134    	; 0x2fec <main+0x1b16>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f66:	fe 01       	movw	r30, r28
    2f68:	ef 5a       	subi	r30, 0xAF	; 175
    2f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f6c:	60 81       	ld	r22, Z
    2f6e:	71 81       	ldd	r23, Z+1	; 0x01
    2f70:	82 81       	ldd	r24, Z+2	; 0x02
    2f72:	93 81       	ldd	r25, Z+3	; 0x03
    2f74:	20 e0       	ldi	r18, 0x00	; 0
    2f76:	30 e0       	ldi	r19, 0x00	; 0
    2f78:	40 e2       	ldi	r20, 0x20	; 32
    2f7a:	51 e4       	ldi	r21, 0x41	; 65
    2f7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f80:	dc 01       	movw	r26, r24
    2f82:	cb 01       	movw	r24, r22
    2f84:	8e 01       	movw	r16, r28
    2f86:	05 5b       	subi	r16, 0xB5	; 181
    2f88:	1f 4f       	sbci	r17, 0xFF	; 255
    2f8a:	bc 01       	movw	r22, r24
    2f8c:	cd 01       	movw	r24, r26
    2f8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f92:	dc 01       	movw	r26, r24
    2f94:	cb 01       	movw	r24, r22
    2f96:	f8 01       	movw	r30, r16
    2f98:	91 83       	std	Z+1, r25	; 0x01
    2f9a:	80 83       	st	Z, r24
    2f9c:	1f c0       	rjmp	.+62     	; 0x2fdc <main+0x1b06>
    2f9e:	fe 01       	movw	r30, r28
    2fa0:	e7 5b       	subi	r30, 0xB7	; 183
    2fa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa4:	84 e1       	ldi	r24, 0x14	; 20
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	91 83       	std	Z+1, r25	; 0x01
    2faa:	80 83       	st	Z, r24
    2fac:	fe 01       	movw	r30, r28
    2fae:	e7 5b       	subi	r30, 0xB7	; 183
    2fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb2:	80 81       	ld	r24, Z
    2fb4:	91 81       	ldd	r25, Z+1	; 0x01
    2fb6:	01 97       	sbiw	r24, 0x01	; 1
    2fb8:	f1 f7       	brne	.-4      	; 0x2fb6 <main+0x1ae0>
    2fba:	fe 01       	movw	r30, r28
    2fbc:	e7 5b       	subi	r30, 0xB7	; 183
    2fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc0:	91 83       	std	Z+1, r25	; 0x01
    2fc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fc4:	de 01       	movw	r26, r28
    2fc6:	a5 5b       	subi	r26, 0xB5	; 181
    2fc8:	bf 4f       	sbci	r27, 0xFF	; 255
    2fca:	fe 01       	movw	r30, r28
    2fcc:	e5 5b       	subi	r30, 0xB5	; 181
    2fce:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd0:	80 81       	ld	r24, Z
    2fd2:	91 81       	ldd	r25, Z+1	; 0x01
    2fd4:	01 97       	sbiw	r24, 0x01	; 1
    2fd6:	11 96       	adiw	r26, 0x01	; 1
    2fd8:	9c 93       	st	X, r25
    2fda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fdc:	fe 01       	movw	r30, r28
    2fde:	e5 5b       	subi	r30, 0xB5	; 181
    2fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe2:	80 81       	ld	r24, Z
    2fe4:	91 81       	ldd	r25, Z+1	; 0x01
    2fe6:	00 97       	sbiw	r24, 0x00	; 0
    2fe8:	d1 f6       	brne	.-76     	; 0x2f9e <main+0x1ac8>
    2fea:	27 c0       	rjmp	.+78     	; 0x303a <main+0x1b64>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fec:	8e 01       	movw	r16, r28
    2fee:	05 5b       	subi	r16, 0xB5	; 181
    2ff0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ff2:	fe 01       	movw	r30, r28
    2ff4:	e3 5b       	subi	r30, 0xB3	; 179
    2ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff8:	60 81       	ld	r22, Z
    2ffa:	71 81       	ldd	r23, Z+1	; 0x01
    2ffc:	82 81       	ldd	r24, Z+2	; 0x02
    2ffe:	93 81       	ldd	r25, Z+3	; 0x03
    3000:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3004:	dc 01       	movw	r26, r24
    3006:	cb 01       	movw	r24, r22
    3008:	f8 01       	movw	r30, r16
    300a:	91 83       	std	Z+1, r25	; 0x01
    300c:	80 83       	st	Z, r24
    300e:	de 01       	movw	r26, r28
    3010:	a9 5b       	subi	r26, 0xB9	; 185
    3012:	bf 4f       	sbci	r27, 0xFF	; 255
    3014:	fe 01       	movw	r30, r28
    3016:	e5 5b       	subi	r30, 0xB5	; 181
    3018:	ff 4f       	sbci	r31, 0xFF	; 255
    301a:	80 81       	ld	r24, Z
    301c:	91 81       	ldd	r25, Z+1	; 0x01
    301e:	8d 93       	st	X+, r24
    3020:	9c 93       	st	X, r25
    3022:	fe 01       	movw	r30, r28
    3024:	e9 5b       	subi	r30, 0xB9	; 185
    3026:	ff 4f       	sbci	r31, 0xFF	; 255
    3028:	80 81       	ld	r24, Z
    302a:	91 81       	ldd	r25, Z+1	; 0x01
    302c:	01 97       	sbiw	r24, 0x01	; 1
    302e:	f1 f7       	brne	.-4      	; 0x302c <main+0x1b56>
    3030:	fe 01       	movw	r30, r28
    3032:	e9 5b       	subi	r30, 0xB9	; 185
    3034:	ff 4f       	sbci	r31, 0xFF	; 255
    3036:	91 83       	std	Z+1, r25	; 0x01
    3038:	80 83       	st	Z, r24
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    303a:	ce 01       	movw	r24, r28
    303c:	87 5b       	subi	r24, 0xB7	; 183
    303e:	9e 4f       	sbci	r25, 0xFE	; 254
    3040:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber5(&SevenSegment1);
    3044:	ce 01       	movw	r24, r28
    3046:	86 5b       	subi	r24, 0xB6	; 182
    3048:	9e 4f       	sbci	r25, 0xFE	; 254
    304a:	0e 94 11 0a 	call	0x1422	; 0x1422 <SevenSegment_voidDisplayNumber5>
    304e:	fe 01       	movw	r30, r28
    3050:	ed 5b       	subi	r30, 0xBD	; 189
    3052:	ff 4f       	sbci	r31, 0xFF	; 255
    3054:	80 e0       	ldi	r24, 0x00	; 0
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	aa e7       	ldi	r26, 0x7A	; 122
    305a:	b4 e4       	ldi	r27, 0x44	; 68
    305c:	80 83       	st	Z, r24
    305e:	91 83       	std	Z+1, r25	; 0x01
    3060:	a2 83       	std	Z+2, r26	; 0x02
    3062:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3064:	8e 01       	movw	r16, r28
    3066:	01 5c       	subi	r16, 0xC1	; 193
    3068:	1f 4f       	sbci	r17, 0xFF	; 255
    306a:	fe 01       	movw	r30, r28
    306c:	ed 5b       	subi	r30, 0xBD	; 189
    306e:	ff 4f       	sbci	r31, 0xFF	; 255
    3070:	60 81       	ld	r22, Z
    3072:	71 81       	ldd	r23, Z+1	; 0x01
    3074:	82 81       	ldd	r24, Z+2	; 0x02
    3076:	93 81       	ldd	r25, Z+3	; 0x03
    3078:	20 e0       	ldi	r18, 0x00	; 0
    307a:	30 e0       	ldi	r19, 0x00	; 0
    307c:	48 e4       	ldi	r20, 0x48	; 72
    307e:	53 e4       	ldi	r21, 0x43	; 67
    3080:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3084:	dc 01       	movw	r26, r24
    3086:	cb 01       	movw	r24, r22
    3088:	f8 01       	movw	r30, r16
    308a:	80 83       	st	Z, r24
    308c:	91 83       	std	Z+1, r25	; 0x01
    308e:	a2 83       	std	Z+2, r26	; 0x02
    3090:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3092:	fe 01       	movw	r30, r28
    3094:	ff 96       	adiw	r30, 0x3f	; 63
    3096:	60 81       	ld	r22, Z
    3098:	71 81       	ldd	r23, Z+1	; 0x01
    309a:	82 81       	ldd	r24, Z+2	; 0x02
    309c:	93 81       	ldd	r25, Z+3	; 0x03
    309e:	20 e0       	ldi	r18, 0x00	; 0
    30a0:	30 e0       	ldi	r19, 0x00	; 0
    30a2:	40 e8       	ldi	r20, 0x80	; 128
    30a4:	5f e3       	ldi	r21, 0x3F	; 63
    30a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    30aa:	88 23       	and	r24, r24
    30ac:	2c f4       	brge	.+10     	; 0x30b8 <main+0x1be2>
		__ticks = 1;
    30ae:	81 e0       	ldi	r24, 0x01	; 1
    30b0:	90 e0       	ldi	r25, 0x00	; 0
    30b2:	9e af       	std	Y+62, r25	; 0x3e
    30b4:	8d af       	std	Y+61, r24	; 0x3d
    30b6:	46 c0       	rjmp	.+140    	; 0x3144 <main+0x1c6e>
	else if (__tmp > 65535)
    30b8:	fe 01       	movw	r30, r28
    30ba:	ff 96       	adiw	r30, 0x3f	; 63
    30bc:	60 81       	ld	r22, Z
    30be:	71 81       	ldd	r23, Z+1	; 0x01
    30c0:	82 81       	ldd	r24, Z+2	; 0x02
    30c2:	93 81       	ldd	r25, Z+3	; 0x03
    30c4:	20 e0       	ldi	r18, 0x00	; 0
    30c6:	3f ef       	ldi	r19, 0xFF	; 255
    30c8:	4f e7       	ldi	r20, 0x7F	; 127
    30ca:	57 e4       	ldi	r21, 0x47	; 71
    30cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30d0:	18 16       	cp	r1, r24
    30d2:	64 f5       	brge	.+88     	; 0x312c <main+0x1c56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30d4:	fe 01       	movw	r30, r28
    30d6:	ed 5b       	subi	r30, 0xBD	; 189
    30d8:	ff 4f       	sbci	r31, 0xFF	; 255
    30da:	60 81       	ld	r22, Z
    30dc:	71 81       	ldd	r23, Z+1	; 0x01
    30de:	82 81       	ldd	r24, Z+2	; 0x02
    30e0:	93 81       	ldd	r25, Z+3	; 0x03
    30e2:	20 e0       	ldi	r18, 0x00	; 0
    30e4:	30 e0       	ldi	r19, 0x00	; 0
    30e6:	40 e2       	ldi	r20, 0x20	; 32
    30e8:	51 e4       	ldi	r21, 0x41	; 65
    30ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30ee:	dc 01       	movw	r26, r24
    30f0:	cb 01       	movw	r24, r22
    30f2:	bc 01       	movw	r22, r24
    30f4:	cd 01       	movw	r24, r26
    30f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30fa:	dc 01       	movw	r26, r24
    30fc:	cb 01       	movw	r24, r22
    30fe:	9e af       	std	Y+62, r25	; 0x3e
    3100:	8d af       	std	Y+61, r24	; 0x3d
    3102:	0f c0       	rjmp	.+30     	; 0x3122 <main+0x1c4c>
    3104:	84 e1       	ldi	r24, 0x14	; 20
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	9c af       	std	Y+60, r25	; 0x3c
    310a:	8b af       	std	Y+59, r24	; 0x3b
    310c:	8b ad       	ldd	r24, Y+59	; 0x3b
    310e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3110:	01 97       	sbiw	r24, 0x01	; 1
    3112:	f1 f7       	brne	.-4      	; 0x3110 <main+0x1c3a>
    3114:	9c af       	std	Y+60, r25	; 0x3c
    3116:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3118:	8d ad       	ldd	r24, Y+61	; 0x3d
    311a:	9e ad       	ldd	r25, Y+62	; 0x3e
    311c:	01 97       	sbiw	r24, 0x01	; 1
    311e:	9e af       	std	Y+62, r25	; 0x3e
    3120:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3122:	8d ad       	ldd	r24, Y+61	; 0x3d
    3124:	9e ad       	ldd	r25, Y+62	; 0x3e
    3126:	00 97       	sbiw	r24, 0x00	; 0
    3128:	69 f7       	brne	.-38     	; 0x3104 <main+0x1c2e>
    312a:	16 c0       	rjmp	.+44     	; 0x3158 <main+0x1c82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    312c:	fe 01       	movw	r30, r28
    312e:	ff 96       	adiw	r30, 0x3f	; 63
    3130:	60 81       	ld	r22, Z
    3132:	71 81       	ldd	r23, Z+1	; 0x01
    3134:	82 81       	ldd	r24, Z+2	; 0x02
    3136:	93 81       	ldd	r25, Z+3	; 0x03
    3138:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    313c:	dc 01       	movw	r26, r24
    313e:	cb 01       	movw	r24, r22
    3140:	9e af       	std	Y+62, r25	; 0x3e
    3142:	8d af       	std	Y+61, r24	; 0x3d
    3144:	8d ad       	ldd	r24, Y+61	; 0x3d
    3146:	9e ad       	ldd	r25, Y+62	; 0x3e
    3148:	9a af       	std	Y+58, r25	; 0x3a
    314a:	89 af       	std	Y+57, r24	; 0x39
    314c:	89 ad       	ldd	r24, Y+57	; 0x39
    314e:	9a ad       	ldd	r25, Y+58	; 0x3a
    3150:	01 97       	sbiw	r24, 0x01	; 1
    3152:	f1 f7       	brne	.-4      	; 0x3150 <main+0x1c7a>
    3154:	9a af       	std	Y+58, r25	; 0x3a
    3156:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    3158:	ce 01       	movw	r24, r28
    315a:	87 5b       	subi	r24, 0xB7	; 183
    315c:	9e 4f       	sbci	r25, 0xFE	; 254
    315e:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber4(&SevenSegment1);
    3162:	ce 01       	movw	r24, r28
    3164:	86 5b       	subi	r24, 0xB6	; 182
    3166:	9e 4f       	sbci	r25, 0xFE	; 254
    3168:	0e 94 ff 09 	call	0x13fe	; 0x13fe <SevenSegment_voidDisplayNumber4>
    316c:	80 e0       	ldi	r24, 0x00	; 0
    316e:	90 e0       	ldi	r25, 0x00	; 0
    3170:	aa e7       	ldi	r26, 0x7A	; 122
    3172:	b4 e4       	ldi	r27, 0x44	; 68
    3174:	8d ab       	std	Y+53, r24	; 0x35
    3176:	9e ab       	std	Y+54, r25	; 0x36
    3178:	af ab       	std	Y+55, r26	; 0x37
    317a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    317c:	6d a9       	ldd	r22, Y+53	; 0x35
    317e:	7e a9       	ldd	r23, Y+54	; 0x36
    3180:	8f a9       	ldd	r24, Y+55	; 0x37
    3182:	98 ad       	ldd	r25, Y+56	; 0x38
    3184:	20 e0       	ldi	r18, 0x00	; 0
    3186:	30 e0       	ldi	r19, 0x00	; 0
    3188:	48 e4       	ldi	r20, 0x48	; 72
    318a:	53 e4       	ldi	r21, 0x43	; 67
    318c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	89 ab       	std	Y+49, r24	; 0x31
    3196:	9a ab       	std	Y+50, r25	; 0x32
    3198:	ab ab       	std	Y+51, r26	; 0x33
    319a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    319c:	69 a9       	ldd	r22, Y+49	; 0x31
    319e:	7a a9       	ldd	r23, Y+50	; 0x32
    31a0:	8b a9       	ldd	r24, Y+51	; 0x33
    31a2:	9c a9       	ldd	r25, Y+52	; 0x34
    31a4:	20 e0       	ldi	r18, 0x00	; 0
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	40 e8       	ldi	r20, 0x80	; 128
    31aa:	5f e3       	ldi	r21, 0x3F	; 63
    31ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31b0:	88 23       	and	r24, r24
    31b2:	2c f4       	brge	.+10     	; 0x31be <main+0x1ce8>
		__ticks = 1;
    31b4:	81 e0       	ldi	r24, 0x01	; 1
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	98 ab       	std	Y+48, r25	; 0x30
    31ba:	8f a7       	std	Y+47, r24	; 0x2f
    31bc:	3f c0       	rjmp	.+126    	; 0x323c <main+0x1d66>
	else if (__tmp > 65535)
    31be:	69 a9       	ldd	r22, Y+49	; 0x31
    31c0:	7a a9       	ldd	r23, Y+50	; 0x32
    31c2:	8b a9       	ldd	r24, Y+51	; 0x33
    31c4:	9c a9       	ldd	r25, Y+52	; 0x34
    31c6:	20 e0       	ldi	r18, 0x00	; 0
    31c8:	3f ef       	ldi	r19, 0xFF	; 255
    31ca:	4f e7       	ldi	r20, 0x7F	; 127
    31cc:	57 e4       	ldi	r21, 0x47	; 71
    31ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    31d2:	18 16       	cp	r1, r24
    31d4:	4c f5       	brge	.+82     	; 0x3228 <main+0x1d52>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31d6:	6d a9       	ldd	r22, Y+53	; 0x35
    31d8:	7e a9       	ldd	r23, Y+54	; 0x36
    31da:	8f a9       	ldd	r24, Y+55	; 0x37
    31dc:	98 ad       	ldd	r25, Y+56	; 0x38
    31de:	20 e0       	ldi	r18, 0x00	; 0
    31e0:	30 e0       	ldi	r19, 0x00	; 0
    31e2:	40 e2       	ldi	r20, 0x20	; 32
    31e4:	51 e4       	ldi	r21, 0x41	; 65
    31e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31ea:	dc 01       	movw	r26, r24
    31ec:	cb 01       	movw	r24, r22
    31ee:	bc 01       	movw	r22, r24
    31f0:	cd 01       	movw	r24, r26
    31f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f6:	dc 01       	movw	r26, r24
    31f8:	cb 01       	movw	r24, r22
    31fa:	98 ab       	std	Y+48, r25	; 0x30
    31fc:	8f a7       	std	Y+47, r24	; 0x2f
    31fe:	0f c0       	rjmp	.+30     	; 0x321e <main+0x1d48>
    3200:	84 e1       	ldi	r24, 0x14	; 20
    3202:	90 e0       	ldi	r25, 0x00	; 0
    3204:	9e a7       	std	Y+46, r25	; 0x2e
    3206:	8d a7       	std	Y+45, r24	; 0x2d
    3208:	8d a5       	ldd	r24, Y+45	; 0x2d
    320a:	9e a5       	ldd	r25, Y+46	; 0x2e
    320c:	01 97       	sbiw	r24, 0x01	; 1
    320e:	f1 f7       	brne	.-4      	; 0x320c <main+0x1d36>
    3210:	9e a7       	std	Y+46, r25	; 0x2e
    3212:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3214:	8f a5       	ldd	r24, Y+47	; 0x2f
    3216:	98 a9       	ldd	r25, Y+48	; 0x30
    3218:	01 97       	sbiw	r24, 0x01	; 1
    321a:	98 ab       	std	Y+48, r25	; 0x30
    321c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    321e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3220:	98 a9       	ldd	r25, Y+48	; 0x30
    3222:	00 97       	sbiw	r24, 0x00	; 0
    3224:	69 f7       	brne	.-38     	; 0x3200 <main+0x1d2a>
    3226:	14 c0       	rjmp	.+40     	; 0x3250 <main+0x1d7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3228:	69 a9       	ldd	r22, Y+49	; 0x31
    322a:	7a a9       	ldd	r23, Y+50	; 0x32
    322c:	8b a9       	ldd	r24, Y+51	; 0x33
    322e:	9c a9       	ldd	r25, Y+52	; 0x34
    3230:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3234:	dc 01       	movw	r26, r24
    3236:	cb 01       	movw	r24, r22
    3238:	98 ab       	std	Y+48, r25	; 0x30
    323a:	8f a7       	std	Y+47, r24	; 0x2f
    323c:	8f a5       	ldd	r24, Y+47	; 0x2f
    323e:	98 a9       	ldd	r25, Y+48	; 0x30
    3240:	9c a7       	std	Y+44, r25	; 0x2c
    3242:	8b a7       	std	Y+43, r24	; 0x2b
    3244:	8b a5       	ldd	r24, Y+43	; 0x2b
    3246:	9c a5       	ldd	r25, Y+44	; 0x2c
    3248:	01 97       	sbiw	r24, 0x01	; 1
    324a:	f1 f7       	brne	.-4      	; 0x3248 <main+0x1d72>
    324c:	9c a7       	std	Y+44, r25	; 0x2c
    324e:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    3250:	ce 01       	movw	r24, r28
    3252:	87 5b       	subi	r24, 0xB7	; 183
    3254:	9e 4f       	sbci	r25, 0xFE	; 254
    3256:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber3(&SevenSegment1);
    325a:	ce 01       	movw	r24, r28
    325c:	86 5b       	subi	r24, 0xB6	; 182
    325e:	9e 4f       	sbci	r25, 0xFE	; 254
    3260:	0e 94 ed 09 	call	0x13da	; 0x13da <SevenSegment_voidDisplayNumber3>
    3264:	80 e0       	ldi	r24, 0x00	; 0
    3266:	90 e0       	ldi	r25, 0x00	; 0
    3268:	aa e7       	ldi	r26, 0x7A	; 122
    326a:	b4 e4       	ldi	r27, 0x44	; 68
    326c:	8f a3       	std	Y+39, r24	; 0x27
    326e:	98 a7       	std	Y+40, r25	; 0x28
    3270:	a9 a7       	std	Y+41, r26	; 0x29
    3272:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3274:	6f a1       	ldd	r22, Y+39	; 0x27
    3276:	78 a5       	ldd	r23, Y+40	; 0x28
    3278:	89 a5       	ldd	r24, Y+41	; 0x29
    327a:	9a a5       	ldd	r25, Y+42	; 0x2a
    327c:	20 e0       	ldi	r18, 0x00	; 0
    327e:	30 e0       	ldi	r19, 0x00	; 0
    3280:	48 e4       	ldi	r20, 0x48	; 72
    3282:	53 e4       	ldi	r21, 0x43	; 67
    3284:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3288:	dc 01       	movw	r26, r24
    328a:	cb 01       	movw	r24, r22
    328c:	8b a3       	std	Y+35, r24	; 0x23
    328e:	9c a3       	std	Y+36, r25	; 0x24
    3290:	ad a3       	std	Y+37, r26	; 0x25
    3292:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3294:	6b a1       	ldd	r22, Y+35	; 0x23
    3296:	7c a1       	ldd	r23, Y+36	; 0x24
    3298:	8d a1       	ldd	r24, Y+37	; 0x25
    329a:	9e a1       	ldd	r25, Y+38	; 0x26
    329c:	20 e0       	ldi	r18, 0x00	; 0
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	40 e8       	ldi	r20, 0x80	; 128
    32a2:	5f e3       	ldi	r21, 0x3F	; 63
    32a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32a8:	88 23       	and	r24, r24
    32aa:	2c f4       	brge	.+10     	; 0x32b6 <main+0x1de0>
		__ticks = 1;
    32ac:	81 e0       	ldi	r24, 0x01	; 1
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	9a a3       	std	Y+34, r25	; 0x22
    32b2:	89 a3       	std	Y+33, r24	; 0x21
    32b4:	3f c0       	rjmp	.+126    	; 0x3334 <main+0x1e5e>
	else if (__tmp > 65535)
    32b6:	6b a1       	ldd	r22, Y+35	; 0x23
    32b8:	7c a1       	ldd	r23, Y+36	; 0x24
    32ba:	8d a1       	ldd	r24, Y+37	; 0x25
    32bc:	9e a1       	ldd	r25, Y+38	; 0x26
    32be:	20 e0       	ldi	r18, 0x00	; 0
    32c0:	3f ef       	ldi	r19, 0xFF	; 255
    32c2:	4f e7       	ldi	r20, 0x7F	; 127
    32c4:	57 e4       	ldi	r21, 0x47	; 71
    32c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32ca:	18 16       	cp	r1, r24
    32cc:	4c f5       	brge	.+82     	; 0x3320 <main+0x1e4a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32ce:	6f a1       	ldd	r22, Y+39	; 0x27
    32d0:	78 a5       	ldd	r23, Y+40	; 0x28
    32d2:	89 a5       	ldd	r24, Y+41	; 0x29
    32d4:	9a a5       	ldd	r25, Y+42	; 0x2a
    32d6:	20 e0       	ldi	r18, 0x00	; 0
    32d8:	30 e0       	ldi	r19, 0x00	; 0
    32da:	40 e2       	ldi	r20, 0x20	; 32
    32dc:	51 e4       	ldi	r21, 0x41	; 65
    32de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32e2:	dc 01       	movw	r26, r24
    32e4:	cb 01       	movw	r24, r22
    32e6:	bc 01       	movw	r22, r24
    32e8:	cd 01       	movw	r24, r26
    32ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32ee:	dc 01       	movw	r26, r24
    32f0:	cb 01       	movw	r24, r22
    32f2:	9a a3       	std	Y+34, r25	; 0x22
    32f4:	89 a3       	std	Y+33, r24	; 0x21
    32f6:	0f c0       	rjmp	.+30     	; 0x3316 <main+0x1e40>
    32f8:	84 e1       	ldi	r24, 0x14	; 20
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	98 a3       	std	Y+32, r25	; 0x20
    32fe:	8f 8f       	std	Y+31, r24	; 0x1f
    3300:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3302:	98 a1       	ldd	r25, Y+32	; 0x20
    3304:	01 97       	sbiw	r24, 0x01	; 1
    3306:	f1 f7       	brne	.-4      	; 0x3304 <main+0x1e2e>
    3308:	98 a3       	std	Y+32, r25	; 0x20
    330a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    330c:	89 a1       	ldd	r24, Y+33	; 0x21
    330e:	9a a1       	ldd	r25, Y+34	; 0x22
    3310:	01 97       	sbiw	r24, 0x01	; 1
    3312:	9a a3       	std	Y+34, r25	; 0x22
    3314:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3316:	89 a1       	ldd	r24, Y+33	; 0x21
    3318:	9a a1       	ldd	r25, Y+34	; 0x22
    331a:	00 97       	sbiw	r24, 0x00	; 0
    331c:	69 f7       	brne	.-38     	; 0x32f8 <main+0x1e22>
    331e:	14 c0       	rjmp	.+40     	; 0x3348 <main+0x1e72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3320:	6b a1       	ldd	r22, Y+35	; 0x23
    3322:	7c a1       	ldd	r23, Y+36	; 0x24
    3324:	8d a1       	ldd	r24, Y+37	; 0x25
    3326:	9e a1       	ldd	r25, Y+38	; 0x26
    3328:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    332c:	dc 01       	movw	r26, r24
    332e:	cb 01       	movw	r24, r22
    3330:	9a a3       	std	Y+34, r25	; 0x22
    3332:	89 a3       	std	Y+33, r24	; 0x21
    3334:	89 a1       	ldd	r24, Y+33	; 0x21
    3336:	9a a1       	ldd	r25, Y+34	; 0x22
    3338:	9e 8f       	std	Y+30, r25	; 0x1e
    333a:	8d 8f       	std	Y+29, r24	; 0x1d
    333c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    333e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3340:	01 97       	sbiw	r24, 0x01	; 1
    3342:	f1 f7       	brne	.-4      	; 0x3340 <main+0x1e6a>
    3344:	9e 8f       	std	Y+30, r25	; 0x1e
    3346:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    3348:	ce 01       	movw	r24, r28
    334a:	87 5b       	subi	r24, 0xB7	; 183
    334c:	9e 4f       	sbci	r25, 0xFE	; 254
    334e:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber2(&SevenSegment1);
    3352:	ce 01       	movw	r24, r28
    3354:	86 5b       	subi	r24, 0xB6	; 182
    3356:	9e 4f       	sbci	r25, 0xFE	; 254
    3358:	0e 94 db 09 	call	0x13b6	; 0x13b6 <SevenSegment_voidDisplayNumber2>
    335c:	80 e0       	ldi	r24, 0x00	; 0
    335e:	90 e0       	ldi	r25, 0x00	; 0
    3360:	aa e7       	ldi	r26, 0x7A	; 122
    3362:	b4 e4       	ldi	r27, 0x44	; 68
    3364:	89 8f       	std	Y+25, r24	; 0x19
    3366:	9a 8f       	std	Y+26, r25	; 0x1a
    3368:	ab 8f       	std	Y+27, r26	; 0x1b
    336a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    336c:	69 8d       	ldd	r22, Y+25	; 0x19
    336e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3370:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3372:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3374:	20 e0       	ldi	r18, 0x00	; 0
    3376:	30 e0       	ldi	r19, 0x00	; 0
    3378:	48 e4       	ldi	r20, 0x48	; 72
    337a:	53 e4       	ldi	r21, 0x43	; 67
    337c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3380:	dc 01       	movw	r26, r24
    3382:	cb 01       	movw	r24, r22
    3384:	8d 8b       	std	Y+21, r24	; 0x15
    3386:	9e 8b       	std	Y+22, r25	; 0x16
    3388:	af 8b       	std	Y+23, r26	; 0x17
    338a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    338c:	6d 89       	ldd	r22, Y+21	; 0x15
    338e:	7e 89       	ldd	r23, Y+22	; 0x16
    3390:	8f 89       	ldd	r24, Y+23	; 0x17
    3392:	98 8d       	ldd	r25, Y+24	; 0x18
    3394:	20 e0       	ldi	r18, 0x00	; 0
    3396:	30 e0       	ldi	r19, 0x00	; 0
    3398:	40 e8       	ldi	r20, 0x80	; 128
    339a:	5f e3       	ldi	r21, 0x3F	; 63
    339c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    33a0:	88 23       	and	r24, r24
    33a2:	2c f4       	brge	.+10     	; 0x33ae <main+0x1ed8>
		__ticks = 1;
    33a4:	81 e0       	ldi	r24, 0x01	; 1
    33a6:	90 e0       	ldi	r25, 0x00	; 0
    33a8:	9c 8b       	std	Y+20, r25	; 0x14
    33aa:	8b 8b       	std	Y+19, r24	; 0x13
    33ac:	3f c0       	rjmp	.+126    	; 0x342c <main+0x1f56>
	else if (__tmp > 65535)
    33ae:	6d 89       	ldd	r22, Y+21	; 0x15
    33b0:	7e 89       	ldd	r23, Y+22	; 0x16
    33b2:	8f 89       	ldd	r24, Y+23	; 0x17
    33b4:	98 8d       	ldd	r25, Y+24	; 0x18
    33b6:	20 e0       	ldi	r18, 0x00	; 0
    33b8:	3f ef       	ldi	r19, 0xFF	; 255
    33ba:	4f e7       	ldi	r20, 0x7F	; 127
    33bc:	57 e4       	ldi	r21, 0x47	; 71
    33be:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    33c2:	18 16       	cp	r1, r24
    33c4:	4c f5       	brge	.+82     	; 0x3418 <main+0x1f42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33c6:	69 8d       	ldd	r22, Y+25	; 0x19
    33c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    33ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    33ce:	20 e0       	ldi	r18, 0x00	; 0
    33d0:	30 e0       	ldi	r19, 0x00	; 0
    33d2:	40 e2       	ldi	r20, 0x20	; 32
    33d4:	51 e4       	ldi	r21, 0x41	; 65
    33d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33da:	dc 01       	movw	r26, r24
    33dc:	cb 01       	movw	r24, r22
    33de:	bc 01       	movw	r22, r24
    33e0:	cd 01       	movw	r24, r26
    33e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	9c 8b       	std	Y+20, r25	; 0x14
    33ec:	8b 8b       	std	Y+19, r24	; 0x13
    33ee:	0f c0       	rjmp	.+30     	; 0x340e <main+0x1f38>
    33f0:	84 e1       	ldi	r24, 0x14	; 20
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	9a 8b       	std	Y+18, r25	; 0x12
    33f6:	89 8b       	std	Y+17, r24	; 0x11
    33f8:	89 89       	ldd	r24, Y+17	; 0x11
    33fa:	9a 89       	ldd	r25, Y+18	; 0x12
    33fc:	01 97       	sbiw	r24, 0x01	; 1
    33fe:	f1 f7       	brne	.-4      	; 0x33fc <main+0x1f26>
    3400:	9a 8b       	std	Y+18, r25	; 0x12
    3402:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3404:	8b 89       	ldd	r24, Y+19	; 0x13
    3406:	9c 89       	ldd	r25, Y+20	; 0x14
    3408:	01 97       	sbiw	r24, 0x01	; 1
    340a:	9c 8b       	std	Y+20, r25	; 0x14
    340c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    340e:	8b 89       	ldd	r24, Y+19	; 0x13
    3410:	9c 89       	ldd	r25, Y+20	; 0x14
    3412:	00 97       	sbiw	r24, 0x00	; 0
    3414:	69 f7       	brne	.-38     	; 0x33f0 <main+0x1f1a>
    3416:	14 c0       	rjmp	.+40     	; 0x3440 <main+0x1f6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3418:	6d 89       	ldd	r22, Y+21	; 0x15
    341a:	7e 89       	ldd	r23, Y+22	; 0x16
    341c:	8f 89       	ldd	r24, Y+23	; 0x17
    341e:	98 8d       	ldd	r25, Y+24	; 0x18
    3420:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3424:	dc 01       	movw	r26, r24
    3426:	cb 01       	movw	r24, r22
    3428:	9c 8b       	std	Y+20, r25	; 0x14
    342a:	8b 8b       	std	Y+19, r24	; 0x13
    342c:	8b 89       	ldd	r24, Y+19	; 0x13
    342e:	9c 89       	ldd	r25, Y+20	; 0x14
    3430:	98 8b       	std	Y+16, r25	; 0x10
    3432:	8f 87       	std	Y+15, r24	; 0x0f
    3434:	8f 85       	ldd	r24, Y+15	; 0x0f
    3436:	98 89       	ldd	r25, Y+16	; 0x10
    3438:	01 97       	sbiw	r24, 0x01	; 1
    343a:	f1 f7       	brne	.-4      	; 0x3438 <main+0x1f62>
    343c:	98 8b       	std	Y+16, r25	; 0x10
    343e:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1000);
		SevenSegment_voidDisplayNumber0(&SevenSegment0);
    3440:	ce 01       	movw	r24, r28
    3442:	87 5b       	subi	r24, 0xB7	; 183
    3444:	9e 4f       	sbci	r25, 0xFE	; 254
    3446:	0e 94 b7 09 	call	0x136e	; 0x136e <SevenSegment_voidDisplayNumber0>
		SevenSegment_voidDisplayNumber1(&SevenSegment1);
    344a:	ce 01       	movw	r24, r28
    344c:	86 5b       	subi	r24, 0xB6	; 182
    344e:	9e 4f       	sbci	r25, 0xFE	; 254
    3450:	0e 94 c9 09 	call	0x1392	; 0x1392 <SevenSegment_voidDisplayNumber1>
    3454:	80 e0       	ldi	r24, 0x00	; 0
    3456:	90 e0       	ldi	r25, 0x00	; 0
    3458:	aa e7       	ldi	r26, 0x7A	; 122
    345a:	b4 e4       	ldi	r27, 0x44	; 68
    345c:	8b 87       	std	Y+11, r24	; 0x0b
    345e:	9c 87       	std	Y+12, r25	; 0x0c
    3460:	ad 87       	std	Y+13, r26	; 0x0d
    3462:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3464:	6b 85       	ldd	r22, Y+11	; 0x0b
    3466:	7c 85       	ldd	r23, Y+12	; 0x0c
    3468:	8d 85       	ldd	r24, Y+13	; 0x0d
    346a:	9e 85       	ldd	r25, Y+14	; 0x0e
    346c:	20 e0       	ldi	r18, 0x00	; 0
    346e:	30 e0       	ldi	r19, 0x00	; 0
    3470:	48 e4       	ldi	r20, 0x48	; 72
    3472:	53 e4       	ldi	r21, 0x43	; 67
    3474:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3478:	dc 01       	movw	r26, r24
    347a:	cb 01       	movw	r24, r22
    347c:	8f 83       	std	Y+7, r24	; 0x07
    347e:	98 87       	std	Y+8, r25	; 0x08
    3480:	a9 87       	std	Y+9, r26	; 0x09
    3482:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3484:	6f 81       	ldd	r22, Y+7	; 0x07
    3486:	78 85       	ldd	r23, Y+8	; 0x08
    3488:	89 85       	ldd	r24, Y+9	; 0x09
    348a:	9a 85       	ldd	r25, Y+10	; 0x0a
    348c:	20 e0       	ldi	r18, 0x00	; 0
    348e:	30 e0       	ldi	r19, 0x00	; 0
    3490:	40 e8       	ldi	r20, 0x80	; 128
    3492:	5f e3       	ldi	r21, 0x3F	; 63
    3494:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3498:	88 23       	and	r24, r24
    349a:	2c f4       	brge	.+10     	; 0x34a6 <main+0x1fd0>
		__ticks = 1;
    349c:	81 e0       	ldi	r24, 0x01	; 1
    349e:	90 e0       	ldi	r25, 0x00	; 0
    34a0:	9e 83       	std	Y+6, r25	; 0x06
    34a2:	8d 83       	std	Y+5, r24	; 0x05
    34a4:	40 c0       	rjmp	.+128    	; 0x3526 <main+0x2050>
	else if (__tmp > 65535)
    34a6:	6f 81       	ldd	r22, Y+7	; 0x07
    34a8:	78 85       	ldd	r23, Y+8	; 0x08
    34aa:	89 85       	ldd	r24, Y+9	; 0x09
    34ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    34ae:	20 e0       	ldi	r18, 0x00	; 0
    34b0:	3f ef       	ldi	r19, 0xFF	; 255
    34b2:	4f e7       	ldi	r20, 0x7F	; 127
    34b4:	57 e4       	ldi	r21, 0x47	; 71
    34b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34ba:	18 16       	cp	r1, r24
    34bc:	54 f5       	brge	.+84     	; 0x3512 <main+0x203c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34be:	6b 85       	ldd	r22, Y+11	; 0x0b
    34c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    34c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    34c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    34c6:	20 e0       	ldi	r18, 0x00	; 0
    34c8:	30 e0       	ldi	r19, 0x00	; 0
    34ca:	40 e2       	ldi	r20, 0x20	; 32
    34cc:	51 e4       	ldi	r21, 0x41	; 65
    34ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	bc 01       	movw	r22, r24
    34d8:	cd 01       	movw	r24, r26
    34da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34de:	dc 01       	movw	r26, r24
    34e0:	cb 01       	movw	r24, r22
    34e2:	9e 83       	std	Y+6, r25	; 0x06
    34e4:	8d 83       	std	Y+5, r24	; 0x05
    34e6:	0f c0       	rjmp	.+30     	; 0x3506 <main+0x2030>
    34e8:	84 e1       	ldi	r24, 0x14	; 20
    34ea:	90 e0       	ldi	r25, 0x00	; 0
    34ec:	9c 83       	std	Y+4, r25	; 0x04
    34ee:	8b 83       	std	Y+3, r24	; 0x03
    34f0:	8b 81       	ldd	r24, Y+3	; 0x03
    34f2:	9c 81       	ldd	r25, Y+4	; 0x04
    34f4:	01 97       	sbiw	r24, 0x01	; 1
    34f6:	f1 f7       	brne	.-4      	; 0x34f4 <main+0x201e>
    34f8:	9c 83       	std	Y+4, r25	; 0x04
    34fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34fc:	8d 81       	ldd	r24, Y+5	; 0x05
    34fe:	9e 81       	ldd	r25, Y+6	; 0x06
    3500:	01 97       	sbiw	r24, 0x01	; 1
    3502:	9e 83       	std	Y+6, r25	; 0x06
    3504:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3506:	8d 81       	ldd	r24, Y+5	; 0x05
    3508:	9e 81       	ldd	r25, Y+6	; 0x06
    350a:	00 97       	sbiw	r24, 0x00	; 0
    350c:	69 f7       	brne	.-38     	; 0x34e8 <main+0x2012>
    350e:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <main+0x94>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3512:	6f 81       	ldd	r22, Y+7	; 0x07
    3514:	78 85       	ldd	r23, Y+8	; 0x08
    3516:	89 85       	ldd	r24, Y+9	; 0x09
    3518:	9a 85       	ldd	r25, Y+10	; 0x0a
    351a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    351e:	dc 01       	movw	r26, r24
    3520:	cb 01       	movw	r24, r22
    3522:	9e 83       	std	Y+6, r25	; 0x06
    3524:	8d 83       	std	Y+5, r24	; 0x05
    3526:	8d 81       	ldd	r24, Y+5	; 0x05
    3528:	9e 81       	ldd	r25, Y+6	; 0x06
    352a:	9a 83       	std	Y+2, r25	; 0x02
    352c:	89 83       	std	Y+1, r24	; 0x01
    352e:	89 81       	ldd	r24, Y+1	; 0x01
    3530:	9a 81       	ldd	r25, Y+2	; 0x02
    3532:	01 97       	sbiw	r24, 0x01	; 1
    3534:	f1 f7       	brne	.-4      	; 0x3532 <main+0x205c>
    3536:	9a 83       	std	Y+2, r25	; 0x02
    3538:	89 83       	std	Y+1, r24	; 0x01
    353a:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <main+0x94>

0000353e <__prologue_saves__>:
    353e:	2f 92       	push	r2
    3540:	3f 92       	push	r3
    3542:	4f 92       	push	r4
    3544:	5f 92       	push	r5
    3546:	6f 92       	push	r6
    3548:	7f 92       	push	r7
    354a:	8f 92       	push	r8
    354c:	9f 92       	push	r9
    354e:	af 92       	push	r10
    3550:	bf 92       	push	r11
    3552:	cf 92       	push	r12
    3554:	df 92       	push	r13
    3556:	ef 92       	push	r14
    3558:	ff 92       	push	r15
    355a:	0f 93       	push	r16
    355c:	1f 93       	push	r17
    355e:	cf 93       	push	r28
    3560:	df 93       	push	r29
    3562:	cd b7       	in	r28, 0x3d	; 61
    3564:	de b7       	in	r29, 0x3e	; 62
    3566:	ca 1b       	sub	r28, r26
    3568:	db 0b       	sbc	r29, r27
    356a:	0f b6       	in	r0, 0x3f	; 63
    356c:	f8 94       	cli
    356e:	de bf       	out	0x3e, r29	; 62
    3570:	0f be       	out	0x3f, r0	; 63
    3572:	cd bf       	out	0x3d, r28	; 61
    3574:	09 94       	ijmp

00003576 <__epilogue_restores__>:
    3576:	2a 88       	ldd	r2, Y+18	; 0x12
    3578:	39 88       	ldd	r3, Y+17	; 0x11
    357a:	48 88       	ldd	r4, Y+16	; 0x10
    357c:	5f 84       	ldd	r5, Y+15	; 0x0f
    357e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3580:	7d 84       	ldd	r7, Y+13	; 0x0d
    3582:	8c 84       	ldd	r8, Y+12	; 0x0c
    3584:	9b 84       	ldd	r9, Y+11	; 0x0b
    3586:	aa 84       	ldd	r10, Y+10	; 0x0a
    3588:	b9 84       	ldd	r11, Y+9	; 0x09
    358a:	c8 84       	ldd	r12, Y+8	; 0x08
    358c:	df 80       	ldd	r13, Y+7	; 0x07
    358e:	ee 80       	ldd	r14, Y+6	; 0x06
    3590:	fd 80       	ldd	r15, Y+5	; 0x05
    3592:	0c 81       	ldd	r16, Y+4	; 0x04
    3594:	1b 81       	ldd	r17, Y+3	; 0x03
    3596:	aa 81       	ldd	r26, Y+2	; 0x02
    3598:	b9 81       	ldd	r27, Y+1	; 0x01
    359a:	ce 0f       	add	r28, r30
    359c:	d1 1d       	adc	r29, r1
    359e:	0f b6       	in	r0, 0x3f	; 63
    35a0:	f8 94       	cli
    35a2:	de bf       	out	0x3e, r29	; 62
    35a4:	0f be       	out	0x3f, r0	; 63
    35a6:	cd bf       	out	0x3d, r28	; 61
    35a8:	ed 01       	movw	r28, r26
    35aa:	08 95       	ret

000035ac <_exit>:
    35ac:	f8 94       	cli

000035ae <__stop_program>:
    35ae:	ff cf       	rjmp	.-2      	; 0x35ae <__stop_program>
